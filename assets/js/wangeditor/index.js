(function (global, factory) {
  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :
  typeof define === 'function' && define.amd ? define(['exports'], factory) :
  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.wangEditor = {}));
}(this, (function (exports) { 'use strict';

  /**
   * @description browser polyfill
   * @author wangfupeng
   */
  // 部分浏览器不支持 globalThis
  console.log(typeof globalThis === 'undefined');
  if (typeof globalThis === 'undefined') {
      // @ts-ignore
      window.globalThis = window;
  }

  /*!
   * isobject <https://github.com/jonschlinkert/isobject>
   *
   * Copyright (c) 2014-2017, Jon Schlinkert.
   * Released under the MIT License.
   */

  function isObject$5(val) {
    return val != null && typeof val === 'object' && Array.isArray(val) === false;
  }

  /*!
   * is-plain-object <https://github.com/jonschlinkert/is-plain-object>
   *
   * Copyright (c) 2014-2017, Jon Schlinkert.
   * Released under the MIT License.
   */

  function isObjectObject(o) {
    return isObject$5(o) === true
      && Object.prototype.toString.call(o) === '[object Object]';
  }

  function isPlainObject(o) {
    var ctor,prot;

    if (isObjectObject(o) === false) return false;

    // If has modified constructor
    ctor = o.constructor;
    if (typeof ctor !== 'function') return false;

    // If has modified prototype
    prot = ctor.prototype;
    if (isObjectObject(prot) === false) return false;

    // If constructor does not have an Object-specific method
    if (prot.hasOwnProperty('isPrototypeOf') === false) {
      return false;
    }

    // Most likely a plain Object
    return true;
  }

  var commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};

  function getAugmentedNamespace(n) {
  	if (n.__esModule) return n;
  	var a = Object.defineProperty({}, '__esModule', {value: true});
  	Object.keys(n).forEach(function (k) {
  		var d = Object.getOwnPropertyDescriptor(n, k);
  		Object.defineProperty(a, k, d.get ? d : {
  			enumerable: true,
  			get: function () {
  				return n[k];
  			}
  		});
  	});
  	return a;
  }

  function createCommonjsModule(fn) {
    var module = { exports: {} };
  	return fn(module, module.exports), module.exports;
  }

  /*! https://mths.be/esrever v0.2.0 by @mathias */

  var esrever = createCommonjsModule(function (module, exports) {
  (function(root) {

  	// Detect free variables `exports`
  	var freeExports = exports;

  	// Detect free variable `module`
  	var freeModule = module &&
  		module.exports == freeExports && module;

  	// Detect free variable `global`, from Node.js or Browserified code,
  	// and use it as `root`
  	var freeGlobal = typeof commonjsGlobal == 'object' && commonjsGlobal;
  	if (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal) {
  		root = freeGlobal;
  	}

  	/*--------------------------------------------------------------------------*/

  	var regexSymbolWithCombiningMarks = /([\0-\u02FF\u0370-\u1AAF\u1B00-\u1DBF\u1E00-\u20CF\u2100-\uD7FF\uE000-\uFE1F\uFE30-\uFFFF]|[\uD800-\uDBFF][\uDC00-\uDFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF])([\u0300-\u036F\u1AB0-\u1AFF\u1DC0-\u1DFF\u20D0-\u20FF\uFE20-\uFE2F]+)/g;
  	var regexSurrogatePair = /([\uD800-\uDBFF])([\uDC00-\uDFFF])/g;

  	var reverse = function(string) {
  		// Step 1: deal with combining marks and astral symbols (surrogate pairs)
  		string = string
  			// Swap symbols with their combining marks so the combining marks go first
  			.replace(regexSymbolWithCombiningMarks, function($0, $1, $2) {
  				// Reverse the combining marks so they will end up in the same order
  				// later on (after another round of reversing)
  				return reverse($2) + $1;
  			})
  			// Swap high and low surrogates so the low surrogates go first
  			.replace(regexSurrogatePair, '$2$1');
  		// Step 2: reverse the code units in the string
  		var result = '';
  		var index = string.length;
  		while (index--) {
  			result += string.charAt(index);
  		}
  		return result;
  	};

  	/*--------------------------------------------------------------------------*/

  	var esrever = {
  		'version': '0.2.0',
  		'reverse': reverse
  	};

  	// Some AMD build optimizers, like r.js, check for specific condition patterns
  	// like the following:
  	if (freeExports && !freeExports.nodeType) {
  		if (freeModule) { // in Node.js, io.js, or RingoJS v0.8.0+
  			freeModule.exports = esrever;
  		} else { // in Narwhal or RingoJS v0.7.0-
  			for (var key in esrever) {
  				esrever.hasOwnProperty(key) && (freeExports[key] = esrever[key]);
  			}
  		}
  	} else { // in Rhino or a web browser
  		root.esrever = esrever;
  	}

  }(commonjsGlobal));
  });

  function n(n){for(var r=arguments.length,t=Array(r>1?r-1:0),e=1;e<r;e++)t[e-1]=arguments[e];{var i=Y$6[n],o=i?"function"==typeof i?i.apply(null,t):i:"unknown error nr: "+n;throw Error("[Immer] "+o)}}function r(n){return !!n&&!!n[Q$6]}function t(n){return !!n&&(function(n){if(!n||"object"!=typeof n)return !1;var r=Object.getPrototypeOf(n);if(null===r)return !0;var t=Object.hasOwnProperty.call(r,"constructor")&&r.constructor;return "function"==typeof t&&Function.toString.call(t)===Z$6}(n)||Array.isArray(n)||!!n[L$5]||!!n.constructor[L$5]||s$2(n)||v$3(n))}function i(n,r,t){void 0===t&&(t=!1),0===o$1(n)?(t?Object.keys:nn$4)(n).forEach((function(e){t&&"symbol"==typeof e||r(e,n[e],n);})):n.forEach((function(t,e){return r(e,t,n)}));}function o$1(n){var r=n[Q$6];return r?r.i>3?r.i-4:r.i:Array.isArray(n)?1:s$2(n)?2:v$3(n)?3:0}function u$1(n,r){return 2===o$1(n)?n.has(r):Object.prototype.hasOwnProperty.call(n,r)}function a$1(n,r){return 2===o$1(n)?n.get(r):n[r]}function f$3(n,r,t){var e=o$1(n);2===e?n.set(r,t):3===e?(n.delete(r),n.add(t)):n[r]=t;}function c$3(n,r){return n===r?0!==n||1/n==1/r:n!=n&&r!=r}function s$2(n){return X$6&&n instanceof Map}function v$3(n){return q$6&&n instanceof Set}function p$2(n){return n.o||n.t}function l$1(n){if(Array.isArray(n))return Array.prototype.slice.call(n);var r=rn$4(n);delete r[Q$6];for(var t=nn$4(r),e=0;e<t.length;e++){var i=t[e],o=r[i];!1===o.writable&&(o.writable=!0,o.configurable=!0),(o.get||o.set)&&(r[i]={configurable:!0,writable:!0,enumerable:o.enumerable,value:n[i]});}return Object.create(Object.getPrototypeOf(n),r)}function d$3(n,e){return void 0===e&&(e=!1),y$4(n)||r(n)||!t(n)?n:(o$1(n)>1&&(n.set=n.add=n.clear=n.delete=h$5),Object.freeze(n),e&&i(n,(function(n,r){return d$3(r,!0)}),!0),n)}function h$5(){n(2);}function y$4(n){return null==n||"object"!=typeof n||Object.isFrozen(n)}function b$4(r){var t=tn$4[r];return t||n(18,r),t}function _$6(){return U$6||n(0),U$6}function j$5(n,r){r&&(b$4("Patches"),n.u=[],n.s=[],n.v=r);}function g$4(n){O$5(n),n.p.forEach(S$4),n.p=null;}function O$5(n){n===U$6&&(U$6=n.l);}function w$4(n){return U$6={p:[],l:U$6,h:n,m:!0,_:0}}function S$4(n){var r=n[Q$6];0===r.i||1===r.i?r.j():r.g=!0;}function P$6(r,e){e._=e.p.length;var i=e.p[0],o=void 0!==r&&r!==i;return e.h.O||b$4("ES5").S(e,r,o),o?(i[Q$6].P&&(g$4(e),n(4)),t(r)&&(r=M$5(e,r),e.l||x$4(e,r)),e.u&&b$4("Patches").M(i[Q$6],r,e.u,e.s)):r=M$5(e,i,[]),g$4(e),e.u&&e.v(e.u,e.s),r!==H$5?r:void 0}function M$5(n,r,t){if(y$4(r))return r;var e=r[Q$6];if(!e)return i(r,(function(i,o){return A$5(n,e,r,i,o,t)}),!0),r;if(e.A!==n)return r;if(!e.P)return x$4(n,e.t,!0),e.t;if(!e.I){e.I=!0,e.A._--;var o=4===e.i||5===e.i?e.o=l$1(e.k):e.o;i(3===e.i?new Set(o):o,(function(r,i){return A$5(n,e,o,r,i,t)})),x$4(n,o,!1),t&&n.u&&b$4("Patches").R(e,t,n.u,n.s);}return e.o}function A$5(e,i,o,a,c,s){if(c===o&&n(5),r(c)){var v=M$5(e,c,s&&i&&3!==i.i&&!u$1(i.D,a)?s.concat(a):void 0);if(f$3(o,a,v),!r(v))return;e.m=!1;}if(t(c)&&!y$4(c)){if(!e.h.F&&e._<1)return;M$5(e,c),i&&i.A.l||x$4(e,c);}}function x$4(n,r,t){void 0===t&&(t=!1),n.h.F&&n.m&&d$3(r,t);}function z$5(n,r){var t=n[Q$6];return (t?p$2(t):n)[r]}function I$5(n,r){if(r in n)for(var t=Object.getPrototypeOf(n);t;){var e=Object.getOwnPropertyDescriptor(t,r);if(e)return e;t=Object.getPrototypeOf(t);}}function k$5(n){n.P||(n.P=!0,n.l&&k$5(n.l));}function E$5(n){n.o||(n.o=l$1(n.t));}function R$6(n,r,t){var e=s$2(r)?b$4("MapSet").N(r,t):v$3(r)?b$4("MapSet").T(r,t):n.O?function(n,r){var t=Array.isArray(n),e={i:t?1:0,A:r?r.A:_$6(),P:!1,I:!1,D:{},l:r,t:n,k:null,o:null,j:null,C:!1},i=e,o=en$4;t&&(i=[e],o=on$5);var u=Proxy.revocable(i,o),a=u.revoke,f=u.proxy;return e.k=f,e.j=a,f}(r,t):b$4("ES5").J(r,t);return (t?t.A:_$6()).p.push(e),e}function D$6(e){return r(e)||n(22,e),function n(r){if(!t(r))return r;var e,u=r[Q$6],c=o$1(r);if(u){if(!u.P&&(u.i<4||!b$4("ES5").K(u)))return u.t;u.I=!0,e=F$6(r,c),u.I=!1;}else e=F$6(r,c);return i(e,(function(r,t){u&&a$1(u.t,r)===t||f$3(e,r,n(t));})),3===c?new Set(e):e}(e)}function F$6(n,r){switch(r){case 2:return new Map(n);case 3:return Array.from(n)}return l$1(n)}var G$6,U$6,W$6="undefined"!=typeof Symbol&&"symbol"==typeof Symbol("x"),X$6="undefined"!=typeof Map,q$6="undefined"!=typeof Set,B$6="undefined"!=typeof Proxy&&void 0!==Proxy.revocable&&"undefined"!=typeof Reflect,H$5=W$6?Symbol.for("immer-nothing"):((G$6={})["immer-nothing"]=!0,G$6),L$5=W$6?Symbol.for("immer-draftable"):"__$immer_draftable",Q$6=W$6?Symbol.for("immer-state"):"__$immer_state",Y$6={0:"Illegal state",1:"Immer drafts cannot have computed properties",2:"This object has been frozen and should not be mutated",3:function(n){return "Cannot use a proxy that has been revoked. Did you pass an object from inside an immer function to an async process? "+n},4:"An immer producer returned a new value *and* modified its draft. Either return a new value *or* modify the draft.",5:"Immer forbids circular references",6:"The first or second argument to `produce` must be a function",7:"The third argument to `produce` must be a function or undefined",8:"First argument to `createDraft` must be a plain object, an array, or an immerable object",9:"First argument to `finishDraft` must be a draft returned by `createDraft`",10:"The given draft is already finalized",11:"Object.defineProperty() cannot be used on an Immer draft",12:"Object.setPrototypeOf() cannot be used on an Immer draft",13:"Immer only supports deleting array indices",14:"Immer only supports setting array indices and the 'length' property",15:function(n){return "Cannot apply patch, path doesn't resolve: "+n},16:'Sets cannot have "replace" patches.',17:function(n){return "Unsupported patch operation: "+n},18:function(n){return "The plugin for '"+n+"' has not been loaded into Immer. To enable the plugin, import and call `enable"+n+"()` when initializing your application."},20:"Cannot use proxies if Proxy, Proxy.revocable or Reflect are not available",21:function(n){return "produce can only be called on things that are draftable: plain objects, arrays, Map, Set or classes that are marked with '[immerable]: true'. Got '"+n+"'"},22:function(n){return "'current' expects a draft, got: "+n},23:function(n){return "'original' expects a draft, got: "+n},24:"Patching reserved attributes like __proto__, prototype and constructor is not allowed"},Z$6=""+Object.prototype.constructor,nn$4="undefined"!=typeof Reflect&&Reflect.ownKeys?Reflect.ownKeys:void 0!==Object.getOwnPropertySymbols?function(n){return Object.getOwnPropertyNames(n).concat(Object.getOwnPropertySymbols(n))}:Object.getOwnPropertyNames,rn$4=Object.getOwnPropertyDescriptors||function(n){var r={};return nn$4(n).forEach((function(t){r[t]=Object.getOwnPropertyDescriptor(n,t);})),r},tn$4={},en$4={get:function(n,r){if(r===Q$6)return n;var e=p$2(n);if(!u$1(e,r))return function(n,r,t){var e,i=I$5(r,t);return i?"value"in i?i.value:null===(e=i.get)||void 0===e?void 0:e.call(n.k):void 0}(n,e,r);var i=e[r];return n.I||!t(i)?i:i===z$5(n.t,r)?(E$5(n),n.o[r]=R$6(n.A.h,i,n)):i},has:function(n,r){return r in p$2(n)},ownKeys:function(n){return Reflect.ownKeys(p$2(n))},set:function(n,r,t){var e=I$5(p$2(n),r);if(null==e?void 0:e.set)return e.set.call(n.k,t),!0;if(!n.P){var i=z$5(p$2(n),r),o=null==i?void 0:i[Q$6];if(o&&o.t===t)return n.o[r]=t,n.D[r]=!1,!0;if(c$3(t,i)&&(void 0!==t||u$1(n.t,r)))return !0;E$5(n),k$5(n);}return n.o[r]===t&&"number"!=typeof t||(n.o[r]=t,n.D[r]=!0,!0)},deleteProperty:function(n,r){return void 0!==z$5(n.t,r)||r in n.t?(n.D[r]=!1,E$5(n),k$5(n)):delete n.D[r],n.o&&delete n.o[r],!0},getOwnPropertyDescriptor:function(n,r){var t=p$2(n),e=Reflect.getOwnPropertyDescriptor(t,r);return e?{writable:!0,configurable:1!==n.i||"length"!==r,enumerable:e.enumerable,value:t[r]}:e},defineProperty:function(){n(11);},getPrototypeOf:function(n){return Object.getPrototypeOf(n.t)},setPrototypeOf:function(){n(12);}},on$5={};i(en$4,(function(n,r){on$5[n]=function(){return arguments[0]=arguments[0][0],r.apply(this,arguments)};})),on$5.deleteProperty=function(r,t){return isNaN(parseInt(t))&&n(13),en$4.deleteProperty.call(this,r[0],t)},on$5.set=function(r,t,e){return "length"!==t&&isNaN(parseInt(t))&&n(14),en$4.set.call(this,r[0],t,e,r[0])};var un$4=function(){function e(r){var e=this;this.O=B$6,this.F=!0,this.produce=function(r,i,o){if("function"==typeof r&&"function"!=typeof i){var u=i;i=r;var a=e;return function(n){var r=this;void 0===n&&(n=u);for(var t=arguments.length,e=Array(t>1?t-1:0),o=1;o<t;o++)e[o-1]=arguments[o];return a.produce(n,(function(n){var t;return (t=i).call.apply(t,[r,n].concat(e))}))}}var f;if("function"!=typeof i&&n(6),void 0!==o&&"function"!=typeof o&&n(7),t(r)){var c=w$4(e),s=R$6(e,r,void 0),v=!0;try{f=i(s),v=!1;}finally{v?g$4(c):O$5(c);}return "undefined"!=typeof Promise&&f instanceof Promise?f.then((function(n){return j$5(c,o),P$6(n,c)}),(function(n){throw g$4(c),n})):(j$5(c,o),P$6(f,c))}if(!r||"object"!=typeof r){if((f=i(r))===H$5)return;return void 0===f&&(f=r),e.F&&d$3(f,!0),f}n(21,r);},this.produceWithPatches=function(n,r){return "function"==typeof n?function(r){for(var t=arguments.length,i=Array(t>1?t-1:0),o=1;o<t;o++)i[o-1]=arguments[o];return e.produceWithPatches(r,(function(r){return n.apply(void 0,[r].concat(i))}))}:[e.produce(n,r,(function(n,r){t=n,i=r;})),t,i];var t,i;},"boolean"==typeof(null==r?void 0:r.useProxies)&&this.setUseProxies(r.useProxies),"boolean"==typeof(null==r?void 0:r.autoFreeze)&&this.setAutoFreeze(r.autoFreeze);}var i=e.prototype;return i.createDraft=function(e){t(e)||n(8),r(e)&&(e=D$6(e));var i=w$4(this),o=R$6(this,e,void 0);return o[Q$6].C=!0,O$5(i),o},i.finishDraft=function(r,t){var e=r&&r[Q$6];(e&&e.C||n(9),e.I&&n(10));var i=e.A;return j$5(i,t),P$6(void 0,i)},i.setAutoFreeze=function(n){this.F=n;},i.setUseProxies=function(r){r&&!B$6&&n(20),this.O=r;},i.applyPatches=function(n,t){var e;for(e=t.length-1;e>=0;e--){var i=t[e];if(0===i.path.length&&"replace"===i.op){n=i.value;break}}var o=b$4("Patches").$;return r(n)?o(n,t):this.produce(n,(function(n){return o(n,t.slice(e+1))}))},e}(),an$4=new un$4,fn$4=an$4.produce;an$4.produceWithPatches.bind(an$4);an$4.setAutoFreeze.bind(an$4);an$4.setUseProxies.bind(an$4);an$4.applyPatches.bind(an$4);var ln$4=an$4.createDraft.bind(an$4),dn$4=an$4.finishDraft.bind(an$4);

  // do not edit .js files directly - edit src/index.jst



  var fastDeepEqual = function equal(a, b) {
    if (a === b) return true;

    if (a && b && typeof a == 'object' && typeof b == 'object') {
      if (a.constructor !== b.constructor) return false;

      var length, i, keys;
      if (Array.isArray(a)) {
        length = a.length;
        if (length != b.length) return false;
        for (i = length; i-- !== 0;)
          if (!equal(a[i], b[i])) return false;
        return true;
      }



      if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;
      if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();
      if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();

      keys = Object.keys(a);
      length = keys.length;
      if (length !== Object.keys(b).length) return false;

      for (i = length; i-- !== 0;)
        if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;

      for (i = length; i-- !== 0;) {
        var key = keys[i];

        if (!equal(a[key], b[key])) return false;
      }

      return true;
    }

    // true if both NaN, false otherwise
    return a!==a && b!==b;
  };

  function _defineProperty(obj, key, value) {
    if (key in obj) {
      Object.defineProperty(obj, key, {
        value: value,
        enumerable: true,
        configurable: true,
        writable: true
      });
    } else {
      obj[key] = value;
    }

    return obj;
  }

  var DIRTY_PATHS = new WeakMap();
  var FLUSHING = new WeakMap();
  var NORMALIZING = new WeakMap();
  var PATH_REFS = new WeakMap();
  var POINT_REFS = new WeakMap();
  var RANGE_REFS = new WeakMap();

  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }
  /**
   * Create a new Slate `Editor` object.
   */

  var createEditor$1 = () => {
    var editor = {
      children: [],
      operations: [],
      selection: null,
      marks: null,
      isInline: () => false,
      isVoid: () => false,
      onChange: () => {},
      apply: op => {
        for (var ref of Editor.pathRefs(editor)) {
          PathRef.transform(ref, op);
        }

        for (var _ref of Editor.pointRefs(editor)) {
          PointRef.transform(_ref, op);
        }

        for (var _ref2 of Editor.rangeRefs(editor)) {
          RangeRef.transform(_ref2, op);
        }

        var set = new Set();
        var dirtyPaths = [];

        var add = path => {
          if (path) {
            var key = path.join(',');

            if (!set.has(key)) {
              set.add(key);
              dirtyPaths.push(path);
            }
          }
        };

        var oldDirtyPaths = DIRTY_PATHS.get(editor) || [];
        var newDirtyPaths = getDirtyPaths(op);

        for (var path of oldDirtyPaths) {
          var newPath = Path.transform(path, op);
          add(newPath);
        }

        for (var _path of newDirtyPaths) {
          add(_path);
        }

        DIRTY_PATHS.set(editor, dirtyPaths);
        Transforms.transform(editor, op);
        editor.operations.push(op);
        Editor.normalize(editor); // Clear any formats applied to the cursor if the selection changes.

        if (op.type === 'set_selection') {
          editor.marks = null;
        }

        if (!FLUSHING.get(editor)) {
          FLUSHING.set(editor, true);
          Promise.resolve().then(() => {
            FLUSHING.set(editor, false);
            editor.onChange();
            editor.operations = [];
          });
        }
      },
      addMark: (key, value) => {
        var {
          selection
        } = editor;

        if (selection) {
          if (Range.isExpanded(selection)) {
            Transforms.setNodes(editor, {
              [key]: value
            }, {
              match: Text.isText,
              split: true
            });
          } else {
            var marks = _objectSpread(_objectSpread({}, Editor.marks(editor) || {}), {}, {
              [key]: value
            });

            editor.marks = marks;

            if (!FLUSHING.get(editor)) {
              editor.onChange();
            }
          }
        }
      },
      deleteBackward: unit => {
        var {
          selection
        } = editor;

        if (selection && Range.isCollapsed(selection)) {
          Transforms.delete(editor, {
            unit,
            reverse: true
          });
        }
      },
      deleteForward: unit => {
        var {
          selection
        } = editor;

        if (selection && Range.isCollapsed(selection)) {
          Transforms.delete(editor, {
            unit
          });
        }
      },
      deleteFragment: direction => {
        var {
          selection
        } = editor;

        if (selection && Range.isExpanded(selection)) {
          Transforms.delete(editor, {
            reverse: direction === 'backward'
          });
        }
      },
      getFragment: () => {
        var {
          selection
        } = editor;

        if (selection) {
          return Node$1.fragment(editor, selection);
        }

        return [];
      },
      insertBreak: () => {
        Transforms.splitNodes(editor, {
          always: true
        });
      },
      insertFragment: fragment => {
        Transforms.insertFragment(editor, fragment);
      },
      insertNode: node => {
        Transforms.insertNodes(editor, node);
      },
      insertText: text => {
        var {
          selection,
          marks
        } = editor;

        if (selection) {
          // If the cursor is at the end of an inline, move it outside of
          // the inline before inserting
          if (Range.isCollapsed(selection)) {
            var inline = Editor.above(editor, {
              match: n => Editor.isInline(editor, n),
              mode: 'highest'
            });

            if (inline) {
              var [, inlinePath] = inline;

              if (Editor.isEnd(editor, selection.anchor, inlinePath)) {
                var point = Editor.after(editor, inlinePath);
                Transforms.setSelection(editor, {
                  anchor: point,
                  focus: point
                });
              }
            }
          }

          if (marks) {
            var node = _objectSpread({
              text
            }, marks);

            Transforms.insertNodes(editor, node);
          } else {
            Transforms.insertText(editor, text);
          }

          editor.marks = null;
        }
      },
      normalizeNode: entry => {
        var [node, path] = entry; // There are no core normalizations for text nodes.

        if (Text.isText(node)) {
          return;
        } // Ensure that block and inline nodes have at least one text child.


        if (Element$1.isElement(node) && node.children.length === 0) {
          var child = {
            text: ''
          };
          Transforms.insertNodes(editor, child, {
            at: path.concat(0),
            voids: true
          });
          return;
        } // Determine whether the node should have block or inline children.


        var shouldHaveInlines = Editor.isEditor(node) ? false : Element$1.isElement(node) && (editor.isInline(node) || node.children.length === 0 || Text.isText(node.children[0]) || editor.isInline(node.children[0])); // Since we'll be applying operations while iterating, keep track of an
        // index that accounts for any added/removed nodes.

        var n = 0;

        for (var i = 0; i < node.children.length; i++, n++) {
          var currentNode = Node$1.get(editor, path);
          if (Text.isText(currentNode)) continue;
          var _child = node.children[i];
          var prev = currentNode.children[n - 1];
          var isLast = i === node.children.length - 1;
          var isInlineOrText = Text.isText(_child) || Element$1.isElement(_child) && editor.isInline(_child); // Only allow block nodes in the top-level children and parent blocks
          // that only contain block nodes. Similarly, only allow inline nodes in
          // other inline nodes, or parent blocks that only contain inlines and
          // text.

          if (isInlineOrText !== shouldHaveInlines) {
            Transforms.removeNodes(editor, {
              at: path.concat(n),
              voids: true
            });
            n--;
          } else if (Element$1.isElement(_child)) {
            // Ensure that inline nodes are surrounded by text nodes.
            if (editor.isInline(_child)) {
              if (prev == null || !Text.isText(prev)) {
                var newChild = {
                  text: ''
                };
                Transforms.insertNodes(editor, newChild, {
                  at: path.concat(n),
                  voids: true
                });
                n++;
              } else if (isLast) {
                var _newChild = {
                  text: ''
                };
                Transforms.insertNodes(editor, _newChild, {
                  at: path.concat(n + 1),
                  voids: true
                });
                n++;
              }
            }
          } else {
            // Merge adjacent text nodes that are empty or match.
            if (prev != null && Text.isText(prev)) {
              if (Text.equals(_child, prev, {
                loose: true
              })) {
                Transforms.mergeNodes(editor, {
                  at: path.concat(n),
                  voids: true
                });
                n--;
              } else if (prev.text === '') {
                Transforms.removeNodes(editor, {
                  at: path.concat(n - 1),
                  voids: true
                });
                n--;
              } else if (isLast && _child.text === '') {
                Transforms.removeNodes(editor, {
                  at: path.concat(n),
                  voids: true
                });
                n--;
              }
            }
          }
        }
      },
      removeMark: key => {
        var {
          selection
        } = editor;

        if (selection) {
          if (Range.isExpanded(selection)) {
            Transforms.unsetNodes(editor, key, {
              match: Text.isText,
              split: true
            });
          } else {
            var marks = _objectSpread({}, Editor.marks(editor) || {});

            delete marks[key];
            editor.marks = marks;

            if (!FLUSHING.get(editor)) {
              editor.onChange();
            }
          }
        }
      }
    };
    return editor;
  };
  /**
   * Get the "dirty" paths generated from an operation.
   */

  var getDirtyPaths = op => {
    switch (op.type) {
      case 'insert_text':
      case 'remove_text':
      case 'set_node':
        {
          var {
            path
          } = op;
          return Path.levels(path);
        }

      case 'insert_node':
        {
          var {
            node,
            path: _path2
          } = op;
          var levels = Path.levels(_path2);
          var descendants = Text.isText(node) ? [] : Array.from(Node$1.nodes(node), (_ref3) => {
            var [, p] = _ref3;
            return _path2.concat(p);
          });
          return [...levels, ...descendants];
        }

      case 'merge_node':
        {
          var {
            path: _path3
          } = op;
          var ancestors = Path.ancestors(_path3);
          var previousPath = Path.previous(_path3);
          return [...ancestors, previousPath];
        }

      case 'move_node':
        {
          var {
            path: _path4,
            newPath
          } = op;

          if (Path.equals(_path4, newPath)) {
            return [];
          }

          var oldAncestors = [];
          var newAncestors = [];

          for (var ancestor of Path.ancestors(_path4)) {
            var p = Path.transform(ancestor, op);
            oldAncestors.push(p);
          }

          for (var _ancestor of Path.ancestors(newPath)) {
            var _p = Path.transform(_ancestor, op);

            newAncestors.push(_p);
          }

          var newParent = newAncestors[newAncestors.length - 1];
          var newIndex = newPath[newPath.length - 1];
          var resultPath = newParent.concat(newIndex);
          return [...oldAncestors, ...newAncestors, resultPath];
        }

      case 'remove_node':
        {
          var {
            path: _path5
          } = op;

          var _ancestors = Path.ancestors(_path5);

          return [..._ancestors];
        }

      case 'split_node':
        {
          var {
            path: _path6
          } = op;

          var _levels = Path.levels(_path6);

          var nextPath = Path.next(_path6);
          return [..._levels, nextPath];
        }

      default:
        {
          return [];
        }
    }
  };

  function _objectWithoutPropertiesLoose(source, excluded) {
    if (source == null) return {};
    var target = {};
    var sourceKeys = Object.keys(source);
    var key, i;

    for (i = 0; i < sourceKeys.length; i++) {
      key = sourceKeys[i];
      if (excluded.indexOf(key) >= 0) continue;
      target[key] = source[key];
    }

    return target;
  }

  function _objectWithoutProperties(source, excluded) {
    if (source == null) return {};
    var target = _objectWithoutPropertiesLoose(source, excluded);
    var key, i;

    if (Object.getOwnPropertySymbols) {
      var sourceSymbolKeys = Object.getOwnPropertySymbols(source);

      for (i = 0; i < sourceSymbolKeys.length; i++) {
        key = sourceSymbolKeys[i];
        if (excluded.indexOf(key) >= 0) continue;
        if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
        target[key] = source[key];
      }
    }

    return target;
  }

  /**
   * Constants for string distance checking.
   */
  var SPACE = /\s/;
  var PUNCTUATION = /[\u0021-\u0023\u0025-\u002A\u002C-\u002F\u003A\u003B\u003F\u0040\u005B-\u005D\u005F\u007B\u007D\u00A1\u00A7\u00AB\u00B6\u00B7\u00BB\u00BF\u037E\u0387\u055A-\u055F\u0589\u058A\u05BE\u05C0\u05C3\u05C6\u05F3\u05F4\u0609\u060A\u060C\u060D\u061B\u061E\u061F\u066A-\u066D\u06D4\u0700-\u070D\u07F7-\u07F9\u0830-\u083E\u085E\u0964\u0965\u0970\u0AF0\u0DF4\u0E4F\u0E5A\u0E5B\u0F04-\u0F12\u0F14\u0F3A-\u0F3D\u0F85\u0FD0-\u0FD4\u0FD9\u0FDA\u104A-\u104F\u10FB\u1360-\u1368\u1400\u166D\u166E\u169B\u169C\u16EB-\u16ED\u1735\u1736\u17D4-\u17D6\u17D8-\u17DA\u1800-\u180A\u1944\u1945\u1A1E\u1A1F\u1AA0-\u1AA6\u1AA8-\u1AAD\u1B5A-\u1B60\u1BFC-\u1BFF\u1C3B-\u1C3F\u1C7E\u1C7F\u1CC0-\u1CC7\u1CD3\u2010-\u2027\u2030-\u2043\u2045-\u2051\u2053-\u205E\u207D\u207E\u208D\u208E\u2329\u232A\u2768-\u2775\u27C5\u27C6\u27E6-\u27EF\u2983-\u2998\u29D8-\u29DB\u29FC\u29FD\u2CF9-\u2CFC\u2CFE\u2CFF\u2D70\u2E00-\u2E2E\u2E30-\u2E3B\u3001-\u3003\u3008-\u3011\u3014-\u301F\u3030\u303D\u30A0\u30FB\uA4FE\uA4FF\uA60D-\uA60F\uA673\uA67E\uA6F2-\uA6F7\uA874-\uA877\uA8CE\uA8CF\uA8F8-\uA8FA\uA92E\uA92F\uA95F\uA9C1-\uA9CD\uA9DE\uA9DF\uAA5C-\uAA5F\uAADE\uAADF\uAAF0\uAAF1\uABEB\uFD3E\uFD3F\uFE10-\uFE19\uFE30-\uFE52\uFE54-\uFE61\uFE63\uFE68\uFE6A\uFE6B\uFF01-\uFF03\uFF05-\uFF0A\uFF0C-\uFF0F\uFF1A\uFF1B\uFF1F\uFF20\uFF3B-\uFF3D\uFF3F\uFF5B\uFF5D\uFF5F-\uFF65]/;
  var CHAMELEON = /['\u2018\u2019]/;
  var SURROGATE_START = 0xd800;
  var SURROGATE_END = 0xdfff;
  var ZERO_WIDTH_JOINER = 0x200d;
  /**
   * Get the distance to the end of the first character in a string of text.
   */

  var getCharacterDistance = text => {
    var offset = 0; // prev types:
    // SURR: surrogate pair
    // MOD: modifier (technically also surrogate pair)
    // ZWJ: zero width joiner
    // VAR: variation selector
    // BMP: sequenceable character from basic multilingual plane

    var prev = null;
    var charCode = text.charCodeAt(0);

    while (charCode) {
      if (isSurrogate(charCode)) {
        var modifier = isModifier(charCode, text, offset); // Early returns are the heart of this function, where we decide if previous and current
        // codepoints should form a single character (in terms of how many of them should selection
        // jump over).

        if (prev === 'SURR' || prev === 'BMP') {
          break;
        }

        offset += 2;
        prev = modifier ? 'MOD' : 'SURR';
        charCode = text.charCodeAt(offset); // Absolutely fine to `continue` without any checks because if `charCode` is NaN (which
        // is the case when out of `text` range), next `while` loop won"t execute and we"re done.

        continue;
      }

      if (charCode === ZERO_WIDTH_JOINER) {
        offset += 1;
        prev = 'ZWJ';
        charCode = text.charCodeAt(offset);
        continue;
      }

      if (isBMPEmoji(charCode)) {
        if (prev && prev !== 'ZWJ' && prev !== 'VAR') {
          break;
        }

        offset += 1;
        prev = 'BMP';
        charCode = text.charCodeAt(offset);
        continue;
      }

      if (isVariationSelector(charCode)) {
        if (prev && prev !== 'ZWJ') {
          break;
        }

        offset += 1;
        prev = 'VAR';
        charCode = text.charCodeAt(offset);
        continue;
      } // Modifier 'groups up' with what ever character is before that (even whitespace), need to
      // look ahead.


      if (prev === 'MOD') {
        offset += 1;
        break;
      } // If while loop ever gets here, we're done (e.g latin chars).


      break;
    }

    return offset || 1;
  };
  /**
   * Get the distance to the end of the first word in a string of text.
   */

  var getWordDistance = text => {
    var length = 0;
    var i = 0;
    var started = false;
    var char;

    while (char = text.charAt(i)) {
      var l = getCharacterDistance(char);
      char = text.slice(i, i + l);
      var rest = text.slice(i + l);

      if (isWordCharacter(char, rest)) {
        started = true;
        length += l;
      } else if (!started) {
        length += l;
      } else {
        break;
      }

      i += l;
    }

    return length;
  };
  /**
   * Check if a character is a word character. The `remaining` argument is used
   * because sometimes you must read subsequent characters to truly determine it.
   */

  var isWordCharacter = (char, remaining) => {
    if (SPACE.test(char)) {
      return false;
    } // Chameleons count as word characters as long as they're in a word, so
    // recurse to see if the next one is a word character or not.


    if (CHAMELEON.test(char)) {
      var next = remaining.charAt(0);
      var length = getCharacterDistance(next);
      next = remaining.slice(0, length);
      var rest = remaining.slice(length);

      if (isWordCharacter(next, rest)) {
        return true;
      }
    }

    if (PUNCTUATION.test(char)) {
      return false;
    }

    return true;
  };
  /**
   * Determines if `code` is a surrogate
   */


  var isSurrogate = code => SURROGATE_START <= code && code <= SURROGATE_END;
  /**
   * Does `code` form Modifier with next one.
   *
   * https://emojipedia.org/modifiers/
   */


  var isModifier = (code, text, offset) => {
    if (code === 0xd83c) {
      var next = text.charCodeAt(offset + 1);
      return next <= 0xdfff && next >= 0xdffb;
    }

    return false;
  };
  /**
   * Is `code` a Variation Selector.
   *
   * https://codepoints.net/variation_selectors
   */


  var isVariationSelector = code => {
    return code <= 0xfe0f && code >= 0xfe00;
  };
  /**
   * Is `code` one of the BMP codes used in emoji sequences.
   *
   * https://emojipedia.org/emoji-zwj-sequences/
   */


  var isBMPEmoji = code => {
    // This requires tiny bit of maintanance, better ideas?
    // Fortunately it only happens if new Unicode Standard
    // is released. Fails gracefully if upkeep lags behind,
    // same way Slate previously behaved with all emojis.
    return code === 0x2764 || // heart (❤)
    code === 0x2642 || // male (♂)
    code === 0x2640 || // female (♀)
    code === 0x2620 || // scull (☠)
    code === 0x2695 || // medical (⚕)
    code === 0x2708 || // plane (✈️)
    code === 0x25ef // large circle (◯)
    ;
  };

  var Element$1 = {
    /**
     * Check if a value implements the 'Ancestor' interface.
     */
    isAncestor(value) {
      return isPlainObject(value) && Node$1.isNodeList(value.children);
    },

    /**
     * Check if a value implements the `Element` interface.
     */
    isElement(value) {
      return isPlainObject(value) && Node$1.isNodeList(value.children) && !Editor.isEditor(value);
    },

    /**
     * Check if a value is an array of `Element` objects.
     */
    isElementList(value) {
      return Array.isArray(value) && value.every(val => Element$1.isElement(val));
    },

    /**
     * Check if a set of props is a partial of Element.
     */
    isElementProps(props) {
      return props.children !== undefined;
    },

    /**
     * Check if an element matches set of properties.
     *
     * Note: this checks custom properties, and it does not ensure that any
     * children are equivalent.
     */
    matches(element, props) {
      for (var key in props) {
        if (key === 'children') {
          continue;
        }

        if (element[key] !== props[key]) {
          return false;
        }
      }

      return true;
    }

  };

  function ownKeys$1(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

  function _objectSpread$1(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys$1(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys$1(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }
  var IS_EDITOR_CACHE = new WeakMap();
  var Editor = {
    /**
     * Get the ancestor above a location in the document.
     */
    above(editor) {
      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
      var {
        voids = false,
        mode = 'lowest',
        at = editor.selection,
        match
      } = options;

      if (!at) {
        return;
      }

      var path = Editor.path(editor, at);
      var reverse = mode === 'lowest';

      for (var [n, p] of Editor.levels(editor, {
        at: path,
        voids,
        match,
        reverse
      })) {
        if (!Text.isText(n) && !Path.equals(path, p)) {
          return [n, p];
        }
      }
    },

    /**
     * Add a custom property to the leaf text nodes in the current selection.
     *
     * If the selection is currently collapsed, the marks will be added to the
     * `editor.marks` property instead, and applied when text is inserted next.
     */
    addMark(editor, key, value) {
      editor.addMark(key, value);
    },

    /**
     * Get the point after a location.
     */
    after(editor, at) {
      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
      var anchor = Editor.point(editor, at, {
        edge: 'end'
      });
      var focus = Editor.end(editor, []);
      var range = {
        anchor,
        focus
      };
      var {
        distance = 1
      } = options;
      var d = 0;
      var target;

      for (var p of Editor.positions(editor, _objectSpread$1(_objectSpread$1({}, options), {}, {
        at: range
      }))) {
        if (d > distance) {
          break;
        }

        if (d !== 0) {
          target = p;
        }

        d++;
      }

      return target;
    },

    /**
     * Get the point before a location.
     */
    before(editor, at) {
      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
      var anchor = Editor.start(editor, []);
      var focus = Editor.point(editor, at, {
        edge: 'start'
      });
      var range = {
        anchor,
        focus
      };
      var {
        distance = 1
      } = options;
      var d = 0;
      var target;

      for (var p of Editor.positions(editor, _objectSpread$1(_objectSpread$1({}, options), {}, {
        at: range,
        reverse: true
      }))) {
        if (d > distance) {
          break;
        }

        if (d !== 0) {
          target = p;
        }

        d++;
      }

      return target;
    },

    /**
     * Delete content in the editor backward from the current selection.
     */
    deleteBackward(editor) {
      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
      var {
        unit = 'character'
      } = options;
      editor.deleteBackward(unit);
    },

    /**
     * Delete content in the editor forward from the current selection.
     */
    deleteForward(editor) {
      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
      var {
        unit = 'character'
      } = options;
      editor.deleteForward(unit);
    },

    /**
     * Delete the content in the current selection.
     */
    deleteFragment(editor) {
      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
      var {
        direction = 'forward'
      } = options;
      editor.deleteFragment(direction);
    },

    /**
     * Get the start and end points of a location.
     */
    edges(editor, at) {
      return [Editor.start(editor, at), Editor.end(editor, at)];
    },

    /**
     * Get the end point of a location.
     */
    end(editor, at) {
      return Editor.point(editor, at, {
        edge: 'end'
      });
    },

    /**
     * Get the first node at a location.
     */
    first(editor, at) {
      var path = Editor.path(editor, at, {
        edge: 'start'
      });
      return Editor.node(editor, path);
    },

    /**
     * Get the fragment at a location.
     */
    fragment(editor, at) {
      var range = Editor.range(editor, at);
      var fragment = Node$1.fragment(editor, range);
      return fragment;
    },

    /**
     * Check if a node has block children.
     */
    hasBlocks(editor, element) {
      return element.children.some(n => Editor.isBlock(editor, n));
    },

    /**
     * Check if a node has inline and text children.
     */
    hasInlines(editor, element) {
      return element.children.some(n => Text.isText(n) || Editor.isInline(editor, n));
    },

    /**
     * Check if a node has text children.
     */
    hasTexts(editor, element) {
      return element.children.every(n => Text.isText(n));
    },

    /**
     * Insert a block break at the current selection.
     *
     * If the selection is currently expanded, it will be deleted first.
     */
    insertBreak(editor) {
      editor.insertBreak();
    },

    /**
     * Insert a fragment at the current selection.
     *
     * If the selection is currently expanded, it will be deleted first.
     */
    insertFragment(editor, fragment) {
      editor.insertFragment(fragment);
    },

    /**
     * Insert a node at the current selection.
     *
     * If the selection is currently expanded, it will be deleted first.
     */
    insertNode(editor, node) {
      editor.insertNode(node);
    },

    /**
     * Insert text at the current selection.
     *
     * If the selection is currently expanded, it will be deleted first.
     */
    insertText(editor, text) {
      editor.insertText(text);
    },

    /**
     * Check if a value is a block `Element` object.
     */
    isBlock(editor, value) {
      return Element$1.isElement(value) && !editor.isInline(value);
    },

    /**
     * Check if a value is an `Editor` object.
     */
    isEditor(value) {
      if (!isPlainObject(value)) return false;
      var cachedIsEditor = IS_EDITOR_CACHE.get(value);

      if (cachedIsEditor !== undefined) {
        return cachedIsEditor;
      }

      var isEditor = typeof value.addMark === 'function' && typeof value.apply === 'function' && typeof value.deleteBackward === 'function' && typeof value.deleteForward === 'function' && typeof value.deleteFragment === 'function' && typeof value.insertBreak === 'function' && typeof value.insertFragment === 'function' && typeof value.insertNode === 'function' && typeof value.insertText === 'function' && typeof value.isInline === 'function' && typeof value.isVoid === 'function' && typeof value.normalizeNode === 'function' && typeof value.onChange === 'function' && typeof value.removeMark === 'function' && (value.marks === null || isPlainObject(value.marks)) && (value.selection === null || Range.isRange(value.selection)) && Node$1.isNodeList(value.children) && Operation.isOperationList(value.operations);
      IS_EDITOR_CACHE.set(value, isEditor);
      return isEditor;
    },

    /**
     * Check if a point is the end point of a location.
     */
    isEnd(editor, point, at) {
      var end = Editor.end(editor, at);
      return Point.equals(point, end);
    },

    /**
     * Check if a point is an edge of a location.
     */
    isEdge(editor, point, at) {
      return Editor.isStart(editor, point, at) || Editor.isEnd(editor, point, at);
    },

    /**
     * Check if an element is empty, accounting for void nodes.
     */
    isEmpty(editor, element) {
      var {
        children
      } = element;
      var [first] = children;
      return children.length === 0 || children.length === 1 && Text.isText(first) && first.text === '' && !editor.isVoid(element);
    },

    /**
     * Check if a value is an inline `Element` object.
     */
    isInline(editor, value) {
      return Element$1.isElement(value) && editor.isInline(value);
    },

    /**
     * Check if the editor is currently normalizing after each operation.
     */
    isNormalizing(editor) {
      var isNormalizing = NORMALIZING.get(editor);
      return isNormalizing === undefined ? true : isNormalizing;
    },

    /**
     * Check if a point is the start point of a location.
     */
    isStart(editor, point, at) {
      // PERF: If the offset isn't `0` we know it's not the start.
      if (point.offset !== 0) {
        return false;
      }

      var start = Editor.start(editor, at);
      return Point.equals(point, start);
    },

    /**
     * Check if a value is a void `Element` object.
     */
    isVoid(editor, value) {
      return Element$1.isElement(value) && editor.isVoid(value);
    },

    /**
     * Get the last node at a location.
     */
    last(editor, at) {
      var path = Editor.path(editor, at, {
        edge: 'end'
      });
      return Editor.node(editor, path);
    },

    /**
     * Get the leaf text node at a location.
     */
    leaf(editor, at) {
      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
      var path = Editor.path(editor, at, options);
      var node = Node$1.leaf(editor, path);
      return [node, path];
    },

    /**
     * Iterate through all of the levels at a location.
     */
    *levels(editor) {
      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
      var {
        at = editor.selection,
        reverse = false,
        voids = false
      } = options;
      var {
        match
      } = options;

      if (match == null) {
        match = () => true;
      }

      if (!at) {
        return;
      }

      var levels = [];
      var path = Editor.path(editor, at);

      for (var [n, p] of Node$1.levels(editor, path)) {
        if (!match(n, p)) {
          continue;
        }

        levels.push([n, p]);

        if (!voids && Editor.isVoid(editor, n)) {
          break;
        }
      }

      if (reverse) {
        levels.reverse();
      }

      yield* levels;
    },

    /**
     * Get the marks that would be added to text at the current selection.
     */
    marks(editor) {
      var {
        marks,
        selection
      } = editor;

      if (!selection) {
        return null;
      }

      if (marks) {
        return marks;
      }

      if (Range.isExpanded(selection)) {
        var [match] = Editor.nodes(editor, {
          match: Text.isText
        });

        if (match) {
          var [_node] = match;

          var _rest = _objectWithoutProperties(_node, ["text"]);

          return _rest;
        } else {
          return {};
        }
      }

      var {
        anchor
      } = selection;
      var {
        path
      } = anchor;
      var [node] = Editor.leaf(editor, path);

      if (anchor.offset === 0) {
        var prev = Editor.previous(editor, {
          at: path,
          match: Text.isText
        });
        var block = Editor.above(editor, {
          match: n => Editor.isBlock(editor, n)
        });

        if (prev && block) {
          var [prevNode, prevPath] = prev;
          var [, blockPath] = block;

          if (Path.isAncestor(blockPath, prevPath)) {
            node = prevNode;
          }
        }
      }

      var rest = _objectWithoutProperties(node, ["text"]);

      return rest;
    },

    /**
     * Get the matching node in the branch of the document after a location.
     */
    next(editor) {
      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
      var {
        mode = 'lowest',
        voids = false
      } = options;
      var {
        match,
        at = editor.selection
      } = options;

      if (!at) {
        return;
      }

      var pointAfterLocation = Editor.after(editor, at, {
        voids
      });
      if (!pointAfterLocation) return;
      var [, to] = Editor.last(editor, []);
      var span = [pointAfterLocation.path, to];

      if (Path.isPath(at) && at.length === 0) {
        throw new Error("Cannot get the next node from the root node!");
      }

      if (match == null) {
        if (Path.isPath(at)) {
          var [parent] = Editor.parent(editor, at);

          match = n => parent.children.includes(n);
        } else {
          match = () => true;
        }
      }

      var [next] = Editor.nodes(editor, {
        at: span,
        match,
        mode,
        voids
      });
      return next;
    },

    /**
     * Get the node at a location.
     */
    node(editor, at) {
      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
      var path = Editor.path(editor, at, options);
      var node = Node$1.get(editor, path);
      return [node, path];
    },

    /**
     * Iterate through all of the nodes in the Editor.
     */
    *nodes(editor) {
      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
      var {
        at = editor.selection,
        mode = 'all',
        universal = false,
        reverse = false,
        voids = false
      } = options;
      var {
        match
      } = options;

      if (!match) {
        match = () => true;
      }

      if (!at) {
        return;
      }

      var from;
      var to;

      if (Span.isSpan(at)) {
        from = at[0];
        to = at[1];
      } else {
        var first = Editor.path(editor, at, {
          edge: 'start'
        });
        var last = Editor.path(editor, at, {
          edge: 'end'
        });
        from = reverse ? last : first;
        to = reverse ? first : last;
      }

      var nodeEntries = Node$1.nodes(editor, {
        reverse,
        from,
        to,
        pass: (_ref) => {
          var [n] = _ref;
          return voids ? false : Editor.isVoid(editor, n);
        }
      });
      var matches = [];
      var hit;

      for (var [node, path] of nodeEntries) {
        var isLower = hit && Path.compare(path, hit[1]) === 0; // In highest mode any node lower than the last hit is not a match.

        if (mode === 'highest' && isLower) {
          continue;
        }

        if (!match(node, path)) {
          // If we've arrived at a leaf text node that is not lower than the last
          // hit, then we've found a branch that doesn't include a match, which
          // means the match is not universal.
          if (universal && !isLower && Text.isText(node)) {
            return;
          } else {
            continue;
          }
        } // If there's a match and it's lower than the last, update the hit.


        if (mode === 'lowest' && isLower) {
          hit = [node, path];
          continue;
        } // In lowest mode we emit the last hit, once it's guaranteed lowest.


        var emit = mode === 'lowest' ? hit : [node, path];

        if (emit) {
          if (universal) {
            matches.push(emit);
          } else {
            yield emit;
          }
        }

        hit = [node, path];
      } // Since lowest is always emitting one behind, catch up at the end.


      if (mode === 'lowest' && hit) {
        if (universal) {
          matches.push(hit);
        } else {
          yield hit;
        }
      } // Universal defers to ensure that the match occurs in every branch, so we
      // yield all of the matches after iterating.


      if (universal) {
        yield* matches;
      }
    },

    /**
     * Normalize any dirty objects in the editor.
     */
    normalize(editor) {
      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
      var {
        force = false
      } = options;

      var getDirtyPaths = editor => {
        return DIRTY_PATHS.get(editor) || [];
      };

      if (!Editor.isNormalizing(editor)) {
        return;
      }

      if (force) {
        var allPaths = Array.from(Node$1.nodes(editor), (_ref2) => {
          var [, p] = _ref2;
          return p;
        });
        DIRTY_PATHS.set(editor, allPaths);
      }

      if (getDirtyPaths(editor).length === 0) {
        return;
      }

      Editor.withoutNormalizing(editor, () => {
        /*
          Fix dirty elements with no children.
          editor.normalizeNode() does fix this, but some normalization fixes also require it to work.
          Running an initial pass avoids the catch-22 race condition.
        */
        for (var dirtyPath of getDirtyPaths(editor)) {
          if (Node$1.has(editor, dirtyPath)) {
            var [node, _] = Editor.node(editor, dirtyPath); // Add a text child to elements with no children.
            // This is safe to do in any order, by definition it can't cause other paths to change.

            if (Element$1.isElement(node) && node.children.length === 0) {
              var child = {
                text: ''
              };
              Transforms.insertNodes(editor, child, {
                at: dirtyPath.concat(0),
                voids: true
              });
            }
          }
        }

        var max = getDirtyPaths(editor).length * 42; // HACK: better way?

        var m = 0;

        while (getDirtyPaths(editor).length !== 0) {
          if (m > max) {
            throw new Error("\n            Could not completely normalize the editor after ".concat(max, " iterations! This is usually due to incorrect normalization logic that leaves a node in an invalid state.\n          "));
          }

          var _dirtyPath = getDirtyPaths(editor).pop(); // If the node doesn't exist in the tree, it does not need to be normalized.


          if (Node$1.has(editor, _dirtyPath)) {
            var entry = Editor.node(editor, _dirtyPath);
            editor.normalizeNode(entry);
          }

          m++;
        }
      });
    },

    /**
     * Get the parent node of a location.
     */
    parent(editor, at) {
      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
      var path = Editor.path(editor, at, options);
      var parentPath = Path.parent(path);
      var entry = Editor.node(editor, parentPath);
      return entry;
    },

    /**
     * Get the path of a location.
     */
    path(editor, at) {
      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
      var {
        depth,
        edge
      } = options;

      if (Path.isPath(at)) {
        if (edge === 'start') {
          var [, firstPath] = Node$1.first(editor, at);
          at = firstPath;
        } else if (edge === 'end') {
          var [, lastPath] = Node$1.last(editor, at);
          at = lastPath;
        }
      }

      if (Range.isRange(at)) {
        if (edge === 'start') {
          at = Range.start(at);
        } else if (edge === 'end') {
          at = Range.end(at);
        } else {
          at = Path.common(at.anchor.path, at.focus.path);
        }
      }

      if (Point.isPoint(at)) {
        at = at.path;
      }

      if (depth != null) {
        at = at.slice(0, depth);
      }

      return at;
    },

    hasPath(editor, path) {
      return Node$1.has(editor, path);
    },

    /**
     * Create a mutable ref for a `Path` object, which will stay in sync as new
     * operations are applied to the editor.
     */
    pathRef(editor, path) {
      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
      var {
        affinity = 'forward'
      } = options;
      var ref = {
        current: path,
        affinity,

        unref() {
          var {
            current
          } = ref;
          var pathRefs = Editor.pathRefs(editor);
          pathRefs.delete(ref);
          ref.current = null;
          return current;
        }

      };
      var refs = Editor.pathRefs(editor);
      refs.add(ref);
      return ref;
    },

    /**
     * Get the set of currently tracked path refs of the editor.
     */
    pathRefs(editor) {
      var refs = PATH_REFS.get(editor);

      if (!refs) {
        refs = new Set();
        PATH_REFS.set(editor, refs);
      }

      return refs;
    },

    /**
     * Get the start or end point of a location.
     */
    point(editor, at) {
      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
      var {
        edge = 'start'
      } = options;

      if (Path.isPath(at)) {
        var path;

        if (edge === 'end') {
          var [, lastPath] = Node$1.last(editor, at);
          path = lastPath;
        } else {
          var [, firstPath] = Node$1.first(editor, at);
          path = firstPath;
        }

        var node = Node$1.get(editor, path);

        if (!Text.isText(node)) {
          throw new Error("Cannot get the ".concat(edge, " point in the node at path [").concat(at, "] because it has no ").concat(edge, " text node."));
        }

        return {
          path,
          offset: edge === 'end' ? node.text.length : 0
        };
      }

      if (Range.isRange(at)) {
        var [start, end] = Range.edges(at);
        return edge === 'start' ? start : end;
      }

      return at;
    },

    /**
     * Create a mutable ref for a `Point` object, which will stay in sync as new
     * operations are applied to the editor.
     */
    pointRef(editor, point) {
      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
      var {
        affinity = 'forward'
      } = options;
      var ref = {
        current: point,
        affinity,

        unref() {
          var {
            current
          } = ref;
          var pointRefs = Editor.pointRefs(editor);
          pointRefs.delete(ref);
          ref.current = null;
          return current;
        }

      };
      var refs = Editor.pointRefs(editor);
      refs.add(ref);
      return ref;
    },

    /**
     * Get the set of currently tracked point refs of the editor.
     */
    pointRefs(editor) {
      var refs = POINT_REFS.get(editor);

      if (!refs) {
        refs = new Set();
        POINT_REFS.set(editor, refs);
      }

      return refs;
    },

    /**
     * Return all the positions in `at` range where a `Point` can be placed.
     *
     * By default, moves forward by individual offsets at a time, but
     * the `unit` option can be used to to move by character, word, line, or block.
     *
     * The `reverse` option can be used to change iteration direction.
     *
     * Note: By default void nodes are treated as a single point and iteration
     * will not happen inside their content unless you pass in true for the
     * `voids` option, then iteration will occur.
     */
    *positions(editor) {
      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
      var {
        at = editor.selection,
        unit = 'offset',
        reverse: reverse$1 = false,
        voids = false
      } = options;

      if (!at) {
        return;
      }
      /**
       * Algorithm notes:
       *
       * Each step `distance` is dynamic depending on the underlying text
       * and the `unit` specified.  Each step, e.g., a line or word, may
       * span multiple text nodes, so we iterate through the text both on
       * two levels in step-sync:
       *
       * `leafText` stores the text on a text leaf level, and is advanced
       * through using the counters `leafTextOffset` and `leafTextRemaining`.
       *
       * `blockText` stores the text on a block level, and is shortened
       * by `distance` every time it is advanced.
       *
       * We only maintain a window of one blockText and one leafText because
       * a block node always appears before all of its leaf nodes.
       */


      var range = Editor.range(editor, at);
      var [start, end] = Range.edges(range);
      var first = reverse$1 ? end : start;
      var isNewBlock = false;
      var blockText = '';
      var distance = 0; // Distance for leafText to catch up to blockText.

      var leafTextRemaining = 0;
      var leafTextOffset = 0; // Iterate through all nodes in range, grabbing entire textual content
      // of block nodes in blockText, and text nodes in leafText.
      // Exploits the fact that nodes are sequenced in such a way that we first
      // encounter the block node, then all of its text nodes, so when iterating
      // through the blockText and leafText we just need to remember a window of
      // one block node and leaf node, respectively.

      for (var [node, path] of Editor.nodes(editor, {
        at,
        reverse: reverse$1,
        voids
      })) {
        /*
         * ELEMENT NODE - Yield position(s) for voids, collect blockText for blocks
         */
        if (Element$1.isElement(node)) {
          // Void nodes are a special case, so by default we will always
          // yield their first point. If the `voids` option is set to true,
          // then we will iterate over their content.
          if (!voids && editor.isVoid(node)) {
            yield Editor.start(editor, path);
            continue;
          } // Inline element nodes are ignored as they don't themselves
          // contribute to `blockText` or `leafText` - their parent and
          // children do.


          if (editor.isInline(node)) continue; // Block element node - set `blockText` to its text content.

          if (Editor.hasInlines(editor, node)) {
            // We always exhaust block nodes before encountering a new one:
            //   console.assert(blockText === '',
            //     `blockText='${blockText}' - `+
            //     `not exhausted before new block node`, path)
            // Ensure range considered is capped to `range`, in the
            // start/end edge cases where block extends beyond range.
            // Equivalent to this, but presumably more performant:
            //   blockRange = Editor.range(editor, ...Editor.edges(editor, path))
            //   blockRange = Range.intersection(range, blockRange) // intersect
            //   blockText = Editor.string(editor, blockRange, { voids })
            var e = Path.isAncestor(path, end.path) ? end : Editor.end(editor, path);
            var s = Path.isAncestor(path, start.path) ? start : Editor.start(editor, path);
            blockText = Editor.string(editor, {
              anchor: s,
              focus: e
            }, {
              voids
            });
            blockText = reverse$1 ? esrever.reverse(blockText) : blockText;
            isNewBlock = true;
          }
        }
        /*
         * TEXT LEAF NODE - Iterate through text content, yielding
         * positions every `distance` offset according to `unit`.
         */


        if (Text.isText(node)) {
          var isFirst = Path.equals(path, first.path); // Proof that we always exhaust text nodes before encountering a new one:
          //   console.assert(leafTextRemaining <= 0,
          //     `leafTextRemaining=${leafTextRemaining} - `+
          //     `not exhausted before new leaf text node`, path)
          // Reset `leafText` counters for new text node.

          if (isFirst) {
            leafTextRemaining = reverse$1 ? first.offset : node.text.length - first.offset;
            leafTextOffset = first.offset; // Works for reverse too.
          } else {
            leafTextRemaining = node.text.length;
            leafTextOffset = reverse$1 ? leafTextRemaining : 0;
          } // Yield position at the start of node (potentially).


          if (isFirst || isNewBlock || unit === 'offset') {
            yield {
              path,
              offset: leafTextOffset
            };
            isNewBlock = false;
          } // Yield positions every (dynamically calculated) `distance` offset.


          while (true) {
            // If `leafText` has caught up with `blockText` (distance=0),
            // and if blockText is exhausted, break to get another block node,
            // otherwise advance blockText forward by the new `distance`.
            if (distance === 0) {
              if (blockText === '') break;
              distance = calcDistance(blockText, unit);
              blockText = blockText.slice(distance);
            } // Advance `leafText` by the current `distance`.


            leafTextOffset = reverse$1 ? leafTextOffset - distance : leafTextOffset + distance;
            leafTextRemaining = leafTextRemaining - distance; // If `leafText` is exhausted, break to get a new leaf node
            // and set distance to the overflow amount, so we'll (maybe)
            // catch up to blockText in the next leaf text node.

            if (leafTextRemaining < 0) {
              distance = -leafTextRemaining;
              break;
            } // Successfully walked `distance` offsets through `leafText`
            // to catch up with `blockText`, so we can reset `distance`
            // and yield this position in this node.


            distance = 0;
            yield {
              path,
              offset: leafTextOffset
            };
          }
        }
      } // Proof that upon completion, we've exahusted both leaf and block text:
      //   console.assert(leafTextRemaining <= 0, "leafText wasn't exhausted")
      //   console.assert(blockText === '', "blockText wasn't exhausted")
      // Helper:
      // Return the distance in offsets for a step of size `unit` on given string.


      function calcDistance(text, unit) {
        if (unit === 'character') {
          return getCharacterDistance(text);
        } else if (unit === 'word') {
          return getWordDistance(text);
        } else if (unit === 'line' || unit === 'block') {
          return text.length;
        }

        return 1;
      }
    },

    /**
     * Get the matching node in the branch of the document before a location.
     */
    previous(editor) {
      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
      var {
        mode = 'lowest',
        voids = false
      } = options;
      var {
        match,
        at = editor.selection
      } = options;

      if (!at) {
        return;
      }

      var pointBeforeLocation = Editor.before(editor, at, {
        voids
      });

      if (!pointBeforeLocation) {
        return;
      }

      var [, to] = Editor.first(editor, []); // The search location is from the start of the document to the path of
      // the point before the location passed in

      var span = [pointBeforeLocation.path, to];

      if (Path.isPath(at) && at.length === 0) {
        throw new Error("Cannot get the previous node from the root node!");
      }

      if (match == null) {
        if (Path.isPath(at)) {
          var [parent] = Editor.parent(editor, at);

          match = n => parent.children.includes(n);
        } else {
          match = () => true;
        }
      }

      var [previous] = Editor.nodes(editor, {
        reverse: true,
        at: span,
        match,
        mode,
        voids
      });
      return previous;
    },

    /**
     * Get a range of a location.
     */
    range(editor, at, to) {
      if (Range.isRange(at) && !to) {
        return at;
      }

      var start = Editor.start(editor, at);
      var end = Editor.end(editor, to || at);
      return {
        anchor: start,
        focus: end
      };
    },

    /**
     * Create a mutable ref for a `Range` object, which will stay in sync as new
     * operations are applied to the editor.
     */
    rangeRef(editor, range) {
      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
      var {
        affinity = 'forward'
      } = options;
      var ref = {
        current: range,
        affinity,

        unref() {
          var {
            current
          } = ref;
          var rangeRefs = Editor.rangeRefs(editor);
          rangeRefs.delete(ref);
          ref.current = null;
          return current;
        }

      };
      var refs = Editor.rangeRefs(editor);
      refs.add(ref);
      return ref;
    },

    /**
     * Get the set of currently tracked range refs of the editor.
     */
    rangeRefs(editor) {
      var refs = RANGE_REFS.get(editor);

      if (!refs) {
        refs = new Set();
        RANGE_REFS.set(editor, refs);
      }

      return refs;
    },

    /**
     * Remove a custom property from all of the leaf text nodes in the current
     * selection.
     *
     * If the selection is currently collapsed, the removal will be stored on
     * `editor.marks` and applied to the text inserted next.
     */
    removeMark(editor, key) {
      editor.removeMark(key);
    },

    /**
     * Get the start point of a location.
     */
    start(editor, at) {
      return Editor.point(editor, at, {
        edge: 'start'
      });
    },

    /**
     * Get the text string content of a location.
     *
     * Note: by default the text of void nodes is considered to be an empty
     * string, regardless of content, unless you pass in true for the voids option
     */
    string(editor, at) {
      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
      var {
        voids = false
      } = options;
      var range = Editor.range(editor, at);
      var [start, end] = Range.edges(range);
      var text = '';

      for (var [node, path] of Editor.nodes(editor, {
        at: range,
        match: Text.isText,
        voids
      })) {
        var t = node.text;

        if (Path.equals(path, end.path)) {
          t = t.slice(0, end.offset);
        }

        if (Path.equals(path, start.path)) {
          t = t.slice(start.offset);
        }

        text += t;
      }

      return text;
    },

    /**
     * Convert a range into a non-hanging one.
     */
    unhangRange(editor, range) {
      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
      var {
        voids = false
      } = options;
      var [start, end] = Range.edges(range); // PERF: exit early if we can guarantee that the range isn't hanging.

      if (start.offset !== 0 || end.offset !== 0 || Range.isCollapsed(range)) {
        return range;
      }

      var endBlock = Editor.above(editor, {
        at: end,
        match: n => Editor.isBlock(editor, n)
      });
      var blockPath = endBlock ? endBlock[1] : [];
      var first = Editor.start(editor, []);
      var before = {
        anchor: first,
        focus: end
      };
      var skip = true;

      for (var [node, path] of Editor.nodes(editor, {
        at: before,
        match: Text.isText,
        reverse: true,
        voids
      })) {
        if (skip) {
          skip = false;
          continue;
        }

        if (node.text !== '' || Path.isBefore(path, blockPath)) {
          end = {
            path,
            offset: node.text.length
          };
          break;
        }
      }

      return {
        anchor: start,
        focus: end
      };
    },

    /**
     * Match a void node in the current branch of the editor.
     */
    void(editor) {
      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
      return Editor.above(editor, _objectSpread$1(_objectSpread$1({}, options), {}, {
        match: n => Editor.isVoid(editor, n)
      }));
    },

    /**
     * Call a function, deferring normalization until after it completes.
     */
    withoutNormalizing(editor, fn) {
      var value = Editor.isNormalizing(editor);
      NORMALIZING.set(editor, false);

      try {
        fn();
      } finally {
        NORMALIZING.set(editor, value);
      }

      Editor.normalize(editor);
    }

  };

  var Location = {
    /**
     * Check if a value implements the `Location` interface.
     */
    isLocation(value) {
      return Path.isPath(value) || Point.isPoint(value) || Range.isRange(value);
    }

  };
  var Span = {
    /**
     * Check if a value implements the `Span` interface.
     */
    isSpan(value) {
      return Array.isArray(value) && value.length === 2 && value.every(Path.isPath);
    }

  };

  var IS_NODE_LIST_CACHE = new WeakMap();
  var Node$1 = {
    /**
     * Get the node at a specific path, asserting that it's an ancestor node.
     */
    ancestor(root, path) {
      var node = Node$1.get(root, path);

      if (Text.isText(node)) {
        throw new Error("Cannot get the ancestor node at path [".concat(path, "] because it refers to a text node instead: ").concat(node));
      }

      return node;
    },

    /**
     * Return a generator of all the ancestor nodes above a specific path.
     *
     * By default the order is bottom-up, from lowest to highest ancestor in
     * the tree, but you can pass the `reverse: true` option to go top-down.
     */
    *ancestors(root, path) {
      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};

      for (var p of Path.ancestors(path, options)) {
        var n = Node$1.ancestor(root, p);
        var entry = [n, p];
        yield entry;
      }
    },

    /**
     * Get the child of a node at a specific index.
     */
    child(root, index) {
      if (Text.isText(root)) {
        throw new Error("Cannot get the child of a text node: ".concat(JSON.stringify(root)));
      }

      var c = root.children[index];

      if (c == null) {
        throw new Error("Cannot get child at index `".concat(index, "` in node: ").concat(JSON.stringify(root)));
      }

      return c;
    },

    /**
     * Iterate over the children of a node at a specific path.
     */
    *children(root, path) {
      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
      var {
        reverse = false
      } = options;
      var ancestor = Node$1.ancestor(root, path);
      var {
        children
      } = ancestor;
      var index = reverse ? children.length - 1 : 0;

      while (reverse ? index >= 0 : index < children.length) {
        var child = Node$1.child(ancestor, index);
        var childPath = path.concat(index);
        yield [child, childPath];
        index = reverse ? index - 1 : index + 1;
      }
    },

    /**
     * Get an entry for the common ancesetor node of two paths.
     */
    common(root, path, another) {
      var p = Path.common(path, another);
      var n = Node$1.get(root, p);
      return [n, p];
    },

    /**
     * Get the node at a specific path, asserting that it's a descendant node.
     */
    descendant(root, path) {
      var node = Node$1.get(root, path);

      if (Editor.isEditor(node)) {
        throw new Error("Cannot get the descendant node at path [".concat(path, "] because it refers to the root editor node instead: ").concat(node));
      }

      return node;
    },

    /**
     * Return a generator of all the descendant node entries inside a root node.
     */
    *descendants(root) {
      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

      for (var [node, path] of Node$1.nodes(root, options)) {
        if (path.length !== 0) {
          // NOTE: we have to coerce here because checking the path's length does
          // guarantee that `node` is not a `Editor`, but TypeScript doesn't know.
          yield [node, path];
        }
      }
    },

    /**
     * Return a generator of all the element nodes inside a root node. Each iteration
     * will return an `ElementEntry` tuple consisting of `[Element, Path]`. If the
     * root node is an element it will be included in the iteration as well.
     */
    *elements(root) {
      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

      for (var [node, path] of Node$1.nodes(root, options)) {
        if (Element$1.isElement(node)) {
          yield [node, path];
        }
      }
    },

    /**
     * Extract props from a Node.
     */
    extractProps(node) {
      if (Element$1.isAncestor(node)) {
        var properties = _objectWithoutProperties(node, ["children"]);

        return properties;
      } else {
        var properties = _objectWithoutProperties(node, ["text"]);

        return properties;
      }
    },

    /**
     * Get the first node entry in a root node from a path.
     */
    first(root, path) {
      var p = path.slice();
      var n = Node$1.get(root, p);

      while (n) {
        if (Text.isText(n) || n.children.length === 0) {
          break;
        } else {
          n = n.children[0];
          p.push(0);
        }
      }

      return [n, p];
    },

    /**
     * Get the sliced fragment represented by a range inside a root node.
     */
    fragment(root, range) {
      if (Text.isText(root)) {
        throw new Error("Cannot get a fragment starting from a root text node: ".concat(JSON.stringify(root)));
      }

      var newRoot = fn$4({
        children: root.children
      }, r => {
        var [start, end] = Range.edges(range);
        var nodeEntries = Node$1.nodes(r, {
          reverse: true,
          pass: (_ref) => {
            var [, path] = _ref;
            return !Range.includes(range, path);
          }
        });

        for (var [, path] of nodeEntries) {
          if (!Range.includes(range, path)) {
            var parent = Node$1.parent(r, path);
            var index = path[path.length - 1];
            parent.children.splice(index, 1);
          }

          if (Path.equals(path, end.path)) {
            var leaf = Node$1.leaf(r, path);
            leaf.text = leaf.text.slice(0, end.offset);
          }

          if (Path.equals(path, start.path)) {
            var _leaf = Node$1.leaf(r, path);

            _leaf.text = _leaf.text.slice(start.offset);
          }
        }

        if (Editor.isEditor(r)) {
          r.selection = null;
        }
      });
      return newRoot.children;
    },

    /**
     * Get the descendant node referred to by a specific path. If the path is an
     * empty array, it refers to the root node itself.
     */
    get(root, path) {
      var node = root;

      for (var i = 0; i < path.length; i++) {
        var p = path[i];

        if (Text.isText(node) || !node.children[p]) {
          throw new Error("Cannot find a descendant at path [".concat(path, "] in node: ").concat(JSON.stringify(root)));
        }

        node = node.children[p];
      }

      return node;
    },

    /**
     * Check if a descendant node exists at a specific path.
     */
    has(root, path) {
      var node = root;

      for (var i = 0; i < path.length; i++) {
        var p = path[i];

        if (Text.isText(node) || !node.children[p]) {
          return false;
        }

        node = node.children[p];
      }

      return true;
    },

    /**
     * Check if a value implements the `Node` interface.
     */
    isNode(value) {
      return Text.isText(value) || Element$1.isElement(value) || Editor.isEditor(value);
    },

    /**
     * Check if a value is a list of `Node` objects.
     */
    isNodeList(value) {
      if (!Array.isArray(value)) {
        return false;
      }

      var cachedResult = IS_NODE_LIST_CACHE.get(value);

      if (cachedResult !== undefined) {
        return cachedResult;
      }

      var isNodeList = value.every(val => Node$1.isNode(val));
      IS_NODE_LIST_CACHE.set(value, isNodeList);
      return isNodeList;
    },

    /**
     * Get the last node entry in a root node from a path.
     */
    last(root, path) {
      var p = path.slice();
      var n = Node$1.get(root, p);

      while (n) {
        if (Text.isText(n) || n.children.length === 0) {
          break;
        } else {
          var i = n.children.length - 1;
          n = n.children[i];
          p.push(i);
        }
      }

      return [n, p];
    },

    /**
     * Get the node at a specific path, ensuring it's a leaf text node.
     */
    leaf(root, path) {
      var node = Node$1.get(root, path);

      if (!Text.isText(node)) {
        throw new Error("Cannot get the leaf node at path [".concat(path, "] because it refers to a non-leaf node: ").concat(node));
      }

      return node;
    },

    /**
     * Return a generator of the in a branch of the tree, from a specific path.
     *
     * By default the order is top-down, from lowest to highest node in the tree,
     * but you can pass the `reverse: true` option to go bottom-up.
     */
    *levels(root, path) {
      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};

      for (var p of Path.levels(path, options)) {
        var n = Node$1.get(root, p);
        yield [n, p];
      }
    },

    /**
     * Check if a node matches a set of props.
     */
    matches(node, props) {
      return Element$1.isElement(node) && Element$1.isElementProps(props) && Element$1.matches(node, props) || Text.isText(node) && Text.isTextProps(props) && Text.matches(node, props);
    },

    /**
     * Return a generator of all the node entries of a root node. Each entry is
     * returned as a `[Node, Path]` tuple, with the path referring to the node's
     * position inside the root node.
     */
    *nodes(root) {
      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
      var {
        pass,
        reverse = false
      } = options;
      var {
        from = [],
        to
      } = options;
      var visited = new Set();
      var p = [];
      var n = root;

      while (true) {
        if (to && (reverse ? Path.isBefore(p, to) : Path.isAfter(p, to))) {
          break;
        }

        if (!visited.has(n)) {
          yield [n, p];
        } // If we're allowed to go downward and we haven't descended yet, do.


        if (!visited.has(n) && !Text.isText(n) && n.children.length !== 0 && (pass == null || pass([n, p]) === false)) {
          visited.add(n);
          var nextIndex = reverse ? n.children.length - 1 : 0;

          if (Path.isAncestor(p, from)) {
            nextIndex = from[p.length];
          }

          p = p.concat(nextIndex);
          n = Node$1.get(root, p);
          continue;
        } // If we're at the root and we can't go down, we're done.


        if (p.length === 0) {
          break;
        } // If we're going forward...


        if (!reverse) {
          var newPath = Path.next(p);

          if (Node$1.has(root, newPath)) {
            p = newPath;
            n = Node$1.get(root, p);
            continue;
          }
        } // If we're going backward...


        if (reverse && p[p.length - 1] !== 0) {
          var _newPath = Path.previous(p);

          p = _newPath;
          n = Node$1.get(root, p);
          continue;
        } // Otherwise we're going upward...


        p = Path.parent(p);
        n = Node$1.get(root, p);
        visited.add(n);
      }
    },

    /**
     * Get the parent of a node at a specific path.
     */
    parent(root, path) {
      var parentPath = Path.parent(path);
      var p = Node$1.get(root, parentPath);

      if (Text.isText(p)) {
        throw new Error("Cannot get the parent of path [".concat(path, "] because it does not exist in the root."));
      }

      return p;
    },

    /**
     * Get the concatenated text string of a node's content.
     *
     * Note that this will not include spaces or line breaks between block nodes.
     * It is not a user-facing string, but a string for performing offset-related
     * computations for a node.
     */
    string(node) {
      if (Text.isText(node)) {
        return node.text;
      } else {
        return node.children.map(Node$1.string).join('');
      }
    },

    /**
     * Return a generator of all leaf text nodes in a root node.
     */
    *texts(root) {
      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

      for (var [node, path] of Node$1.nodes(root, options)) {
        if (Text.isText(node)) {
          yield [node, path];
        }
      }
    }

  };

  function ownKeys$2(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

  function _objectSpread$2(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys$2(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys$2(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }
  var Operation = {
    /**
     * Check of a value is a `NodeOperation` object.
     */
    isNodeOperation(value) {
      return Operation.isOperation(value) && value.type.endsWith('_node');
    },

    /**
     * Check of a value is an `Operation` object.
     */
    isOperation(value) {
      if (!isPlainObject(value)) {
        return false;
      }

      switch (value.type) {
        case 'insert_node':
          return Path.isPath(value.path) && Node$1.isNode(value.node);

        case 'insert_text':
          return typeof value.offset === 'number' && typeof value.text === 'string' && Path.isPath(value.path);

        case 'merge_node':
          return typeof value.position === 'number' && Path.isPath(value.path) && isPlainObject(value.properties);

        case 'move_node':
          return Path.isPath(value.path) && Path.isPath(value.newPath);

        case 'remove_node':
          return Path.isPath(value.path) && Node$1.isNode(value.node);

        case 'remove_text':
          return typeof value.offset === 'number' && typeof value.text === 'string' && Path.isPath(value.path);

        case 'set_node':
          return Path.isPath(value.path) && isPlainObject(value.properties) && isPlainObject(value.newProperties);

        case 'set_selection':
          return value.properties === null && Range.isRange(value.newProperties) || value.newProperties === null && Range.isRange(value.properties) || isPlainObject(value.properties) && isPlainObject(value.newProperties);

        case 'split_node':
          return Path.isPath(value.path) && typeof value.position === 'number' && isPlainObject(value.properties);

        default:
          return false;
      }
    },

    /**
     * Check if a value is a list of `Operation` objects.
     */
    isOperationList(value) {
      return Array.isArray(value) && value.every(val => Operation.isOperation(val));
    },

    /**
     * Check of a value is a `SelectionOperation` object.
     */
    isSelectionOperation(value) {
      return Operation.isOperation(value) && value.type.endsWith('_selection');
    },

    /**
     * Check of a value is a `TextOperation` object.
     */
    isTextOperation(value) {
      return Operation.isOperation(value) && value.type.endsWith('_text');
    },

    /**
     * Invert an operation, returning a new operation that will exactly undo the
     * original when applied.
     */
    inverse(op) {
      switch (op.type) {
        case 'insert_node':
          {
            return _objectSpread$2(_objectSpread$2({}, op), {}, {
              type: 'remove_node'
            });
          }

        case 'insert_text':
          {
            return _objectSpread$2(_objectSpread$2({}, op), {}, {
              type: 'remove_text'
            });
          }

        case 'merge_node':
          {
            return _objectSpread$2(_objectSpread$2({}, op), {}, {
              type: 'split_node',
              path: Path.previous(op.path)
            });
          }

        case 'move_node':
          {
            var {
              newPath,
              path
            } = op; // PERF: in this case the move operation is a no-op anyways.

            if (Path.equals(newPath, path)) {
              return op;
            } // If the move happens completely within a single parent the path and
            // newPath are stable with respect to each other.


            if (Path.isSibling(path, newPath)) {
              return _objectSpread$2(_objectSpread$2({}, op), {}, {
                path: newPath,
                newPath: path
              });
            } // If the move does not happen within a single parent it is possible
            // for the move to impact the true path to the location where the node
            // was removed from and where it was inserted. We have to adjust for this
            // and find the original path. We can accomplish this (only in non-sibling)
            // moves by looking at the impact of the move operation on the node
            // after the original move path.


            var inversePath = Path.transform(path, op);
            var inverseNewPath = Path.transform(Path.next(path), op);
            return _objectSpread$2(_objectSpread$2({}, op), {}, {
              path: inversePath,
              newPath: inverseNewPath
            });
          }

        case 'remove_node':
          {
            return _objectSpread$2(_objectSpread$2({}, op), {}, {
              type: 'insert_node'
            });
          }

        case 'remove_text':
          {
            return _objectSpread$2(_objectSpread$2({}, op), {}, {
              type: 'insert_text'
            });
          }

        case 'set_node':
          {
            var {
              properties,
              newProperties
            } = op;
            return _objectSpread$2(_objectSpread$2({}, op), {}, {
              properties: newProperties,
              newProperties: properties
            });
          }

        case 'set_selection':
          {
            var {
              properties: _properties,
              newProperties: _newProperties
            } = op;

            if (_properties == null) {
              return _objectSpread$2(_objectSpread$2({}, op), {}, {
                properties: _newProperties,
                newProperties: null
              });
            } else if (_newProperties == null) {
              return _objectSpread$2(_objectSpread$2({}, op), {}, {
                properties: null,
                newProperties: _properties
              });
            } else {
              return _objectSpread$2(_objectSpread$2({}, op), {}, {
                properties: _newProperties,
                newProperties: _properties
              });
            }
          }

        case 'split_node':
          {
            return _objectSpread$2(_objectSpread$2({}, op), {}, {
              type: 'merge_node',
              path: Path.next(op.path)
            });
          }
      }
    }

  };

  var Path = {
    /**
     * Get a list of ancestor paths for a given path.
     *
     * The paths are sorted from deepest to shallowest ancestor. However, if the
     * `reverse: true` option is passed, they are reversed.
     */
    ancestors(path) {
      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
      var {
        reverse = false
      } = options;
      var paths = Path.levels(path, options);

      if (reverse) {
        paths = paths.slice(1);
      } else {
        paths = paths.slice(0, -1);
      }

      return paths;
    },

    /**
     * Get the common ancestor path of two paths.
     */
    common(path, another) {
      var common = [];

      for (var i = 0; i < path.length && i < another.length; i++) {
        var av = path[i];
        var bv = another[i];

        if (av !== bv) {
          break;
        }

        common.push(av);
      }

      return common;
    },

    /**
     * Compare a path to another, returning an integer indicating whether the path
     * was before, at, or after the other.
     *
     * Note: Two paths of unequal length can still receive a `0` result if one is
     * directly above or below the other. If you want exact matching, use
     * [[Path.equals]] instead.
     */
    compare(path, another) {
      var min = Math.min(path.length, another.length);

      for (var i = 0; i < min; i++) {
        if (path[i] < another[i]) return -1;
        if (path[i] > another[i]) return 1;
      }

      return 0;
    },

    /**
     * Check if a path ends after one of the indexes in another.
     */
    endsAfter(path, another) {
      var i = path.length - 1;
      var as = path.slice(0, i);
      var bs = another.slice(0, i);
      var av = path[i];
      var bv = another[i];
      return Path.equals(as, bs) && av > bv;
    },

    /**
     * Check if a path ends at one of the indexes in another.
     */
    endsAt(path, another) {
      var i = path.length;
      var as = path.slice(0, i);
      var bs = another.slice(0, i);
      return Path.equals(as, bs);
    },

    /**
     * Check if a path ends before one of the indexes in another.
     */
    endsBefore(path, another) {
      var i = path.length - 1;
      var as = path.slice(0, i);
      var bs = another.slice(0, i);
      var av = path[i];
      var bv = another[i];
      return Path.equals(as, bs) && av < bv;
    },

    /**
     * Check if a path is exactly equal to another.
     */
    equals(path, another) {
      return path.length === another.length && path.every((n, i) => n === another[i]);
    },

    /**
     * Check if the path of previous sibling node exists
     */
    hasPrevious(path) {
      return path[path.length - 1] > 0;
    },

    /**
     * Check if a path is after another.
     */
    isAfter(path, another) {
      return Path.compare(path, another) === 1;
    },

    /**
     * Check if a path is an ancestor of another.
     */
    isAncestor(path, another) {
      return path.length < another.length && Path.compare(path, another) === 0;
    },

    /**
     * Check if a path is before another.
     */
    isBefore(path, another) {
      return Path.compare(path, another) === -1;
    },

    /**
     * Check if a path is a child of another.
     */
    isChild(path, another) {
      return path.length === another.length + 1 && Path.compare(path, another) === 0;
    },

    /**
     * Check if a path is equal to or an ancestor of another.
     */
    isCommon(path, another) {
      return path.length <= another.length && Path.compare(path, another) === 0;
    },

    /**
     * Check if a path is a descendant of another.
     */
    isDescendant(path, another) {
      return path.length > another.length && Path.compare(path, another) === 0;
    },

    /**
     * Check if a path is the parent of another.
     */
    isParent(path, another) {
      return path.length + 1 === another.length && Path.compare(path, another) === 0;
    },

    /**
     * Check is a value implements the `Path` interface.
     */
    isPath(value) {
      return Array.isArray(value) && (value.length === 0 || typeof value[0] === 'number');
    },

    /**
     * Check if a path is a sibling of another.
     */
    isSibling(path, another) {
      if (path.length !== another.length) {
        return false;
      }

      var as = path.slice(0, -1);
      var bs = another.slice(0, -1);
      var al = path[path.length - 1];
      var bl = another[another.length - 1];
      return al !== bl && Path.equals(as, bs);
    },

    /**
     * Get a list of paths at every level down to a path. Note: this is the same
     * as `Path.ancestors`, but including the path itself.
     *
     * The paths are sorted from shallowest to deepest. However, if the `reverse:
     * true` option is passed, they are reversed.
     */
    levels(path) {
      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
      var {
        reverse = false
      } = options;
      var list = [];

      for (var i = 0; i <= path.length; i++) {
        list.push(path.slice(0, i));
      }

      if (reverse) {
        list.reverse();
      }

      return list;
    },

    /**
     * Given a path, get the path to the next sibling node.
     */
    next(path) {
      if (path.length === 0) {
        throw new Error("Cannot get the next path of a root path [".concat(path, "], because it has no next index."));
      }

      var last = path[path.length - 1];
      return path.slice(0, -1).concat(last + 1);
    },

    /**
     * Given a path, return a new path referring to the parent node above it.
     */
    parent(path) {
      if (path.length === 0) {
        throw new Error("Cannot get the parent path of the root path [".concat(path, "]."));
      }

      return path.slice(0, -1);
    },

    /**
     * Given a path, get the path to the previous sibling node.
     */
    previous(path) {
      if (path.length === 0) {
        throw new Error("Cannot get the previous path of a root path [".concat(path, "], because it has no previous index."));
      }

      var last = path[path.length - 1];

      if (last <= 0) {
        throw new Error("Cannot get the previous path of a first child path [".concat(path, "] because it would result in a negative index."));
      }

      return path.slice(0, -1).concat(last - 1);
    },

    /**
     * Get a path relative to an ancestor.
     */
    relative(path, ancestor) {
      if (!Path.isAncestor(ancestor, path) && !Path.equals(path, ancestor)) {
        throw new Error("Cannot get the relative path of [".concat(path, "] inside ancestor [").concat(ancestor, "], because it is not above or equal to the path."));
      }

      return path.slice(ancestor.length);
    },

    /**
     * Transform a path by an operation.
     */
    transform(path, operation) {
      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
      return fn$4(path, p => {
        var {
          affinity = 'forward'
        } = options; // PERF: Exit early if the operation is guaranteed not to have an effect.

        if (path.length === 0) {
          return;
        }

        switch (operation.type) {
          case 'insert_node':
            {
              var {
                path: op
              } = operation;

              if (Path.equals(op, p) || Path.endsBefore(op, p) || Path.isAncestor(op, p)) {
                p[op.length - 1] += 1;
              }

              break;
            }

          case 'remove_node':
            {
              var {
                path: _op
              } = operation;

              if (Path.equals(_op, p) || Path.isAncestor(_op, p)) {
                return null;
              } else if (Path.endsBefore(_op, p)) {
                p[_op.length - 1] -= 1;
              }

              break;
            }

          case 'merge_node':
            {
              var {
                path: _op2,
                position
              } = operation;

              if (Path.equals(_op2, p) || Path.endsBefore(_op2, p)) {
                p[_op2.length - 1] -= 1;
              } else if (Path.isAncestor(_op2, p)) {
                p[_op2.length - 1] -= 1;
                p[_op2.length] += position;
              }

              break;
            }

          case 'split_node':
            {
              var {
                path: _op3,
                position: _position
              } = operation;

              if (Path.equals(_op3, p)) {
                if (affinity === 'forward') {
                  p[p.length - 1] += 1;
                } else if (affinity === 'backward') ; else {
                  return null;
                }
              } else if (Path.endsBefore(_op3, p)) {
                p[_op3.length - 1] += 1;
              } else if (Path.isAncestor(_op3, p) && path[_op3.length] >= _position) {
                p[_op3.length - 1] += 1;
                p[_op3.length] -= _position;
              }

              break;
            }

          case 'move_node':
            {
              var {
                path: _op4,
                newPath: onp
              } = operation; // If the old and new path are the same, it's a no-op.

              if (Path.equals(_op4, onp)) {
                return;
              }

              if (Path.isAncestor(_op4, p) || Path.equals(_op4, p)) {
                var copy = onp.slice();

                if (Path.endsBefore(_op4, onp) && _op4.length < onp.length) {
                  copy[_op4.length - 1] -= 1;
                }

                return copy.concat(p.slice(_op4.length));
              } else if (Path.isSibling(_op4, onp) && (Path.isAncestor(onp, p) || Path.equals(onp, p))) {
                if (Path.endsBefore(_op4, p)) {
                  p[_op4.length - 1] -= 1;
                } else {
                  p[_op4.length - 1] += 1;
                }
              } else if (Path.endsBefore(onp, p) || Path.equals(onp, p) || Path.isAncestor(onp, p)) {
                if (Path.endsBefore(_op4, p)) {
                  p[_op4.length - 1] -= 1;
                }

                p[onp.length - 1] += 1;
              } else if (Path.endsBefore(_op4, p)) {
                if (Path.equals(onp, p)) {
                  p[onp.length - 1] += 1;
                }

                p[_op4.length - 1] -= 1;
              }

              break;
            }
        }
      });
    }

  };

  var PathRef = {
    /**
     * Transform the path ref's current value by an operation.
     */
    transform(ref, op) {
      var {
        current,
        affinity
      } = ref;

      if (current == null) {
        return;
      }

      var path = Path.transform(current, op, {
        affinity
      });
      ref.current = path;

      if (path == null) {
        ref.unref();
      }
    }

  };

  function ownKeys$3(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

  function _objectSpread$3(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys$3(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys$3(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }
  var Point = {
    /**
     * Compare a point to another, returning an integer indicating whether the
     * point was before, at, or after the other.
     */
    compare(point, another) {
      var result = Path.compare(point.path, another.path);

      if (result === 0) {
        if (point.offset < another.offset) return -1;
        if (point.offset > another.offset) return 1;
        return 0;
      }

      return result;
    },

    /**
     * Check if a point is after another.
     */
    isAfter(point, another) {
      return Point.compare(point, another) === 1;
    },

    /**
     * Check if a point is before another.
     */
    isBefore(point, another) {
      return Point.compare(point, another) === -1;
    },

    /**
     * Check if a point is exactly equal to another.
     */
    equals(point, another) {
      // PERF: ensure the offsets are equal first since they are cheaper to check.
      return point.offset === another.offset && Path.equals(point.path, another.path);
    },

    /**
     * Check if a value implements the `Point` interface.
     */
    isPoint(value) {
      return isPlainObject(value) && typeof value.offset === 'number' && Path.isPath(value.path);
    },

    /**
     * Transform a point by an operation.
     */
    transform(point, op) {
      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
      return fn$4(point, p => {
        var {
          affinity = 'forward'
        } = options;
        var {
          path,
          offset
        } = p;

        switch (op.type) {
          case 'insert_node':
          case 'move_node':
            {
              p.path = Path.transform(path, op, options);
              break;
            }

          case 'insert_text':
            {
              if (Path.equals(op.path, path) && op.offset <= offset) {
                p.offset += op.text.length;
              }

              break;
            }

          case 'merge_node':
            {
              if (Path.equals(op.path, path)) {
                p.offset += op.position;
              }

              p.path = Path.transform(path, op, options);
              break;
            }

          case 'remove_text':
            {
              if (Path.equals(op.path, path) && op.offset <= offset) {
                p.offset -= Math.min(offset - op.offset, op.text.length);
              }

              break;
            }

          case 'remove_node':
            {
              if (Path.equals(op.path, path) || Path.isAncestor(op.path, path)) {
                return null;
              }

              p.path = Path.transform(path, op, options);
              break;
            }

          case 'split_node':
            {
              if (Path.equals(op.path, path)) {
                if (op.position === offset && affinity == null) {
                  return null;
                } else if (op.position < offset || op.position === offset && affinity === 'forward') {
                  p.offset -= op.position;
                  p.path = Path.transform(path, op, _objectSpread$3(_objectSpread$3({}, options), {}, {
                    affinity: 'forward'
                  }));
                }
              } else {
                p.path = Path.transform(path, op, options);
              }

              break;
            }
        }
      });
    }

  };

  var PointRef = {
    /**
     * Transform the point ref's current value by an operation.
     */
    transform(ref, op) {
      var {
        current,
        affinity
      } = ref;

      if (current == null) {
        return;
      }

      var point = Point.transform(current, op, {
        affinity
      });
      ref.current = point;

      if (point == null) {
        ref.unref();
      }
    }

  };

  function ownKeys$4(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

  function _objectSpread$4(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys$4(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys$4(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }
  var Range = {
    /**
     * Get the start and end points of a range, in the order in which they appear
     * in the document.
     */
    edges(range) {
      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
      var {
        reverse = false
      } = options;
      var {
        anchor,
        focus
      } = range;
      return Range.isBackward(range) === reverse ? [anchor, focus] : [focus, anchor];
    },

    /**
     * Get the end point of a range.
     */
    end(range) {
      var [, end] = Range.edges(range);
      return end;
    },

    /**
     * Check if a range is exactly equal to another.
     */
    equals(range, another) {
      return Point.equals(range.anchor, another.anchor) && Point.equals(range.focus, another.focus);
    },

    /**
     * Check if a range includes a path, a point or part of another range.
     */
    includes(range, target) {
      if (Range.isRange(target)) {
        if (Range.includes(range, target.anchor) || Range.includes(range, target.focus)) {
          return true;
        }

        var [rs, re] = Range.edges(range);
        var [ts, te] = Range.edges(target);
        return Point.isBefore(rs, ts) && Point.isAfter(re, te);
      }

      var [start, end] = Range.edges(range);
      var isAfterStart = false;
      var isBeforeEnd = false;

      if (Point.isPoint(target)) {
        isAfterStart = Point.compare(target, start) >= 0;
        isBeforeEnd = Point.compare(target, end) <= 0;
      } else {
        isAfterStart = Path.compare(target, start.path) >= 0;
        isBeforeEnd = Path.compare(target, end.path) <= 0;
      }

      return isAfterStart && isBeforeEnd;
    },

    /**
     * Get the intersection of a range with another.
     */
    intersection(range, another) {
      var rest = _objectWithoutProperties(range, ["anchor", "focus"]);

      var [s1, e1] = Range.edges(range);
      var [s2, e2] = Range.edges(another);
      var start = Point.isBefore(s1, s2) ? s2 : s1;
      var end = Point.isBefore(e1, e2) ? e1 : e2;

      if (Point.isBefore(end, start)) {
        return null;
      } else {
        return _objectSpread$4({
          anchor: start,
          focus: end
        }, rest);
      }
    },

    /**
     * Check if a range is backward, meaning that its anchor point appears in the
     * document _after_ its focus point.
     */
    isBackward(range) {
      var {
        anchor,
        focus
      } = range;
      return Point.isAfter(anchor, focus);
    },

    /**
     * Check if a range is collapsed, meaning that both its anchor and focus
     * points refer to the exact same position in the document.
     */
    isCollapsed(range) {
      var {
        anchor,
        focus
      } = range;
      return Point.equals(anchor, focus);
    },

    /**
     * Check if a range is expanded.
     *
     * This is the opposite of [[Range.isCollapsed]] and is provided for legibility.
     */
    isExpanded(range) {
      return !Range.isCollapsed(range);
    },

    /**
     * Check if a range is forward.
     *
     * This is the opposite of [[Range.isBackward]] and is provided for legibility.
     */
    isForward(range) {
      return !Range.isBackward(range);
    },

    /**
     * Check if a value implements the [[Range]] interface.
     */
    isRange(value) {
      return isPlainObject(value) && Point.isPoint(value.anchor) && Point.isPoint(value.focus);
    },

    /**
     * Iterate through all of the point entries in a range.
     */
    *points(range) {
      yield [range.anchor, 'anchor'];
      yield [range.focus, 'focus'];
    },

    /**
     * Get the start point of a range.
     */
    start(range) {
      var [start] = Range.edges(range);
      return start;
    },

    /**
     * Transform a range by an operation.
     */
    transform(range, op) {
      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
      var {
        affinity = 'inward'
      } = options;
      var affinityAnchor;
      var affinityFocus;

      if (affinity === 'inward') {
        if (Range.isForward(range)) {
          affinityAnchor = 'forward';
          affinityFocus = 'backward';
        } else {
          affinityAnchor = 'backward';
          affinityFocus = 'forward';
        }
      } else if (affinity === 'outward') {
        if (Range.isForward(range)) {
          affinityAnchor = 'backward';
          affinityFocus = 'forward';
        } else {
          affinityAnchor = 'forward';
          affinityFocus = 'backward';
        }
      } else {
        affinityAnchor = affinity;
        affinityFocus = affinity;
      }

      return fn$4(range, r => {
        var anchor = Point.transform(r.anchor, op, {
          affinity: affinityAnchor
        });
        var focus = Point.transform(r.focus, op, {
          affinity: affinityFocus
        });

        if (!anchor || !focus) {
          return null;
        }

        r.anchor = anchor;
        r.focus = focus;
      });
    }

  };

  var RangeRef = {
    /**
     * Transform the range ref's current value by an operation.
     */
    transform(ref, op) {
      var {
        current,
        affinity
      } = ref;

      if (current == null) {
        return;
      }

      var path = Range.transform(current, op, {
        affinity
      });
      ref.current = path;

      if (path == null) {
        ref.unref();
      }
    }

  };

  function ownKeys$5(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

  function _objectSpread$5(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys$5(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys$5(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }
  var Text = {
    /**
     * Check if two text nodes are equal.
     */
    equals(text, another) {
      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
      var {
        loose = false
      } = options;

      function omitText(obj) {
        var rest = _objectWithoutProperties(obj, ["text"]);

        return rest;
      }

      return fastDeepEqual(loose ? omitText(text) : text, loose ? omitText(another) : another);
    },

    /**
     * Check if a value implements the `Text` interface.
     */
    isText(value) {
      return isPlainObject(value) && typeof value.text === 'string';
    },

    /**
     * Check if a value is a list of `Text` objects.
     */
    isTextList(value) {
      return Array.isArray(value) && value.every(val => Text.isText(val));
    },

    /**
     * Check if some props are a partial of Text.
     */
    isTextProps(props) {
      return props.text !== undefined;
    },

    /**
     * Check if an text matches set of properties.
     *
     * Note: this is for matching custom properties, and it does not ensure that
     * the `text` property are two nodes equal.
     */
    matches(text, props) {
      for (var key in props) {
        if (key === 'text') {
          continue;
        }

        if (!text.hasOwnProperty(key) || text[key] !== props[key]) {
          return false;
        }
      }

      return true;
    },

    /**
     * Get the leaves for a text node given decorations.
     */
    decorations(node, decorations) {
      var leaves = [_objectSpread$5({}, node)];

      for (var dec of decorations) {
        var rest = _objectWithoutProperties(dec, ["anchor", "focus"]);

        var [start, end] = Range.edges(dec);
        var next = [];
        var o = 0;

        for (var leaf of leaves) {
          var {
            length
          } = leaf.text;
          var offset = o;
          o += length; // If the range encompases the entire leaf, add the range.

          if (start.offset <= offset && end.offset >= o) {
            Object.assign(leaf, rest);
            next.push(leaf);
            continue;
          } // If the range expanded and match the leaf, or starts after, or ends before it, continue.


          if (start.offset !== end.offset && (start.offset === o || end.offset === offset) || start.offset > o || end.offset < offset || end.offset === offset && offset !== 0) {
            next.push(leaf);
            continue;
          } // Otherwise we need to split the leaf, at the start, end, or both,
          // and add the range to the middle intersecting section. Do the end
          // split first since we don't need to update the offset that way.


          var middle = leaf;
          var before = void 0;
          var after = void 0;

          if (end.offset < o) {
            var off = end.offset - offset;
            after = _objectSpread$5(_objectSpread$5({}, middle), {}, {
              text: middle.text.slice(off)
            });
            middle = _objectSpread$5(_objectSpread$5({}, middle), {}, {
              text: middle.text.slice(0, off)
            });
          }

          if (start.offset > offset) {
            var _off = start.offset - offset;

            before = _objectSpread$5(_objectSpread$5({}, middle), {}, {
              text: middle.text.slice(0, _off)
            });
            middle = _objectSpread$5(_objectSpread$5({}, middle), {}, {
              text: middle.text.slice(_off)
            });
          }

          Object.assign(middle, rest);

          if (before) {
            next.push(before);
          }

          next.push(middle);

          if (after) {
            next.push(after);
          }
        }

        leaves = next;
      }

      return leaves;
    }

  };

  function ownKeys$6(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

  function _objectSpread$6(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys$6(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys$6(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

  var applyToDraft = (editor, selection, op) => {
    switch (op.type) {
      case 'insert_node':
        {
          var {
            path,
            node
          } = op;
          var parent = Node$1.parent(editor, path);
          var index = path[path.length - 1];

          if (index > parent.children.length) {
            throw new Error("Cannot apply an \"insert_node\" operation at path [".concat(path, "] because the destination is past the end of the node."));
          }

          parent.children.splice(index, 0, node);

          if (selection) {
            for (var [point, key] of Range.points(selection)) {
              selection[key] = Point.transform(point, op);
            }
          }

          break;
        }

      case 'insert_text':
        {
          var {
            path: _path,
            offset,
            text
          } = op;
          if (text.length === 0) break;

          var _node = Node$1.leaf(editor, _path);

          var before = _node.text.slice(0, offset);

          var after = _node.text.slice(offset);

          _node.text = before + text + after;

          if (selection) {
            for (var [_point, _key] of Range.points(selection)) {
              selection[_key] = Point.transform(_point, op);
            }
          }

          break;
        }

      case 'merge_node':
        {
          var {
            path: _path2
          } = op;

          var _node2 = Node$1.get(editor, _path2);

          var prevPath = Path.previous(_path2);
          var prev = Node$1.get(editor, prevPath);

          var _parent = Node$1.parent(editor, _path2);

          var _index = _path2[_path2.length - 1];

          if (Text.isText(_node2) && Text.isText(prev)) {
            prev.text += _node2.text;
          } else if (!Text.isText(_node2) && !Text.isText(prev)) {
            prev.children.push(..._node2.children);
          } else {
            throw new Error("Cannot apply a \"merge_node\" operation at path [".concat(_path2, "] to nodes of different interfaces: ").concat(_node2, " ").concat(prev));
          }

          _parent.children.splice(_index, 1);

          if (selection) {
            for (var [_point2, _key2] of Range.points(selection)) {
              selection[_key2] = Point.transform(_point2, op);
            }
          }

          break;
        }

      case 'move_node':
        {
          var {
            path: _path3,
            newPath
          } = op;

          if (Path.isAncestor(_path3, newPath)) {
            throw new Error("Cannot move a path [".concat(_path3, "] to new path [").concat(newPath, "] because the destination is inside itself."));
          }

          var _node3 = Node$1.get(editor, _path3);

          var _parent2 = Node$1.parent(editor, _path3);

          var _index2 = _path3[_path3.length - 1]; // This is tricky, but since the `path` and `newPath` both refer to
          // the same snapshot in time, there's a mismatch. After either
          // removing the original position, the second step's path can be out
          // of date. So instead of using the `op.newPath` directly, we
          // transform `op.path` to ascertain what the `newPath` would be after
          // the operation was applied.

          _parent2.children.splice(_index2, 1);

          var truePath = Path.transform(_path3, op);
          var newParent = Node$1.get(editor, Path.parent(truePath));
          var newIndex = truePath[truePath.length - 1];
          newParent.children.splice(newIndex, 0, _node3);

          if (selection) {
            for (var [_point3, _key3] of Range.points(selection)) {
              selection[_key3] = Point.transform(_point3, op);
            }
          }

          break;
        }

      case 'remove_node':
        {
          var {
            path: _path4
          } = op;
          var _index3 = _path4[_path4.length - 1];

          var _parent3 = Node$1.parent(editor, _path4);

          _parent3.children.splice(_index3, 1); // Transform all of the points in the value, but if the point was in the
          // node that was removed we need to update the range or remove it.


          if (selection) {
            for (var [_point4, _key4] of Range.points(selection)) {
              var result = Point.transform(_point4, op);

              if (selection != null && result != null) {
                selection[_key4] = result;
              } else {
                var _prev = void 0;

                var next = void 0;

                for (var [n, p] of Node$1.texts(editor)) {
                  if (Path.compare(p, _path4) === -1) {
                    _prev = [n, p];
                  } else {
                    next = [n, p];
                    break;
                  }
                }

                if (_prev) {
                  _point4.path = _prev[1];
                  _point4.offset = _prev[0].text.length;
                } else if (next) {
                  _point4.path = next[1];
                  _point4.offset = 0;
                } else {
                  selection = null;
                }
              }
            }
          }

          break;
        }

      case 'remove_text':
        {
          var {
            path: _path5,
            offset: _offset,
            text: _text
          } = op;
          if (_text.length === 0) break;

          var _node4 = Node$1.leaf(editor, _path5);

          var _before = _node4.text.slice(0, _offset);

          var _after = _node4.text.slice(_offset + _text.length);

          _node4.text = _before + _after;

          if (selection) {
            for (var [_point5, _key5] of Range.points(selection)) {
              selection[_key5] = Point.transform(_point5, op);
            }
          }

          break;
        }

      case 'set_node':
        {
          var {
            path: _path6,
            properties,
            newProperties
          } = op;

          if (_path6.length === 0) {
            throw new Error("Cannot set properties on the root node!");
          }

          var _node5 = Node$1.get(editor, _path6);

          for (var _key6 in newProperties) {
            if (_key6 === 'children' || _key6 === 'text') {
              throw new Error("Cannot set the \"".concat(_key6, "\" property of nodes!"));
            }

            var value = newProperties[_key6];

            if (value == null) {
              delete _node5[_key6];
            } else {
              _node5[_key6] = value;
            }
          } // properties that were previously defined, but are now missing, must be deleted


          for (var _key7 in properties) {
            if (!newProperties.hasOwnProperty(_key7)) {
              delete _node5[_key7];
            }
          }

          break;
        }

      case 'set_selection':
        {
          var {
            newProperties: _newProperties
          } = op;

          if (_newProperties == null) {
            selection = _newProperties;
          } else {
            if (selection == null) {
              if (!Range.isRange(_newProperties)) {
                throw new Error("Cannot apply an incomplete \"set_selection\" operation properties ".concat(JSON.stringify(_newProperties), " when there is no current selection."));
              }

              selection = _objectSpread$6({}, _newProperties);
            }

            for (var _key8 in _newProperties) {
              var _value = _newProperties[_key8];

              if (_value == null) {
                if (_key8 === 'anchor' || _key8 === 'focus') {
                  throw new Error("Cannot remove the \"".concat(_key8, "\" selection property"));
                }

                delete selection[_key8];
              } else {
                selection[_key8] = _value;
              }
            }
          }

          break;
        }

      case 'split_node':
        {
          var {
            path: _path7,
            position,
            properties: _properties
          } = op;

          if (_path7.length === 0) {
            throw new Error("Cannot apply a \"split_node\" operation at path [".concat(_path7, "] because the root node cannot be split."));
          }

          var _node6 = Node$1.get(editor, _path7);

          var _parent4 = Node$1.parent(editor, _path7);

          var _index4 = _path7[_path7.length - 1];
          var newNode;

          if (Text.isText(_node6)) {
            var _before2 = _node6.text.slice(0, position);

            var _after2 = _node6.text.slice(position);

            _node6.text = _before2;
            newNode = _objectSpread$6(_objectSpread$6({}, _properties), {}, {
              text: _after2
            });
          } else {
            var _before3 = _node6.children.slice(0, position);

            var _after3 = _node6.children.slice(position);

            _node6.children = _before3;
            newNode = _objectSpread$6(_objectSpread$6({}, _properties), {}, {
              children: _after3
            });
          }

          _parent4.children.splice(_index4 + 1, 0, newNode);

          if (selection) {
            for (var [_point6, _key9] of Range.points(selection)) {
              selection[_key9] = Point.transform(_point6, op);
            }
          }

          break;
        }
    }

    return selection;
  };

  var GeneralTransforms = {
    /**
     * Transform the editor by an operation.
     */
    transform(editor, op) {
      editor.children = ln$4(editor.children);
      var selection = editor.selection && ln$4(editor.selection);

      try {
        selection = applyToDraft(editor, selection, op);
      } finally {
        editor.children = dn$4(editor.children);

        if (selection) {
          editor.selection = r(selection) ? dn$4(selection) : selection;
        } else {
          editor.selection = null;
        }
      }
    }

  };

  function ownKeys$7(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

  function _objectSpread$7(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys$7(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys$7(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }
  var NodeTransforms = {
    /**
     * Insert nodes at a specific location in the Editor.
     */
    insertNodes(editor, nodes) {
      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
      Editor.withoutNormalizing(editor, () => {
        var {
          hanging = false,
          voids = false,
          mode = 'lowest'
        } = options;
        var {
          at,
          match,
          select
        } = options;

        if (Node$1.isNode(nodes)) {
          nodes = [nodes];
        }

        if (nodes.length === 0) {
          return;
        }

        var [node] = nodes; // By default, use the selection as the target location. But if there is
        // no selection, insert at the end of the document since that is such a
        // common use case when inserting from a non-selected state.

        if (!at) {
          if (editor.selection) {
            at = editor.selection;
          } else if (editor.children.length > 0) {
            at = Editor.end(editor, []);
          } else {
            at = [0];
          }

          select = true;
        }

        if (select == null) {
          select = false;
        }

        if (Range.isRange(at)) {
          if (!hanging) {
            at = Editor.unhangRange(editor, at);
          }

          if (Range.isCollapsed(at)) {
            at = at.anchor;
          } else {
            var [, end] = Range.edges(at);
            var pointRef = Editor.pointRef(editor, end);
            Transforms.delete(editor, {
              at
            });
            at = pointRef.unref();
          }
        }

        if (Point.isPoint(at)) {
          if (match == null) {
            if (Text.isText(node)) {
              match = n => Text.isText(n);
            } else if (editor.isInline(node)) {
              match = n => Text.isText(n) || Editor.isInline(editor, n);
            } else {
              match = n => Editor.isBlock(editor, n);
            }
          }

          var [entry] = Editor.nodes(editor, {
            at: at.path,
            match,
            mode,
            voids
          });

          if (entry) {
            var [, _matchPath] = entry;
            var pathRef = Editor.pathRef(editor, _matchPath);
            var isAtEnd = Editor.isEnd(editor, at, _matchPath);
            Transforms.splitNodes(editor, {
              at,
              match,
              mode,
              voids
            });
            var path = pathRef.unref();
            at = isAtEnd ? Path.next(path) : path;
          } else {
            return;
          }
        }

        var parentPath = Path.parent(at);
        var index = at[at.length - 1];

        if (!voids && Editor.void(editor, {
          at: parentPath
        })) {
          return;
        }

        for (var _node of nodes) {
          var _path = parentPath.concat(index);

          index++;
          editor.apply({
            type: 'insert_node',
            path: _path,
            node: _node
          });
        }

        if (select) {
          var point = Editor.end(editor, at);

          if (point) {
            Transforms.select(editor, point);
          }
        }
      });
    },

    /**
     * Lift nodes at a specific location upwards in the document tree, splitting
     * their parent in two if necessary.
     */
    liftNodes(editor) {
      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
      Editor.withoutNormalizing(editor, () => {
        var {
          at = editor.selection,
          mode = 'lowest',
          voids = false
        } = options;
        var {
          match
        } = options;

        if (match == null) {
          match = Path.isPath(at) ? matchPath(editor, at) : n => Editor.isBlock(editor, n);
        }

        if (!at) {
          return;
        }

        var matches = Editor.nodes(editor, {
          at,
          match,
          mode,
          voids
        });
        var pathRefs = Array.from(matches, (_ref) => {
          var [, p] = _ref;
          return Editor.pathRef(editor, p);
        });

        for (var pathRef of pathRefs) {
          var path = pathRef.unref();

          if (path.length < 2) {
            throw new Error("Cannot lift node at a path [".concat(path, "] because it has a depth of less than `2`."));
          }

          var parentNodeEntry = Editor.node(editor, Path.parent(path));
          var [parent, parentPath] = parentNodeEntry;
          var index = path[path.length - 1];
          var {
            length
          } = parent.children;

          if (length === 1) {
            var toPath = Path.next(parentPath);
            Transforms.moveNodes(editor, {
              at: path,
              to: toPath,
              voids
            });
            Transforms.removeNodes(editor, {
              at: parentPath,
              voids
            });
          } else if (index === 0) {
            Transforms.moveNodes(editor, {
              at: path,
              to: parentPath,
              voids
            });
          } else if (index === length - 1) {
            var _toPath = Path.next(parentPath);

            Transforms.moveNodes(editor, {
              at: path,
              to: _toPath,
              voids
            });
          } else {
            var splitPath = Path.next(path);

            var _toPath2 = Path.next(parentPath);

            Transforms.splitNodes(editor, {
              at: splitPath,
              voids
            });
            Transforms.moveNodes(editor, {
              at: path,
              to: _toPath2,
              voids
            });
          }
        }
      });
    },

    /**
     * Merge a node at a location with the previous node of the same depth,
     * removing any empty containing nodes after the merge if necessary.
     */
    mergeNodes(editor) {
      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
      Editor.withoutNormalizing(editor, () => {
        var {
          match,
          at = editor.selection
        } = options;
        var {
          hanging = false,
          voids = false,
          mode = 'lowest'
        } = options;

        if (!at) {
          return;
        }

        if (match == null) {
          if (Path.isPath(at)) {
            var [parent] = Editor.parent(editor, at);

            match = n => parent.children.includes(n);
          } else {
            match = n => Editor.isBlock(editor, n);
          }
        }

        if (!hanging && Range.isRange(at)) {
          at = Editor.unhangRange(editor, at);
        }

        if (Range.isRange(at)) {
          if (Range.isCollapsed(at)) {
            at = at.anchor;
          } else {
            var [, end] = Range.edges(at);
            var pointRef = Editor.pointRef(editor, end);
            Transforms.delete(editor, {
              at
            });
            at = pointRef.unref();

            if (options.at == null) {
              Transforms.select(editor, at);
            }
          }
        }

        var [current] = Editor.nodes(editor, {
          at,
          match,
          voids,
          mode
        });
        var prev = Editor.previous(editor, {
          at,
          match,
          voids,
          mode
        });

        if (!current || !prev) {
          return;
        }

        var [node, path] = current;
        var [prevNode, prevPath] = prev;

        if (path.length === 0 || prevPath.length === 0) {
          return;
        }

        var newPath = Path.next(prevPath);
        var commonPath = Path.common(path, prevPath);
        var isPreviousSibling = Path.isSibling(path, prevPath);
        var levels = Array.from(Editor.levels(editor, {
          at: path
        }), (_ref2) => {
          var [n] = _ref2;
          return n;
        }).slice(commonPath.length).slice(0, -1); // Determine if the merge will leave an ancestor of the path empty as a
        // result, in which case we'll want to remove it after merging.

        var emptyAncestor = Editor.above(editor, {
          at: path,
          mode: 'highest',
          match: n => levels.includes(n) && hasSingleChildNest(editor, n)
        });
        var emptyRef = emptyAncestor && Editor.pathRef(editor, emptyAncestor[1]);
        var properties;
        var position; // Ensure that the nodes are equivalent, and figure out what the position
        // and extra properties of the merge will be.

        if (Text.isText(node) && Text.isText(prevNode)) {
          var rest = _objectWithoutProperties(node, ["text"]);

          position = prevNode.text.length;
          properties = rest;
        } else if (Element$1.isElement(node) && Element$1.isElement(prevNode)) {
          var rest = _objectWithoutProperties(node, ["children"]);

          position = prevNode.children.length;
          properties = rest;
        } else {
          throw new Error("Cannot merge the node at path [".concat(path, "] with the previous sibling because it is not the same kind: ").concat(JSON.stringify(node), " ").concat(JSON.stringify(prevNode)));
        } // If the node isn't already the next sibling of the previous node, move
        // it so that it is before merging.


        if (!isPreviousSibling) {
          Transforms.moveNodes(editor, {
            at: path,
            to: newPath,
            voids
          });
        } // If there was going to be an empty ancestor of the node that was merged,
        // we remove it from the tree.


        if (emptyRef) {
          Transforms.removeNodes(editor, {
            at: emptyRef.current,
            voids
          });
        } // If the target node that we're merging with is empty, remove it instead
        // of merging the two. This is a common rich text editor behavior to
        // prevent losing formatting when deleting entire nodes when you have a
        // hanging selection.


        if (Element$1.isElement(prevNode) && Editor.isEmpty(editor, prevNode) || Text.isText(prevNode) && prevNode.text === '') {
          Transforms.removeNodes(editor, {
            at: prevPath,
            voids
          });
        } else {
          editor.apply({
            type: 'merge_node',
            path: newPath,
            position,
            properties
          });
        }

        if (emptyRef) {
          emptyRef.unref();
        }
      });
    },

    /**
     * Move the nodes at a location to a new location.
     */
    moveNodes(editor, options) {
      Editor.withoutNormalizing(editor, () => {
        var {
          to,
          at = editor.selection,
          mode = 'lowest',
          voids = false
        } = options;
        var {
          match
        } = options;

        if (!at) {
          return;
        }

        if (match == null) {
          match = Path.isPath(at) ? matchPath(editor, at) : n => Editor.isBlock(editor, n);
        }

        var toRef = Editor.pathRef(editor, to);
        var targets = Editor.nodes(editor, {
          at,
          match,
          mode,
          voids
        });
        var pathRefs = Array.from(targets, (_ref3) => {
          var [, p] = _ref3;
          return Editor.pathRef(editor, p);
        });

        for (var pathRef of pathRefs) {
          var path = pathRef.unref();
          var newPath = toRef.current;

          if (path.length !== 0) {
            editor.apply({
              type: 'move_node',
              path,
              newPath
            });
          }

          if (toRef.current && Path.isSibling(newPath, path) && Path.isAfter(newPath, path)) {
            // When performing a sibling move to a later index, the path at the destination is shifted
            // to before the insertion point instead of after. To ensure our group of nodes are inserted
            // in the correct order we increment toRef to account for that
            toRef.current = Path.next(toRef.current);
          }
        }

        toRef.unref();
      });
    },

    /**
     * Remove the nodes at a specific location in the document.
     */
    removeNodes(editor) {
      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
      Editor.withoutNormalizing(editor, () => {
        var {
          hanging = false,
          voids = false,
          mode = 'lowest'
        } = options;
        var {
          at = editor.selection,
          match
        } = options;

        if (!at) {
          return;
        }

        if (match == null) {
          match = Path.isPath(at) ? matchPath(editor, at) : n => Editor.isBlock(editor, n);
        }

        if (!hanging && Range.isRange(at)) {
          at = Editor.unhangRange(editor, at);
        }

        var depths = Editor.nodes(editor, {
          at,
          match,
          mode,
          voids
        });
        var pathRefs = Array.from(depths, (_ref4) => {
          var [, p] = _ref4;
          return Editor.pathRef(editor, p);
        });

        for (var pathRef of pathRefs) {
          var path = pathRef.unref();

          if (path) {
            var [node] = Editor.node(editor, path);
            editor.apply({
              type: 'remove_node',
              path,
              node
            });
          }
        }
      });
    },

    /**
     * Set new properties on the nodes at a location.
     */
    setNodes(editor, props) {
      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
      Editor.withoutNormalizing(editor, () => {
        var {
          match,
          at = editor.selection
        } = options;
        var {
          hanging = false,
          mode = 'lowest',
          split = false,
          voids = false
        } = options;

        if (!at) {
          return;
        }

        if (match == null) {
          match = Path.isPath(at) ? matchPath(editor, at) : n => Editor.isBlock(editor, n);
        }

        if (!hanging && Range.isRange(at)) {
          at = Editor.unhangRange(editor, at);
        }

        if (split && Range.isRange(at)) {
          var rangeRef = Editor.rangeRef(editor, at, {
            affinity: 'inward'
          });
          var [start, end] = Range.edges(at);
          var splitMode = mode === 'lowest' ? 'lowest' : 'highest';
          var endAtEndOfNode = Editor.isEnd(editor, end, end.path);
          Transforms.splitNodes(editor, {
            at: end,
            match,
            mode: splitMode,
            voids,
            always: !endAtEndOfNode
          });
          var startAtStartOfNode = Editor.isStart(editor, start, start.path);
          Transforms.splitNodes(editor, {
            at: start,
            match,
            mode: splitMode,
            voids,
            always: !startAtStartOfNode
          });
          at = rangeRef.unref();

          if (options.at == null) {
            Transforms.select(editor, at);
          }
        }

        for (var [node, path] of Editor.nodes(editor, {
          at,
          match,
          mode,
          voids
        })) {
          var properties = {};
          var newProperties = {}; // You can't set properties on the editor node.

          if (path.length === 0) {
            continue;
          }

          for (var k in props) {
            if (k === 'children' || k === 'text') {
              continue;
            }

            if (props[k] !== node[k]) {
              // Omit new properties from the old property list rather than set them to undefined
              if (node.hasOwnProperty(k)) properties[k] = node[k];
              newProperties[k] = props[k];
            }
          }

          if (Object.keys(newProperties).length !== 0) {
            editor.apply({
              type: 'set_node',
              path,
              properties,
              newProperties
            });
          }
        }
      });
    },

    /**
     * Split the nodes at a specific location.
     */
    splitNodes(editor) {
      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
      Editor.withoutNormalizing(editor, () => {
        var {
          mode = 'lowest',
          voids = false
        } = options;
        var {
          match,
          at = editor.selection,
          height = 0,
          always = false
        } = options;

        if (match == null) {
          match = n => Editor.isBlock(editor, n);
        }

        if (Range.isRange(at)) {
          at = deleteRange(editor, at);
        } // If the target is a path, the default height-skipping and position
        // counters need to account for us potentially splitting at a non-leaf.


        if (Path.isPath(at)) {
          var path = at;
          var point = Editor.point(editor, path);
          var [parent] = Editor.parent(editor, path);

          match = n => n === parent;

          height = point.path.length - path.length + 1;
          at = point;
          always = true;
        }

        if (!at) {
          return;
        }

        var beforeRef = Editor.pointRef(editor, at, {
          affinity: 'backward'
        });
        var [highest] = Editor.nodes(editor, {
          at,
          match,
          mode,
          voids
        });

        if (!highest) {
          return;
        }

        var voidMatch = Editor.void(editor, {
          at,
          mode: 'highest'
        });
        var nudge = 0;

        if (!voids && voidMatch) {
          var [voidNode, voidPath] = voidMatch;

          if (Element$1.isElement(voidNode) && editor.isInline(voidNode)) {
            var after = Editor.after(editor, voidPath);

            if (!after) {
              var text = {
                text: ''
              };
              var afterPath = Path.next(voidPath);
              Transforms.insertNodes(editor, text, {
                at: afterPath,
                voids
              });
              after = Editor.point(editor, afterPath);
            }

            at = after;
            always = true;
          }

          var siblingHeight = at.path.length - voidPath.length;
          height = siblingHeight + 1;
          always = true;
        }

        var afterRef = Editor.pointRef(editor, at);
        var depth = at.path.length - height;
        var [, highestPath] = highest;
        var lowestPath = at.path.slice(0, depth);
        var position = height === 0 ? at.offset : at.path[depth] + nudge;

        for (var [node, _path2] of Editor.levels(editor, {
          at: lowestPath,
          reverse: true,
          voids
        })) {
          var split = false;

          if (_path2.length < highestPath.length || _path2.length === 0 || !voids && Editor.isVoid(editor, node)) {
            break;
          }

          var _point = beforeRef.current;
          var isEnd = Editor.isEnd(editor, _point, _path2);

          if (always || !beforeRef || !Editor.isEdge(editor, _point, _path2)) {
            split = true;
            var properties = Node$1.extractProps(node);
            editor.apply({
              type: 'split_node',
              path: _path2,
              position,
              properties
            });
          }

          position = _path2[_path2.length - 1] + (split || isEnd ? 1 : 0);
        }

        if (options.at == null) {
          var _point2 = afterRef.current || Editor.end(editor, []);

          Transforms.select(editor, _point2);
        }

        beforeRef.unref();
        afterRef.unref();
      });
    },

    /**
     * Unset properties on the nodes at a location.
     */
    unsetNodes(editor, props) {
      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};

      if (!Array.isArray(props)) {
        props = [props];
      }

      var obj = {};

      for (var key of props) {
        obj[key] = null;
      }

      Transforms.setNodes(editor, obj, options);
    },

    /**
     * Unwrap the nodes at a location from a parent node, splitting the parent if
     * necessary to ensure that only the content in the range is unwrapped.
     */
    unwrapNodes(editor) {
      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
      Editor.withoutNormalizing(editor, () => {
        var {
          mode = 'lowest',
          split = false,
          voids = false
        } = options;
        var {
          at = editor.selection,
          match
        } = options;

        if (!at) {
          return;
        }

        if (match == null) {
          match = Path.isPath(at) ? matchPath(editor, at) : n => Editor.isBlock(editor, n);
        }

        if (Path.isPath(at)) {
          at = Editor.range(editor, at);
        }

        var rangeRef = Range.isRange(at) ? Editor.rangeRef(editor, at) : null;
        var matches = Editor.nodes(editor, {
          at,
          match,
          mode,
          voids
        });
        var pathRefs = Array.from(matches, (_ref5) => {
          var [, p] = _ref5;
          return Editor.pathRef(editor, p);
        });

        var _loop = function _loop(pathRef) {
          var path = pathRef.unref();
          var [node] = Editor.node(editor, path);
          var range = Editor.range(editor, path);

          if (split && rangeRef) {
            range = Range.intersection(rangeRef.current, range);
          }

          Transforms.liftNodes(editor, {
            at: range,
            match: n => Element$1.isAncestor(node) && node.children.includes(n),
            voids
          });
        };

        for (var pathRef of pathRefs) {
          _loop(pathRef);
        }

        if (rangeRef) {
          rangeRef.unref();
        }
      });
    },

    /**
     * Wrap the nodes at a location in a new container node, splitting the edges
     * of the range first to ensure that only the content in the range is wrapped.
     */
    wrapNodes(editor, element) {
      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
      Editor.withoutNormalizing(editor, () => {
        var {
          mode = 'lowest',
          split = false,
          voids = false
        } = options;
        var {
          match,
          at = editor.selection
        } = options;

        if (!at) {
          return;
        }

        if (match == null) {
          if (Path.isPath(at)) {
            match = matchPath(editor, at);
          } else if (editor.isInline(element)) {
            match = n => Editor.isInline(editor, n) || Text.isText(n);
          } else {
            match = n => Editor.isBlock(editor, n);
          }
        }

        if (split && Range.isRange(at)) {
          var [start, end] = Range.edges(at);
          var rangeRef = Editor.rangeRef(editor, at, {
            affinity: 'inward'
          });
          Transforms.splitNodes(editor, {
            at: end,
            match,
            voids
          });
          Transforms.splitNodes(editor, {
            at: start,
            match,
            voids
          });
          at = rangeRef.unref();

          if (options.at == null) {
            Transforms.select(editor, at);
          }
        }

        var roots = Array.from(Editor.nodes(editor, {
          at,
          match: editor.isInline(element) ? n => Editor.isBlock(editor, n) : n => Editor.isEditor(n),
          mode: 'lowest',
          voids
        }));

        for (var [, rootPath] of roots) {
          var a = Range.isRange(at) ? Range.intersection(at, Editor.range(editor, rootPath)) : at;

          if (!a) {
            continue;
          }

          var matches = Array.from(Editor.nodes(editor, {
            at: a,
            match,
            mode,
            voids
          }));

          if (matches.length > 0) {
            (function () {
              var [first] = matches;
              var last = matches[matches.length - 1];
              var [, firstPath] = first;
              var [, lastPath] = last;
              var commonPath = Path.equals(firstPath, lastPath) ? Path.parent(firstPath) : Path.common(firstPath, lastPath);
              var range = Editor.range(editor, firstPath, lastPath);
              var commonNodeEntry = Editor.node(editor, commonPath);
              var [commonNode] = commonNodeEntry;
              var depth = commonPath.length + 1;
              var wrapperPath = Path.next(lastPath.slice(0, depth));

              var wrapper = _objectSpread$7(_objectSpread$7({}, element), {}, {
                children: []
              });

              Transforms.insertNodes(editor, wrapper, {
                at: wrapperPath,
                voids
              });
              Transforms.moveNodes(editor, {
                at: range,
                match: n => Element$1.isAncestor(commonNode) && commonNode.children.includes(n),
                to: wrapperPath.concat(0),
                voids
              });
            })();
          }
        }
      });
    }

  };

  var hasSingleChildNest = (editor, node) => {
    if (Element$1.isElement(node)) {
      var element = node;

      if (Editor.isVoid(editor, node)) {
        return true;
      } else if (element.children.length === 1) {
        return hasSingleChildNest(editor, element.children[0]);
      } else {
        return false;
      }
    } else if (Editor.isEditor(node)) {
      return false;
    } else {
      return true;
    }
  };
  /**
   * Convert a range into a point by deleting it's content.
   */


  var deleteRange = (editor, range) => {
    if (Range.isCollapsed(range)) {
      return range.anchor;
    } else {
      var [, end] = Range.edges(range);
      var pointRef = Editor.pointRef(editor, end);
      Transforms.delete(editor, {
        at: range
      });
      return pointRef.unref();
    }
  };

  var matchPath = (editor, path) => {
    var [node] = Editor.node(editor, path);
    return n => n === node;
  };

  function ownKeys$8(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

  function _objectSpread$8(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys$8(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys$8(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }
  var SelectionTransforms = {
    /**
     * Collapse the selection.
     */
    collapse(editor) {
      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
      var {
        edge = 'anchor'
      } = options;
      var {
        selection
      } = editor;

      if (!selection) {
        return;
      } else if (edge === 'anchor') {
        Transforms.select(editor, selection.anchor);
      } else if (edge === 'focus') {
        Transforms.select(editor, selection.focus);
      } else if (edge === 'start') {
        var [start] = Range.edges(selection);
        Transforms.select(editor, start);
      } else if (edge === 'end') {
        var [, end] = Range.edges(selection);
        Transforms.select(editor, end);
      }
    },

    /**
     * Unset the selection.
     */
    deselect(editor) {
      var {
        selection
      } = editor;

      if (selection) {
        editor.apply({
          type: 'set_selection',
          properties: selection,
          newProperties: null
        });
      }
    },

    /**
     * Move the selection's point forward or backward.
     */
    move(editor) {
      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
      var {
        selection
      } = editor;
      var {
        distance = 1,
        unit = 'character',
        reverse = false
      } = options;
      var {
        edge = null
      } = options;

      if (!selection) {
        return;
      }

      if (edge === 'start') {
        edge = Range.isBackward(selection) ? 'focus' : 'anchor';
      }

      if (edge === 'end') {
        edge = Range.isBackward(selection) ? 'anchor' : 'focus';
      }

      var {
        anchor,
        focus
      } = selection;
      var opts = {
        distance,
        unit
      };
      var props = {};

      if (edge == null || edge === 'anchor') {
        var point = reverse ? Editor.before(editor, anchor, opts) : Editor.after(editor, anchor, opts);

        if (point) {
          props.anchor = point;
        }
      }

      if (edge == null || edge === 'focus') {
        var _point = reverse ? Editor.before(editor, focus, opts) : Editor.after(editor, focus, opts);

        if (_point) {
          props.focus = _point;
        }
      }

      Transforms.setSelection(editor, props);
    },

    /**
     * Set the selection to a new value.
     */
    select(editor, target) {
      var {
        selection
      } = editor;
      target = Editor.range(editor, target);

      if (selection) {
        Transforms.setSelection(editor, target);
        return;
      }

      if (!Range.isRange(target)) {
        throw new Error("When setting the selection and the current selection is `null` you must provide at least an `anchor` and `focus`, but you passed: ".concat(JSON.stringify(target)));
      }

      editor.apply({
        type: 'set_selection',
        properties: selection,
        newProperties: target
      });
    },

    /**
     * Set new properties on one of the selection's points.
     */
    setPoint(editor, props) {
      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
      var {
        selection
      } = editor;
      var {
        edge = 'both'
      } = options;

      if (!selection) {
        return;
      }

      if (edge === 'start') {
        edge = Range.isBackward(selection) ? 'focus' : 'anchor';
      }

      if (edge === 'end') {
        edge = Range.isBackward(selection) ? 'anchor' : 'focus';
      }

      var {
        anchor,
        focus
      } = selection;
      var point = edge === 'anchor' ? anchor : focus;
      Transforms.setSelection(editor, {
        [edge === 'anchor' ? 'anchor' : 'focus']: _objectSpread$8(_objectSpread$8({}, point), props)
      });
    },

    /**
     * Set new properties on the selection.
     */
    setSelection(editor, props) {
      var {
        selection
      } = editor;
      var oldProps = {};
      var newProps = {};

      if (!selection) {
        return;
      }

      for (var k in props) {
        if (k === 'anchor' && props.anchor != null && !Point.equals(props.anchor, selection.anchor) || k === 'focus' && props.focus != null && !Point.equals(props.focus, selection.focus) || k !== 'anchor' && k !== 'focus' && props[k] !== selection[k]) {
          oldProps[k] = selection[k];
          newProps[k] = props[k];
        }
      }

      if (Object.keys(oldProps).length > 0) {
        editor.apply({
          type: 'set_selection',
          properties: oldProps,
          newProperties: newProps
        });
      }
    }

  };

  var TextTransforms = {
    /**
     * Delete content in the editor.
     */
    delete(editor) {
      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
      Editor.withoutNormalizing(editor, () => {
        var {
          reverse = false,
          unit = 'character',
          distance = 1,
          voids = false
        } = options;
        var {
          at = editor.selection,
          hanging = false
        } = options;

        if (!at) {
          return;
        }

        if (Range.isRange(at) && Range.isCollapsed(at)) {
          at = at.anchor;
        }

        if (Point.isPoint(at)) {
          var furthestVoid = Editor.void(editor, {
            at,
            mode: 'highest'
          });

          if (!voids && furthestVoid) {
            var [, voidPath] = furthestVoid;
            at = voidPath;
          } else {
            var opts = {
              unit,
              distance
            };
            var target = reverse ? Editor.before(editor, at, opts) || Editor.start(editor, []) : Editor.after(editor, at, opts) || Editor.end(editor, []);
            at = {
              anchor: at,
              focus: target
            };
            hanging = true;
          }
        }

        if (Path.isPath(at)) {
          Transforms.removeNodes(editor, {
            at,
            voids
          });
          return;
        }

        if (Range.isCollapsed(at)) {
          return;
        }

        if (!hanging) {
          var [, _end] = Range.edges(at);
          var endOfDoc = Editor.end(editor, []);

          if (!Point.equals(_end, endOfDoc)) {
            at = Editor.unhangRange(editor, at, {
              voids
            });
          }
        }

        var [start, end] = Range.edges(at);
        var startBlock = Editor.above(editor, {
          match: n => Editor.isBlock(editor, n),
          at: start,
          voids
        });
        var endBlock = Editor.above(editor, {
          match: n => Editor.isBlock(editor, n),
          at: end,
          voids
        });
        var isAcrossBlocks = startBlock && endBlock && !Path.equals(startBlock[1], endBlock[1]);
        var isSingleText = Path.equals(start.path, end.path);
        var startVoid = voids ? null : Editor.void(editor, {
          at: start,
          mode: 'highest'
        });
        var endVoid = voids ? null : Editor.void(editor, {
          at: end,
          mode: 'highest'
        }); // If the start or end points are inside an inline void, nudge them out.

        if (startVoid) {
          var before = Editor.before(editor, start);

          if (before && startBlock && Path.isAncestor(startBlock[1], before.path)) {
            start = before;
          }
        }

        if (endVoid) {
          var after = Editor.after(editor, end);

          if (after && endBlock && Path.isAncestor(endBlock[1], after.path)) {
            end = after;
          }
        } // Get the highest nodes that are completely inside the range, as well as
        // the start and end nodes.


        var matches = [];
        var lastPath;

        for (var entry of Editor.nodes(editor, {
          at,
          voids
        })) {
          var [node, path] = entry;

          if (lastPath && Path.compare(path, lastPath) === 0) {
            continue;
          }

          if (!voids && Editor.isVoid(editor, node) || !Path.isCommon(path, start.path) && !Path.isCommon(path, end.path)) {
            matches.push(entry);
            lastPath = path;
          }
        }

        var pathRefs = Array.from(matches, (_ref) => {
          var [, p] = _ref;
          return Editor.pathRef(editor, p);
        });
        var startRef = Editor.pointRef(editor, start);
        var endRef = Editor.pointRef(editor, end);

        if (!isSingleText && !startVoid) {
          var _point = startRef.current;
          var [_node] = Editor.leaf(editor, _point);
          var {
            path: _path
          } = _point;
          var {
            offset
          } = start;

          var text = _node.text.slice(offset);

          if (text.length > 0) editor.apply({
            type: 'remove_text',
            path: _path,
            offset,
            text
          });
        }

        for (var pathRef of pathRefs) {
          var _path2 = pathRef.unref();

          Transforms.removeNodes(editor, {
            at: _path2,
            voids
          });
        }

        if (!endVoid) {
          var _point2 = endRef.current;
          var [_node2] = Editor.leaf(editor, _point2);
          var {
            path: _path3
          } = _point2;

          var _offset = isSingleText ? start.offset : 0;

          var _text = _node2.text.slice(_offset, end.offset);

          if (_text.length > 0) editor.apply({
            type: 'remove_text',
            path: _path3,
            offset: _offset,
            text: _text
          });
        }

        if (!isSingleText && isAcrossBlocks && endRef.current && startRef.current) {
          Transforms.mergeNodes(editor, {
            at: endRef.current,
            hanging: true,
            voids
          });
        }

        var point = reverse ? startRef.unref() || endRef.unref() : endRef.unref() || startRef.unref();

        if (options.at == null && point) {
          Transforms.select(editor, point);
        }
      });
    },

    /**
     * Insert a fragment at a specific location in the editor.
     */
    insertFragment(editor, fragment) {
      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
      Editor.withoutNormalizing(editor, () => {
        var {
          hanging = false,
          voids = false
        } = options;
        var {
          at = editor.selection
        } = options;

        if (!fragment.length) {
          return;
        }

        if (!at) {
          return;
        } else if (Range.isRange(at)) {
          if (!hanging) {
            at = Editor.unhangRange(editor, at);
          }

          if (Range.isCollapsed(at)) {
            at = at.anchor;
          } else {
            var [, end] = Range.edges(at);

            if (!voids && Editor.void(editor, {
              at: end
            })) {
              return;
            }

            var pointRef = Editor.pointRef(editor, end);
            Transforms.delete(editor, {
              at
            });
            at = pointRef.unref();
          }
        } else if (Path.isPath(at)) {
          at = Editor.start(editor, at);
        }

        if (!voids && Editor.void(editor, {
          at
        })) {
          return;
        } // If the insert point is at the edge of an inline node, move it outside
        // instead since it will need to be split otherwise.


        var inlineElementMatch = Editor.above(editor, {
          at,
          match: n => Editor.isInline(editor, n),
          mode: 'highest',
          voids
        });

        if (inlineElementMatch) {
          var [, _inlinePath] = inlineElementMatch;

          if (Editor.isEnd(editor, at, _inlinePath)) {
            var after = Editor.after(editor, _inlinePath);
            at = after;
          } else if (Editor.isStart(editor, at, _inlinePath)) {
            var before = Editor.before(editor, _inlinePath);
            at = before;
          }
        }

        var blockMatch = Editor.above(editor, {
          match: n => Editor.isBlock(editor, n),
          at,
          voids
        });
        var [, blockPath] = blockMatch;
        var isBlockStart = Editor.isStart(editor, at, blockPath);
        var isBlockEnd = Editor.isEnd(editor, at, blockPath);
        var mergeStart = !isBlockStart || isBlockStart && isBlockEnd;
        var mergeEnd = !isBlockEnd;
        var [, firstPath] = Node$1.first({
          children: fragment
        }, []);
        var [, lastPath] = Node$1.last({
          children: fragment
        }, []);
        var matches = [];

        var matcher = (_ref2) => {
          var [n, p] = _ref2;

          if (mergeStart && Path.isAncestor(p, firstPath) && Element$1.isElement(n) && !editor.isVoid(n) && !editor.isInline(n)) {
            return false;
          }

          if (mergeEnd && Path.isAncestor(p, lastPath) && Element$1.isElement(n) && !editor.isVoid(n) && !editor.isInline(n)) {
            return false;
          }

          return true;
        };

        for (var entry of Node$1.nodes({
          children: fragment
        }, {
          pass: matcher
        })) {
          if (entry[1].length > 0 && matcher(entry)) {
            matches.push(entry);
          }
        }

        var starts = [];
        var middles = [];
        var ends = [];
        var starting = true;
        var hasBlocks = false;

        for (var [node] of matches) {
          if (Element$1.isElement(node) && !editor.isInline(node)) {
            starting = false;
            hasBlocks = true;
            middles.push(node);
          } else if (starting) {
            starts.push(node);
          } else {
            ends.push(node);
          }
        }

        var [inlineMatch] = Editor.nodes(editor, {
          at,
          match: n => Text.isText(n) || Editor.isInline(editor, n),
          mode: 'highest',
          voids
        });
        var [, inlinePath] = inlineMatch;
        var isInlineStart = Editor.isStart(editor, at, inlinePath);
        var isInlineEnd = Editor.isEnd(editor, at, inlinePath);
        var middleRef = Editor.pathRef(editor, isBlockEnd ? Path.next(blockPath) : blockPath);
        var endRef = Editor.pathRef(editor, isInlineEnd ? Path.next(inlinePath) : inlinePath);
        Transforms.splitNodes(editor, {
          at,
          match: n => hasBlocks ? Editor.isBlock(editor, n) : Text.isText(n) || Editor.isInline(editor, n),
          mode: hasBlocks ? 'lowest' : 'highest',
          voids
        });
        var startRef = Editor.pathRef(editor, !isInlineStart || isInlineStart && isInlineEnd ? Path.next(inlinePath) : inlinePath);
        Transforms.insertNodes(editor, starts, {
          at: startRef.current,
          match: n => Text.isText(n) || Editor.isInline(editor, n),
          mode: 'highest',
          voids
        });
        Transforms.insertNodes(editor, middles, {
          at: middleRef.current,
          match: n => Editor.isBlock(editor, n),
          mode: 'lowest',
          voids
        });
        Transforms.insertNodes(editor, ends, {
          at: endRef.current,
          match: n => Text.isText(n) || Editor.isInline(editor, n),
          mode: 'highest',
          voids
        });

        if (!options.at) {
          var path;

          if (ends.length > 0) {
            path = Path.previous(endRef.current);
          } else if (middles.length > 0) {
            path = Path.previous(middleRef.current);
          } else {
            path = Path.previous(startRef.current);
          }

          var _end2 = Editor.end(editor, path);

          Transforms.select(editor, _end2);
        }

        startRef.unref();
        middleRef.unref();
        endRef.unref();
      });
    },

    /**
     * Insert a string of text in the Editor.
     */
    insertText(editor, text) {
      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
      Editor.withoutNormalizing(editor, () => {
        var {
          voids = false
        } = options;
        var {
          at = editor.selection
        } = options;

        if (!at) {
          return;
        }

        if (Path.isPath(at)) {
          at = Editor.range(editor, at);
        }

        if (Range.isRange(at)) {
          if (Range.isCollapsed(at)) {
            at = at.anchor;
          } else {
            var end = Range.end(at);

            if (!voids && Editor.void(editor, {
              at: end
            })) {
              return;
            }

            var pointRef = Editor.pointRef(editor, end);
            Transforms.delete(editor, {
              at,
              voids
            });
            at = pointRef.unref();
            Transforms.setSelection(editor, {
              anchor: at,
              focus: at
            });
          }
        }

        if (!voids && Editor.void(editor, {
          at
        })) {
          return;
        }

        var {
          path,
          offset
        } = at;
        if (text.length > 0) editor.apply({
          type: 'insert_text',
          path,
          offset,
          text
        });
      });
    }

  };

  function ownKeys$9(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

  function _objectSpread$9(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys$9(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys$9(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }
  var Transforms = _objectSpread$9(_objectSpread$9(_objectSpread$9(_objectSpread$9({}, GeneralTransforms), NodeTransforms), SelectionTransforms), TextTransforms);

  /**
   * Lodash (Custom Build) <https://lodash.com/>
   * Build: `lodash modularize exports="npm" -o ./`
   * Copyright JS Foundation and other contributors <https://js.foundation/>
   * Released under MIT license <https://lodash.com/license>
   * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
   * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
   */

  var lodash_isequal = createCommonjsModule(function (module, exports) {
  /** Used as the size to enable large array optimizations. */
  var LARGE_ARRAY_SIZE = 200;

  /** Used to stand-in for `undefined` hash values. */
  var HASH_UNDEFINED = '__lodash_hash_undefined__';

  /** Used to compose bitmasks for value comparisons. */
  var COMPARE_PARTIAL_FLAG = 1,
      COMPARE_UNORDERED_FLAG = 2;

  /** Used as references for various `Number` constants. */
  var MAX_SAFE_INTEGER = 9007199254740991;

  /** `Object#toString` result references. */
  var argsTag = '[object Arguments]',
      arrayTag = '[object Array]',
      asyncTag = '[object AsyncFunction]',
      boolTag = '[object Boolean]',
      dateTag = '[object Date]',
      errorTag = '[object Error]',
      funcTag = '[object Function]',
      genTag = '[object GeneratorFunction]',
      mapTag = '[object Map]',
      numberTag = '[object Number]',
      nullTag = '[object Null]',
      objectTag = '[object Object]',
      promiseTag = '[object Promise]',
      proxyTag = '[object Proxy]',
      regexpTag = '[object RegExp]',
      setTag = '[object Set]',
      stringTag = '[object String]',
      symbolTag = '[object Symbol]',
      undefinedTag = '[object Undefined]',
      weakMapTag = '[object WeakMap]';

  var arrayBufferTag = '[object ArrayBuffer]',
      dataViewTag = '[object DataView]',
      float32Tag = '[object Float32Array]',
      float64Tag = '[object Float64Array]',
      int8Tag = '[object Int8Array]',
      int16Tag = '[object Int16Array]',
      int32Tag = '[object Int32Array]',
      uint8Tag = '[object Uint8Array]',
      uint8ClampedTag = '[object Uint8ClampedArray]',
      uint16Tag = '[object Uint16Array]',
      uint32Tag = '[object Uint32Array]';

  /**
   * Used to match `RegExp`
   * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).
   */
  var reRegExpChar = /[\\^$.*+?()[\]{}|]/g;

  /** Used to detect host constructors (Safari). */
  var reIsHostCtor = /^\[object .+?Constructor\]$/;

  /** Used to detect unsigned integer values. */
  var reIsUint = /^(?:0|[1-9]\d*)$/;

  /** Used to identify `toStringTag` values of typed arrays. */
  var typedArrayTags = {};
  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =
  typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =
  typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =
  typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =
  typedArrayTags[uint32Tag] = true;
  typedArrayTags[argsTag] = typedArrayTags[arrayTag] =
  typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =
  typedArrayTags[dataViewTag] = typedArrayTags[dateTag] =
  typedArrayTags[errorTag] = typedArrayTags[funcTag] =
  typedArrayTags[mapTag] = typedArrayTags[numberTag] =
  typedArrayTags[objectTag] = typedArrayTags[regexpTag] =
  typedArrayTags[setTag] = typedArrayTags[stringTag] =
  typedArrayTags[weakMapTag] = false;

  /** Detect free variable `global` from Node.js. */
  var freeGlobal = typeof commonjsGlobal == 'object' && commonjsGlobal && commonjsGlobal.Object === Object && commonjsGlobal;

  /** Detect free variable `self`. */
  var freeSelf = typeof self == 'object' && self && self.Object === Object && self;

  /** Used as a reference to the global object. */
  var root = freeGlobal || freeSelf || Function('return this')();

  /** Detect free variable `exports`. */
  var freeExports = exports && !exports.nodeType && exports;

  /** Detect free variable `module`. */
  var freeModule = freeExports && 'object' == 'object' && module && !module.nodeType && module;

  /** Detect the popular CommonJS extension `module.exports`. */
  var moduleExports = freeModule && freeModule.exports === freeExports;

  /** Detect free variable `process` from Node.js. */
  var freeProcess = moduleExports && freeGlobal.process;

  /** Used to access faster Node.js helpers. */
  var nodeUtil = (function() {
    try {
      return freeProcess && freeProcess.binding && freeProcess.binding('util');
    } catch (e) {}
  }());

  /* Node.js helper references. */
  var nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;

  /**
   * A specialized version of `_.filter` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} predicate The function invoked per iteration.
   * @returns {Array} Returns the new filtered array.
   */
  function arrayFilter(array, predicate) {
    var index = -1,
        length = array == null ? 0 : array.length,
        resIndex = 0,
        result = [];

    while (++index < length) {
      var value = array[index];
      if (predicate(value, index, array)) {
        result[resIndex++] = value;
      }
    }
    return result;
  }

  /**
   * Appends the elements of `values` to `array`.
   *
   * @private
   * @param {Array} array The array to modify.
   * @param {Array} values The values to append.
   * @returns {Array} Returns `array`.
   */
  function arrayPush(array, values) {
    var index = -1,
        length = values.length,
        offset = array.length;

    while (++index < length) {
      array[offset + index] = values[index];
    }
    return array;
  }

  /**
   * A specialized version of `_.some` for arrays without support for iteratee
   * shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} predicate The function invoked per iteration.
   * @returns {boolean} Returns `true` if any element passes the predicate check,
   *  else `false`.
   */
  function arraySome(array, predicate) {
    var index = -1,
        length = array == null ? 0 : array.length;

    while (++index < length) {
      if (predicate(array[index], index, array)) {
        return true;
      }
    }
    return false;
  }

  /**
   * The base implementation of `_.times` without support for iteratee shorthands
   * or max array length checks.
   *
   * @private
   * @param {number} n The number of times to invoke `iteratee`.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {Array} Returns the array of results.
   */
  function baseTimes(n, iteratee) {
    var index = -1,
        result = Array(n);

    while (++index < n) {
      result[index] = iteratee(index);
    }
    return result;
  }

  /**
   * The base implementation of `_.unary` without support for storing metadata.
   *
   * @private
   * @param {Function} func The function to cap arguments for.
   * @returns {Function} Returns the new capped function.
   */
  function baseUnary(func) {
    return function(value) {
      return func(value);
    };
  }

  /**
   * Checks if a `cache` value for `key` exists.
   *
   * @private
   * @param {Object} cache The cache to query.
   * @param {string} key The key of the entry to check.
   * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
   */
  function cacheHas(cache, key) {
    return cache.has(key);
  }

  /**
   * Gets the value at `key` of `object`.
   *
   * @private
   * @param {Object} [object] The object to query.
   * @param {string} key The key of the property to get.
   * @returns {*} Returns the property value.
   */
  function getValue(object, key) {
    return object == null ? undefined : object[key];
  }

  /**
   * Converts `map` to its key-value pairs.
   *
   * @private
   * @param {Object} map The map to convert.
   * @returns {Array} Returns the key-value pairs.
   */
  function mapToArray(map) {
    var index = -1,
        result = Array(map.size);

    map.forEach(function(value, key) {
      result[++index] = [key, value];
    });
    return result;
  }

  /**
   * Creates a unary function that invokes `func` with its argument transformed.
   *
   * @private
   * @param {Function} func The function to wrap.
   * @param {Function} transform The argument transform.
   * @returns {Function} Returns the new function.
   */
  function overArg(func, transform) {
    return function(arg) {
      return func(transform(arg));
    };
  }

  /**
   * Converts `set` to an array of its values.
   *
   * @private
   * @param {Object} set The set to convert.
   * @returns {Array} Returns the values.
   */
  function setToArray(set) {
    var index = -1,
        result = Array(set.size);

    set.forEach(function(value) {
      result[++index] = value;
    });
    return result;
  }

  /** Used for built-in method references. */
  var arrayProto = Array.prototype,
      funcProto = Function.prototype,
      objectProto = Object.prototype;

  /** Used to detect overreaching core-js shims. */
  var coreJsData = root['__core-js_shared__'];

  /** Used to resolve the decompiled source of functions. */
  var funcToString = funcProto.toString;

  /** Used to check objects for own properties. */
  var hasOwnProperty = objectProto.hasOwnProperty;

  /** Used to detect methods masquerading as native. */
  var maskSrcKey = (function() {
    var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');
    return uid ? ('Symbol(src)_1.' + uid) : '';
  }());

  /**
   * Used to resolve the
   * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
   * of values.
   */
  var nativeObjectToString = objectProto.toString;

  /** Used to detect if a method is native. */
  var reIsNative = RegExp('^' +
    funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\$&')
    .replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$'
  );

  /** Built-in value references. */
  var Buffer = moduleExports ? root.Buffer : undefined,
      Symbol = root.Symbol,
      Uint8Array = root.Uint8Array,
      propertyIsEnumerable = objectProto.propertyIsEnumerable,
      splice = arrayProto.splice,
      symToStringTag = Symbol ? Symbol.toStringTag : undefined;

  /* Built-in method references for those with the same name as other `lodash` methods. */
  var nativeGetSymbols = Object.getOwnPropertySymbols,
      nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,
      nativeKeys = overArg(Object.keys, Object);

  /* Built-in method references that are verified to be native. */
  var DataView = getNative(root, 'DataView'),
      Map = getNative(root, 'Map'),
      Promise = getNative(root, 'Promise'),
      Set = getNative(root, 'Set'),
      WeakMap = getNative(root, 'WeakMap'),
      nativeCreate = getNative(Object, 'create');

  /** Used to detect maps, sets, and weakmaps. */
  var dataViewCtorString = toSource(DataView),
      mapCtorString = toSource(Map),
      promiseCtorString = toSource(Promise),
      setCtorString = toSource(Set),
      weakMapCtorString = toSource(WeakMap);

  /** Used to convert symbols to primitives and strings. */
  var symbolProto = Symbol ? Symbol.prototype : undefined,
      symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;

  /**
   * Creates a hash object.
   *
   * @private
   * @constructor
   * @param {Array} [entries] The key-value pairs to cache.
   */
  function Hash(entries) {
    var index = -1,
        length = entries == null ? 0 : entries.length;

    this.clear();
    while (++index < length) {
      var entry = entries[index];
      this.set(entry[0], entry[1]);
    }
  }

  /**
   * Removes all key-value entries from the hash.
   *
   * @private
   * @name clear
   * @memberOf Hash
   */
  function hashClear() {
    this.__data__ = nativeCreate ? nativeCreate(null) : {};
    this.size = 0;
  }

  /**
   * Removes `key` and its value from the hash.
   *
   * @private
   * @name delete
   * @memberOf Hash
   * @param {Object} hash The hash to modify.
   * @param {string} key The key of the value to remove.
   * @returns {boolean} Returns `true` if the entry was removed, else `false`.
   */
  function hashDelete(key) {
    var result = this.has(key) && delete this.__data__[key];
    this.size -= result ? 1 : 0;
    return result;
  }

  /**
   * Gets the hash value for `key`.
   *
   * @private
   * @name get
   * @memberOf Hash
   * @param {string} key The key of the value to get.
   * @returns {*} Returns the entry value.
   */
  function hashGet(key) {
    var data = this.__data__;
    if (nativeCreate) {
      var result = data[key];
      return result === HASH_UNDEFINED ? undefined : result;
    }
    return hasOwnProperty.call(data, key) ? data[key] : undefined;
  }

  /**
   * Checks if a hash value for `key` exists.
   *
   * @private
   * @name has
   * @memberOf Hash
   * @param {string} key The key of the entry to check.
   * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
   */
  function hashHas(key) {
    var data = this.__data__;
    return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);
  }

  /**
   * Sets the hash `key` to `value`.
   *
   * @private
   * @name set
   * @memberOf Hash
   * @param {string} key The key of the value to set.
   * @param {*} value The value to set.
   * @returns {Object} Returns the hash instance.
   */
  function hashSet(key, value) {
    var data = this.__data__;
    this.size += this.has(key) ? 0 : 1;
    data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;
    return this;
  }

  // Add methods to `Hash`.
  Hash.prototype.clear = hashClear;
  Hash.prototype['delete'] = hashDelete;
  Hash.prototype.get = hashGet;
  Hash.prototype.has = hashHas;
  Hash.prototype.set = hashSet;

  /**
   * Creates an list cache object.
   *
   * @private
   * @constructor
   * @param {Array} [entries] The key-value pairs to cache.
   */
  function ListCache(entries) {
    var index = -1,
        length = entries == null ? 0 : entries.length;

    this.clear();
    while (++index < length) {
      var entry = entries[index];
      this.set(entry[0], entry[1]);
    }
  }

  /**
   * Removes all key-value entries from the list cache.
   *
   * @private
   * @name clear
   * @memberOf ListCache
   */
  function listCacheClear() {
    this.__data__ = [];
    this.size = 0;
  }

  /**
   * Removes `key` and its value from the list cache.
   *
   * @private
   * @name delete
   * @memberOf ListCache
   * @param {string} key The key of the value to remove.
   * @returns {boolean} Returns `true` if the entry was removed, else `false`.
   */
  function listCacheDelete(key) {
    var data = this.__data__,
        index = assocIndexOf(data, key);

    if (index < 0) {
      return false;
    }
    var lastIndex = data.length - 1;
    if (index == lastIndex) {
      data.pop();
    } else {
      splice.call(data, index, 1);
    }
    --this.size;
    return true;
  }

  /**
   * Gets the list cache value for `key`.
   *
   * @private
   * @name get
   * @memberOf ListCache
   * @param {string} key The key of the value to get.
   * @returns {*} Returns the entry value.
   */
  function listCacheGet(key) {
    var data = this.__data__,
        index = assocIndexOf(data, key);

    return index < 0 ? undefined : data[index][1];
  }

  /**
   * Checks if a list cache value for `key` exists.
   *
   * @private
   * @name has
   * @memberOf ListCache
   * @param {string} key The key of the entry to check.
   * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
   */
  function listCacheHas(key) {
    return assocIndexOf(this.__data__, key) > -1;
  }

  /**
   * Sets the list cache `key` to `value`.
   *
   * @private
   * @name set
   * @memberOf ListCache
   * @param {string} key The key of the value to set.
   * @param {*} value The value to set.
   * @returns {Object} Returns the list cache instance.
   */
  function listCacheSet(key, value) {
    var data = this.__data__,
        index = assocIndexOf(data, key);

    if (index < 0) {
      ++this.size;
      data.push([key, value]);
    } else {
      data[index][1] = value;
    }
    return this;
  }

  // Add methods to `ListCache`.
  ListCache.prototype.clear = listCacheClear;
  ListCache.prototype['delete'] = listCacheDelete;
  ListCache.prototype.get = listCacheGet;
  ListCache.prototype.has = listCacheHas;
  ListCache.prototype.set = listCacheSet;

  /**
   * Creates a map cache object to store key-value pairs.
   *
   * @private
   * @constructor
   * @param {Array} [entries] The key-value pairs to cache.
   */
  function MapCache(entries) {
    var index = -1,
        length = entries == null ? 0 : entries.length;

    this.clear();
    while (++index < length) {
      var entry = entries[index];
      this.set(entry[0], entry[1]);
    }
  }

  /**
   * Removes all key-value entries from the map.
   *
   * @private
   * @name clear
   * @memberOf MapCache
   */
  function mapCacheClear() {
    this.size = 0;
    this.__data__ = {
      'hash': new Hash,
      'map': new (Map || ListCache),
      'string': new Hash
    };
  }

  /**
   * Removes `key` and its value from the map.
   *
   * @private
   * @name delete
   * @memberOf MapCache
   * @param {string} key The key of the value to remove.
   * @returns {boolean} Returns `true` if the entry was removed, else `false`.
   */
  function mapCacheDelete(key) {
    var result = getMapData(this, key)['delete'](key);
    this.size -= result ? 1 : 0;
    return result;
  }

  /**
   * Gets the map value for `key`.
   *
   * @private
   * @name get
   * @memberOf MapCache
   * @param {string} key The key of the value to get.
   * @returns {*} Returns the entry value.
   */
  function mapCacheGet(key) {
    return getMapData(this, key).get(key);
  }

  /**
   * Checks if a map value for `key` exists.
   *
   * @private
   * @name has
   * @memberOf MapCache
   * @param {string} key The key of the entry to check.
   * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
   */
  function mapCacheHas(key) {
    return getMapData(this, key).has(key);
  }

  /**
   * Sets the map `key` to `value`.
   *
   * @private
   * @name set
   * @memberOf MapCache
   * @param {string} key The key of the value to set.
   * @param {*} value The value to set.
   * @returns {Object} Returns the map cache instance.
   */
  function mapCacheSet(key, value) {
    var data = getMapData(this, key),
        size = data.size;

    data.set(key, value);
    this.size += data.size == size ? 0 : 1;
    return this;
  }

  // Add methods to `MapCache`.
  MapCache.prototype.clear = mapCacheClear;
  MapCache.prototype['delete'] = mapCacheDelete;
  MapCache.prototype.get = mapCacheGet;
  MapCache.prototype.has = mapCacheHas;
  MapCache.prototype.set = mapCacheSet;

  /**
   *
   * Creates an array cache object to store unique values.
   *
   * @private
   * @constructor
   * @param {Array} [values] The values to cache.
   */
  function SetCache(values) {
    var index = -1,
        length = values == null ? 0 : values.length;

    this.__data__ = new MapCache;
    while (++index < length) {
      this.add(values[index]);
    }
  }

  /**
   * Adds `value` to the array cache.
   *
   * @private
   * @name add
   * @memberOf SetCache
   * @alias push
   * @param {*} value The value to cache.
   * @returns {Object} Returns the cache instance.
   */
  function setCacheAdd(value) {
    this.__data__.set(value, HASH_UNDEFINED);
    return this;
  }

  /**
   * Checks if `value` is in the array cache.
   *
   * @private
   * @name has
   * @memberOf SetCache
   * @param {*} value The value to search for.
   * @returns {number} Returns `true` if `value` is found, else `false`.
   */
  function setCacheHas(value) {
    return this.__data__.has(value);
  }

  // Add methods to `SetCache`.
  SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;
  SetCache.prototype.has = setCacheHas;

  /**
   * Creates a stack cache object to store key-value pairs.
   *
   * @private
   * @constructor
   * @param {Array} [entries] The key-value pairs to cache.
   */
  function Stack(entries) {
    var data = this.__data__ = new ListCache(entries);
    this.size = data.size;
  }

  /**
   * Removes all key-value entries from the stack.
   *
   * @private
   * @name clear
   * @memberOf Stack
   */
  function stackClear() {
    this.__data__ = new ListCache;
    this.size = 0;
  }

  /**
   * Removes `key` and its value from the stack.
   *
   * @private
   * @name delete
   * @memberOf Stack
   * @param {string} key The key of the value to remove.
   * @returns {boolean} Returns `true` if the entry was removed, else `false`.
   */
  function stackDelete(key) {
    var data = this.__data__,
        result = data['delete'](key);

    this.size = data.size;
    return result;
  }

  /**
   * Gets the stack value for `key`.
   *
   * @private
   * @name get
   * @memberOf Stack
   * @param {string} key The key of the value to get.
   * @returns {*} Returns the entry value.
   */
  function stackGet(key) {
    return this.__data__.get(key);
  }

  /**
   * Checks if a stack value for `key` exists.
   *
   * @private
   * @name has
   * @memberOf Stack
   * @param {string} key The key of the entry to check.
   * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
   */
  function stackHas(key) {
    return this.__data__.has(key);
  }

  /**
   * Sets the stack `key` to `value`.
   *
   * @private
   * @name set
   * @memberOf Stack
   * @param {string} key The key of the value to set.
   * @param {*} value The value to set.
   * @returns {Object} Returns the stack cache instance.
   */
  function stackSet(key, value) {
    var data = this.__data__;
    if (data instanceof ListCache) {
      var pairs = data.__data__;
      if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {
        pairs.push([key, value]);
        this.size = ++data.size;
        return this;
      }
      data = this.__data__ = new MapCache(pairs);
    }
    data.set(key, value);
    this.size = data.size;
    return this;
  }

  // Add methods to `Stack`.
  Stack.prototype.clear = stackClear;
  Stack.prototype['delete'] = stackDelete;
  Stack.prototype.get = stackGet;
  Stack.prototype.has = stackHas;
  Stack.prototype.set = stackSet;

  /**
   * Creates an array of the enumerable property names of the array-like `value`.
   *
   * @private
   * @param {*} value The value to query.
   * @param {boolean} inherited Specify returning inherited property names.
   * @returns {Array} Returns the array of property names.
   */
  function arrayLikeKeys(value, inherited) {
    var isArr = isArray(value),
        isArg = !isArr && isArguments(value),
        isBuff = !isArr && !isArg && isBuffer(value),
        isType = !isArr && !isArg && !isBuff && isTypedArray(value),
        skipIndexes = isArr || isArg || isBuff || isType,
        result = skipIndexes ? baseTimes(value.length, String) : [],
        length = result.length;

    for (var key in value) {
      if ((inherited || hasOwnProperty.call(value, key)) &&
          !(skipIndexes && (
             // Safari 9 has enumerable `arguments.length` in strict mode.
             key == 'length' ||
             // Node.js 0.10 has enumerable non-index properties on buffers.
             (isBuff && (key == 'offset' || key == 'parent')) ||
             // PhantomJS 2 has enumerable non-index properties on typed arrays.
             (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||
             // Skip index properties.
             isIndex(key, length)
          ))) {
        result.push(key);
      }
    }
    return result;
  }

  /**
   * Gets the index at which the `key` is found in `array` of key-value pairs.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {*} key The key to search for.
   * @returns {number} Returns the index of the matched value, else `-1`.
   */
  function assocIndexOf(array, key) {
    var length = array.length;
    while (length--) {
      if (eq(array[length][0], key)) {
        return length;
      }
    }
    return -1;
  }

  /**
   * The base implementation of `getAllKeys` and `getAllKeysIn` which uses
   * `keysFunc` and `symbolsFunc` to get the enumerable property names and
   * symbols of `object`.
   *
   * @private
   * @param {Object} object The object to query.
   * @param {Function} keysFunc The function to get the keys of `object`.
   * @param {Function} symbolsFunc The function to get the symbols of `object`.
   * @returns {Array} Returns the array of property names and symbols.
   */
  function baseGetAllKeys(object, keysFunc, symbolsFunc) {
    var result = keysFunc(object);
    return isArray(object) ? result : arrayPush(result, symbolsFunc(object));
  }

  /**
   * The base implementation of `getTag` without fallbacks for buggy environments.
   *
   * @private
   * @param {*} value The value to query.
   * @returns {string} Returns the `toStringTag`.
   */
  function baseGetTag(value) {
    if (value == null) {
      return value === undefined ? undefinedTag : nullTag;
    }
    return (symToStringTag && symToStringTag in Object(value))
      ? getRawTag(value)
      : objectToString(value);
  }

  /**
   * The base implementation of `_.isArguments`.
   *
   * @private
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is an `arguments` object,
   */
  function baseIsArguments(value) {
    return isObjectLike(value) && baseGetTag(value) == argsTag;
  }

  /**
   * The base implementation of `_.isEqual` which supports partial comparisons
   * and tracks traversed objects.
   *
   * @private
   * @param {*} value The value to compare.
   * @param {*} other The other value to compare.
   * @param {boolean} bitmask The bitmask flags.
   *  1 - Unordered comparison
   *  2 - Partial comparison
   * @param {Function} [customizer] The function to customize comparisons.
   * @param {Object} [stack] Tracks traversed `value` and `other` objects.
   * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
   */
  function baseIsEqual(value, other, bitmask, customizer, stack) {
    if (value === other) {
      return true;
    }
    if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {
      return value !== value && other !== other;
    }
    return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);
  }

  /**
   * A specialized version of `baseIsEqual` for arrays and objects which performs
   * deep comparisons and tracks traversed objects enabling objects with circular
   * references to be compared.
   *
   * @private
   * @param {Object} object The object to compare.
   * @param {Object} other The other object to compare.
   * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
   * @param {Function} customizer The function to customize comparisons.
   * @param {Function} equalFunc The function to determine equivalents of values.
   * @param {Object} [stack] Tracks traversed `object` and `other` objects.
   * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
   */
  function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {
    var objIsArr = isArray(object),
        othIsArr = isArray(other),
        objTag = objIsArr ? arrayTag : getTag(object),
        othTag = othIsArr ? arrayTag : getTag(other);

    objTag = objTag == argsTag ? objectTag : objTag;
    othTag = othTag == argsTag ? objectTag : othTag;

    var objIsObj = objTag == objectTag,
        othIsObj = othTag == objectTag,
        isSameTag = objTag == othTag;

    if (isSameTag && isBuffer(object)) {
      if (!isBuffer(other)) {
        return false;
      }
      objIsArr = true;
      objIsObj = false;
    }
    if (isSameTag && !objIsObj) {
      stack || (stack = new Stack);
      return (objIsArr || isTypedArray(object))
        ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)
        : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);
    }
    if (!(bitmask & COMPARE_PARTIAL_FLAG)) {
      var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),
          othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');

      if (objIsWrapped || othIsWrapped) {
        var objUnwrapped = objIsWrapped ? object.value() : object,
            othUnwrapped = othIsWrapped ? other.value() : other;

        stack || (stack = new Stack);
        return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);
      }
    }
    if (!isSameTag) {
      return false;
    }
    stack || (stack = new Stack);
    return equalObjects(object, other, bitmask, customizer, equalFunc, stack);
  }

  /**
   * The base implementation of `_.isNative` without bad shim checks.
   *
   * @private
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is a native function,
   *  else `false`.
   */
  function baseIsNative(value) {
    if (!isObject(value) || isMasked(value)) {
      return false;
    }
    var pattern = isFunction(value) ? reIsNative : reIsHostCtor;
    return pattern.test(toSource(value));
  }

  /**
   * The base implementation of `_.isTypedArray` without Node.js optimizations.
   *
   * @private
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
   */
  function baseIsTypedArray(value) {
    return isObjectLike(value) &&
      isLength(value.length) && !!typedArrayTags[baseGetTag(value)];
  }

  /**
   * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.
   *
   * @private
   * @param {Object} object The object to query.
   * @returns {Array} Returns the array of property names.
   */
  function baseKeys(object) {
    if (!isPrototype(object)) {
      return nativeKeys(object);
    }
    var result = [];
    for (var key in Object(object)) {
      if (hasOwnProperty.call(object, key) && key != 'constructor') {
        result.push(key);
      }
    }
    return result;
  }

  /**
   * A specialized version of `baseIsEqualDeep` for arrays with support for
   * partial deep comparisons.
   *
   * @private
   * @param {Array} array The array to compare.
   * @param {Array} other The other array to compare.
   * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
   * @param {Function} customizer The function to customize comparisons.
   * @param {Function} equalFunc The function to determine equivalents of values.
   * @param {Object} stack Tracks traversed `array` and `other` objects.
   * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.
   */
  function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {
    var isPartial = bitmask & COMPARE_PARTIAL_FLAG,
        arrLength = array.length,
        othLength = other.length;

    if (arrLength != othLength && !(isPartial && othLength > arrLength)) {
      return false;
    }
    // Assume cyclic values are equal.
    var stacked = stack.get(array);
    if (stacked && stack.get(other)) {
      return stacked == other;
    }
    var index = -1,
        result = true,
        seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;

    stack.set(array, other);
    stack.set(other, array);

    // Ignore non-index properties.
    while (++index < arrLength) {
      var arrValue = array[index],
          othValue = other[index];

      if (customizer) {
        var compared = isPartial
          ? customizer(othValue, arrValue, index, other, array, stack)
          : customizer(arrValue, othValue, index, array, other, stack);
      }
      if (compared !== undefined) {
        if (compared) {
          continue;
        }
        result = false;
        break;
      }
      // Recursively compare arrays (susceptible to call stack limits).
      if (seen) {
        if (!arraySome(other, function(othValue, othIndex) {
              if (!cacheHas(seen, othIndex) &&
                  (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {
                return seen.push(othIndex);
              }
            })) {
          result = false;
          break;
        }
      } else if (!(
            arrValue === othValue ||
              equalFunc(arrValue, othValue, bitmask, customizer, stack)
          )) {
        result = false;
        break;
      }
    }
    stack['delete'](array);
    stack['delete'](other);
    return result;
  }

  /**
   * A specialized version of `baseIsEqualDeep` for comparing objects of
   * the same `toStringTag`.
   *
   * **Note:** This function only supports comparing values with tags of
   * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.
   *
   * @private
   * @param {Object} object The object to compare.
   * @param {Object} other The other object to compare.
   * @param {string} tag The `toStringTag` of the objects to compare.
   * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
   * @param {Function} customizer The function to customize comparisons.
   * @param {Function} equalFunc The function to determine equivalents of values.
   * @param {Object} stack Tracks traversed `object` and `other` objects.
   * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
   */
  function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {
    switch (tag) {
      case dataViewTag:
        if ((object.byteLength != other.byteLength) ||
            (object.byteOffset != other.byteOffset)) {
          return false;
        }
        object = object.buffer;
        other = other.buffer;

      case arrayBufferTag:
        if ((object.byteLength != other.byteLength) ||
            !equalFunc(new Uint8Array(object), new Uint8Array(other))) {
          return false;
        }
        return true;

      case boolTag:
      case dateTag:
      case numberTag:
        // Coerce booleans to `1` or `0` and dates to milliseconds.
        // Invalid dates are coerced to `NaN`.
        return eq(+object, +other);

      case errorTag:
        return object.name == other.name && object.message == other.message;

      case regexpTag:
      case stringTag:
        // Coerce regexes to strings and treat strings, primitives and objects,
        // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring
        // for more details.
        return object == (other + '');

      case mapTag:
        var convert = mapToArray;

      case setTag:
        var isPartial = bitmask & COMPARE_PARTIAL_FLAG;
        convert || (convert = setToArray);

        if (object.size != other.size && !isPartial) {
          return false;
        }
        // Assume cyclic values are equal.
        var stacked = stack.get(object);
        if (stacked) {
          return stacked == other;
        }
        bitmask |= COMPARE_UNORDERED_FLAG;

        // Recursively compare objects (susceptible to call stack limits).
        stack.set(object, other);
        var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);
        stack['delete'](object);
        return result;

      case symbolTag:
        if (symbolValueOf) {
          return symbolValueOf.call(object) == symbolValueOf.call(other);
        }
    }
    return false;
  }

  /**
   * A specialized version of `baseIsEqualDeep` for objects with support for
   * partial deep comparisons.
   *
   * @private
   * @param {Object} object The object to compare.
   * @param {Object} other The other object to compare.
   * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
   * @param {Function} customizer The function to customize comparisons.
   * @param {Function} equalFunc The function to determine equivalents of values.
   * @param {Object} stack Tracks traversed `object` and `other` objects.
   * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
   */
  function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {
    var isPartial = bitmask & COMPARE_PARTIAL_FLAG,
        objProps = getAllKeys(object),
        objLength = objProps.length,
        othProps = getAllKeys(other),
        othLength = othProps.length;

    if (objLength != othLength && !isPartial) {
      return false;
    }
    var index = objLength;
    while (index--) {
      var key = objProps[index];
      if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {
        return false;
      }
    }
    // Assume cyclic values are equal.
    var stacked = stack.get(object);
    if (stacked && stack.get(other)) {
      return stacked == other;
    }
    var result = true;
    stack.set(object, other);
    stack.set(other, object);

    var skipCtor = isPartial;
    while (++index < objLength) {
      key = objProps[index];
      var objValue = object[key],
          othValue = other[key];

      if (customizer) {
        var compared = isPartial
          ? customizer(othValue, objValue, key, other, object, stack)
          : customizer(objValue, othValue, key, object, other, stack);
      }
      // Recursively compare objects (susceptible to call stack limits).
      if (!(compared === undefined
            ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))
            : compared
          )) {
        result = false;
        break;
      }
      skipCtor || (skipCtor = key == 'constructor');
    }
    if (result && !skipCtor) {
      var objCtor = object.constructor,
          othCtor = other.constructor;

      // Non `Object` object instances with different constructors are not equal.
      if (objCtor != othCtor &&
          ('constructor' in object && 'constructor' in other) &&
          !(typeof objCtor == 'function' && objCtor instanceof objCtor &&
            typeof othCtor == 'function' && othCtor instanceof othCtor)) {
        result = false;
      }
    }
    stack['delete'](object);
    stack['delete'](other);
    return result;
  }

  /**
   * Creates an array of own enumerable property names and symbols of `object`.
   *
   * @private
   * @param {Object} object The object to query.
   * @returns {Array} Returns the array of property names and symbols.
   */
  function getAllKeys(object) {
    return baseGetAllKeys(object, keys, getSymbols);
  }

  /**
   * Gets the data for `map`.
   *
   * @private
   * @param {Object} map The map to query.
   * @param {string} key The reference key.
   * @returns {*} Returns the map data.
   */
  function getMapData(map, key) {
    var data = map.__data__;
    return isKeyable(key)
      ? data[typeof key == 'string' ? 'string' : 'hash']
      : data.map;
  }

  /**
   * Gets the native function at `key` of `object`.
   *
   * @private
   * @param {Object} object The object to query.
   * @param {string} key The key of the method to get.
   * @returns {*} Returns the function if it's native, else `undefined`.
   */
  function getNative(object, key) {
    var value = getValue(object, key);
    return baseIsNative(value) ? value : undefined;
  }

  /**
   * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.
   *
   * @private
   * @param {*} value The value to query.
   * @returns {string} Returns the raw `toStringTag`.
   */
  function getRawTag(value) {
    var isOwn = hasOwnProperty.call(value, symToStringTag),
        tag = value[symToStringTag];

    try {
      value[symToStringTag] = undefined;
      var unmasked = true;
    } catch (e) {}

    var result = nativeObjectToString.call(value);
    if (unmasked) {
      if (isOwn) {
        value[symToStringTag] = tag;
      } else {
        delete value[symToStringTag];
      }
    }
    return result;
  }

  /**
   * Creates an array of the own enumerable symbols of `object`.
   *
   * @private
   * @param {Object} object The object to query.
   * @returns {Array} Returns the array of symbols.
   */
  var getSymbols = !nativeGetSymbols ? stubArray : function(object) {
    if (object == null) {
      return [];
    }
    object = Object(object);
    return arrayFilter(nativeGetSymbols(object), function(symbol) {
      return propertyIsEnumerable.call(object, symbol);
    });
  };

  /**
   * Gets the `toStringTag` of `value`.
   *
   * @private
   * @param {*} value The value to query.
   * @returns {string} Returns the `toStringTag`.
   */
  var getTag = baseGetTag;

  // Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.
  if ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||
      (Map && getTag(new Map) != mapTag) ||
      (Promise && getTag(Promise.resolve()) != promiseTag) ||
      (Set && getTag(new Set) != setTag) ||
      (WeakMap && getTag(new WeakMap) != weakMapTag)) {
    getTag = function(value) {
      var result = baseGetTag(value),
          Ctor = result == objectTag ? value.constructor : undefined,
          ctorString = Ctor ? toSource(Ctor) : '';

      if (ctorString) {
        switch (ctorString) {
          case dataViewCtorString: return dataViewTag;
          case mapCtorString: return mapTag;
          case promiseCtorString: return promiseTag;
          case setCtorString: return setTag;
          case weakMapCtorString: return weakMapTag;
        }
      }
      return result;
    };
  }

  /**
   * Checks if `value` is a valid array-like index.
   *
   * @private
   * @param {*} value The value to check.
   * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.
   * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.
   */
  function isIndex(value, length) {
    length = length == null ? MAX_SAFE_INTEGER : length;
    return !!length &&
      (typeof value == 'number' || reIsUint.test(value)) &&
      (value > -1 && value % 1 == 0 && value < length);
  }

  /**
   * Checks if `value` is suitable for use as unique object key.
   *
   * @private
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is suitable, else `false`.
   */
  function isKeyable(value) {
    var type = typeof value;
    return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')
      ? (value !== '__proto__')
      : (value === null);
  }

  /**
   * Checks if `func` has its source masked.
   *
   * @private
   * @param {Function} func The function to check.
   * @returns {boolean} Returns `true` if `func` is masked, else `false`.
   */
  function isMasked(func) {
    return !!maskSrcKey && (maskSrcKey in func);
  }

  /**
   * Checks if `value` is likely a prototype object.
   *
   * @private
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.
   */
  function isPrototype(value) {
    var Ctor = value && value.constructor,
        proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;

    return value === proto;
  }

  /**
   * Converts `value` to a string using `Object.prototype.toString`.
   *
   * @private
   * @param {*} value The value to convert.
   * @returns {string} Returns the converted string.
   */
  function objectToString(value) {
    return nativeObjectToString.call(value);
  }

  /**
   * Converts `func` to its source code.
   *
   * @private
   * @param {Function} func The function to convert.
   * @returns {string} Returns the source code.
   */
  function toSource(func) {
    if (func != null) {
      try {
        return funcToString.call(func);
      } catch (e) {}
      try {
        return (func + '');
      } catch (e) {}
    }
    return '';
  }

  /**
   * Performs a
   * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
   * comparison between two values to determine if they are equivalent.
   *
   * @static
   * @memberOf _
   * @since 4.0.0
   * @category Lang
   * @param {*} value The value to compare.
   * @param {*} other The other value to compare.
   * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
   * @example
   *
   * var object = { 'a': 1 };
   * var other = { 'a': 1 };
   *
   * _.eq(object, object);
   * // => true
   *
   * _.eq(object, other);
   * // => false
   *
   * _.eq('a', 'a');
   * // => true
   *
   * _.eq('a', Object('a'));
   * // => false
   *
   * _.eq(NaN, NaN);
   * // => true
   */
  function eq(value, other) {
    return value === other || (value !== value && other !== other);
  }

  /**
   * Checks if `value` is likely an `arguments` object.
   *
   * @static
   * @memberOf _
   * @since 0.1.0
   * @category Lang
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is an `arguments` object,
   *  else `false`.
   * @example
   *
   * _.isArguments(function() { return arguments; }());
   * // => true
   *
   * _.isArguments([1, 2, 3]);
   * // => false
   */
  var isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {
    return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&
      !propertyIsEnumerable.call(value, 'callee');
  };

  /**
   * Checks if `value` is classified as an `Array` object.
   *
   * @static
   * @memberOf _
   * @since 0.1.0
   * @category Lang
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is an array, else `false`.
   * @example
   *
   * _.isArray([1, 2, 3]);
   * // => true
   *
   * _.isArray(document.body.children);
   * // => false
   *
   * _.isArray('abc');
   * // => false
   *
   * _.isArray(_.noop);
   * // => false
   */
  var isArray = Array.isArray;

  /**
   * Checks if `value` is array-like. A value is considered array-like if it's
   * not a function and has a `value.length` that's an integer greater than or
   * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.
   *
   * @static
   * @memberOf _
   * @since 4.0.0
   * @category Lang
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is array-like, else `false`.
   * @example
   *
   * _.isArrayLike([1, 2, 3]);
   * // => true
   *
   * _.isArrayLike(document.body.children);
   * // => true
   *
   * _.isArrayLike('abc');
   * // => true
   *
   * _.isArrayLike(_.noop);
   * // => false
   */
  function isArrayLike(value) {
    return value != null && isLength(value.length) && !isFunction(value);
  }

  /**
   * Checks if `value` is a buffer.
   *
   * @static
   * @memberOf _
   * @since 4.3.0
   * @category Lang
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.
   * @example
   *
   * _.isBuffer(new Buffer(2));
   * // => true
   *
   * _.isBuffer(new Uint8Array(2));
   * // => false
   */
  var isBuffer = nativeIsBuffer || stubFalse;

  /**
   * Performs a deep comparison between two values to determine if they are
   * equivalent.
   *
   * **Note:** This method supports comparing arrays, array buffers, booleans,
   * date objects, error objects, maps, numbers, `Object` objects, regexes,
   * sets, strings, symbols, and typed arrays. `Object` objects are compared
   * by their own, not inherited, enumerable properties. Functions and DOM
   * nodes are compared by strict equality, i.e. `===`.
   *
   * @static
   * @memberOf _
   * @since 0.1.0
   * @category Lang
   * @param {*} value The value to compare.
   * @param {*} other The other value to compare.
   * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
   * @example
   *
   * var object = { 'a': 1 };
   * var other = { 'a': 1 };
   *
   * _.isEqual(object, other);
   * // => true
   *
   * object === other;
   * // => false
   */
  function isEqual(value, other) {
    return baseIsEqual(value, other);
  }

  /**
   * Checks if `value` is classified as a `Function` object.
   *
   * @static
   * @memberOf _
   * @since 0.1.0
   * @category Lang
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is a function, else `false`.
   * @example
   *
   * _.isFunction(_);
   * // => true
   *
   * _.isFunction(/abc/);
   * // => false
   */
  function isFunction(value) {
    if (!isObject(value)) {
      return false;
    }
    // The use of `Object#toString` avoids issues with the `typeof` operator
    // in Safari 9 which returns 'object' for typed arrays and other constructors.
    var tag = baseGetTag(value);
    return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;
  }

  /**
   * Checks if `value` is a valid array-like length.
   *
   * **Note:** This method is loosely based on
   * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
   *
   * @static
   * @memberOf _
   * @since 4.0.0
   * @category Lang
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.
   * @example
   *
   * _.isLength(3);
   * // => true
   *
   * _.isLength(Number.MIN_VALUE);
   * // => false
   *
   * _.isLength(Infinity);
   * // => false
   *
   * _.isLength('3');
   * // => false
   */
  function isLength(value) {
    return typeof value == 'number' &&
      value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
  }

  /**
   * Checks if `value` is the
   * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
   * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
   *
   * @static
   * @memberOf _
   * @since 0.1.0
   * @category Lang
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is an object, else `false`.
   * @example
   *
   * _.isObject({});
   * // => true
   *
   * _.isObject([1, 2, 3]);
   * // => true
   *
   * _.isObject(_.noop);
   * // => true
   *
   * _.isObject(null);
   * // => false
   */
  function isObject(value) {
    var type = typeof value;
    return value != null && (type == 'object' || type == 'function');
  }

  /**
   * Checks if `value` is object-like. A value is object-like if it's not `null`
   * and has a `typeof` result of "object".
   *
   * @static
   * @memberOf _
   * @since 4.0.0
   * @category Lang
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
   * @example
   *
   * _.isObjectLike({});
   * // => true
   *
   * _.isObjectLike([1, 2, 3]);
   * // => true
   *
   * _.isObjectLike(_.noop);
   * // => false
   *
   * _.isObjectLike(null);
   * // => false
   */
  function isObjectLike(value) {
    return value != null && typeof value == 'object';
  }

  /**
   * Checks if `value` is classified as a typed array.
   *
   * @static
   * @memberOf _
   * @since 3.0.0
   * @category Lang
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
   * @example
   *
   * _.isTypedArray(new Uint8Array);
   * // => true
   *
   * _.isTypedArray([]);
   * // => false
   */
  var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;

  /**
   * Creates an array of the own enumerable property names of `object`.
   *
   * **Note:** Non-object values are coerced to objects. See the
   * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
   * for more details.
   *
   * @static
   * @since 0.1.0
   * @memberOf _
   * @category Object
   * @param {Object} object The object to query.
   * @returns {Array} Returns the array of property names.
   * @example
   *
   * function Foo() {
   *   this.a = 1;
   *   this.b = 2;
   * }
   *
   * Foo.prototype.c = 3;
   *
   * _.keys(new Foo);
   * // => ['a', 'b'] (iteration order is not guaranteed)
   *
   * _.keys('hi');
   * // => ['0', '1']
   */
  function keys(object) {
    return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);
  }

  /**
   * This method returns a new empty array.
   *
   * @static
   * @memberOf _
   * @since 4.13.0
   * @category Util
   * @returns {Array} Returns the new empty array.
   * @example
   *
   * var arrays = _.times(2, _.stubArray);
   *
   * console.log(arrays);
   * // => [[], []]
   *
   * console.log(arrays[0] === arrays[1]);
   * // => false
   */
  function stubArray() {
    return [];
  }

  /**
   * This method returns `false`.
   *
   * @static
   * @memberOf _
   * @since 4.13.0
   * @category Util
   * @returns {boolean} Returns `false`.
   * @example
   *
   * _.times(2, _.stubFalse);
   * // => [false, false]
   */
  function stubFalse() {
    return false;
  }

  module.exports = isEqual;
  });

  /**
   * lodash (Custom Build) <https://lodash.com/>
   * Build: `lodash modularize exports="npm" -o ./`
   * Copyright jQuery Foundation and other contributors <https://jquery.org/>
   * Released under MIT license <https://lodash.com/license>
   * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
   * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
   */

  /** Used as references for various `Number` constants. */
  var MAX_SAFE_INTEGER$1 = 9007199254740991;

  /** `Object#toString` result references. */
  var argsTag$1 = '[object Arguments]',
      funcTag$1 = '[object Function]',
      genTag$1 = '[object GeneratorFunction]',
      mapTag = '[object Map]',
      objectTag = '[object Object]',
      promiseTag = '[object Promise]',
      setTag = '[object Set]',
      stringTag = '[object String]',
      weakMapTag = '[object WeakMap]';

  var dataViewTag = '[object DataView]';

  /**
   * Used to match `RegExp`
   * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).
   */
  var reRegExpChar = /[\\^$.*+?()[\]{}|]/g;

  /** Used to detect host constructors (Safari). */
  var reIsHostCtor = /^\[object .+?Constructor\]$/;

  /** Used to detect unsigned integer values. */
  var reIsUint$1 = /^(?:0|[1-9]\d*)$/;

  /** Used to compose unicode character classes. */
  var rsAstralRange$1 = '\\ud800-\\udfff',
      rsComboMarksRange$1 = '\\u0300-\\u036f\\ufe20-\\ufe23',
      rsComboSymbolsRange$1 = '\\u20d0-\\u20f0',
      rsVarRange$1 = '\\ufe0e\\ufe0f';

  /** Used to compose unicode capture groups. */
  var rsAstral$1 = '[' + rsAstralRange$1 + ']',
      rsCombo$1 = '[' + rsComboMarksRange$1 + rsComboSymbolsRange$1 + ']',
      rsFitz$1 = '\\ud83c[\\udffb-\\udfff]',
      rsModifier$1 = '(?:' + rsCombo$1 + '|' + rsFitz$1 + ')',
      rsNonAstral$1 = '[^' + rsAstralRange$1 + ']',
      rsRegional$1 = '(?:\\ud83c[\\udde6-\\uddff]){2}',
      rsSurrPair$1 = '[\\ud800-\\udbff][\\udc00-\\udfff]',
      rsZWJ$1 = '\\u200d';

  /** Used to compose unicode regexes. */
  var reOptMod$1 = rsModifier$1 + '?',
      rsOptVar$1 = '[' + rsVarRange$1 + ']?',
      rsOptJoin$1 = '(?:' + rsZWJ$1 + '(?:' + [rsNonAstral$1, rsRegional$1, rsSurrPair$1].join('|') + ')' + rsOptVar$1 + reOptMod$1 + ')*',
      rsSeq$1 = rsOptVar$1 + reOptMod$1 + rsOptJoin$1,
      rsSymbol$1 = '(?:' + [rsNonAstral$1 + rsCombo$1 + '?', rsCombo$1, rsRegional$1, rsSurrPair$1, rsAstral$1].join('|') + ')';

  /** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */
  var reUnicode$1 = RegExp(rsFitz$1 + '(?=' + rsFitz$1 + ')|' + rsSymbol$1 + rsSeq$1, 'g');

  /** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */
  var reHasUnicode$1 = RegExp('[' + rsZWJ$1 + rsAstralRange$1  + rsComboMarksRange$1 + rsComboSymbolsRange$1 + rsVarRange$1 + ']');

  /** Detect free variable `global` from Node.js. */
  var freeGlobal$3 = typeof commonjsGlobal == 'object' && commonjsGlobal && commonjsGlobal.Object === Object && commonjsGlobal;

  /** Detect free variable `self`. */
  var freeSelf$3 = typeof self == 'object' && self && self.Object === Object && self;

  /** Used as a reference to the global object. */
  var root$3 = freeGlobal$3 || freeSelf$3 || Function('return this')();

  /**
   * A specialized version of `_.map` for arrays without support for iteratee
   * shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {Array} Returns the new mapped array.
   */
  function arrayMap(array, iteratee) {
    var index = -1,
        length = array ? array.length : 0,
        result = Array(length);

    while (++index < length) {
      result[index] = iteratee(array[index], index, array);
    }
    return result;
  }

  /**
   * Converts an ASCII `string` to an array.
   *
   * @private
   * @param {string} string The string to convert.
   * @returns {Array} Returns the converted array.
   */
  function asciiToArray$1(string) {
    return string.split('');
  }

  /**
   * The base implementation of `_.times` without support for iteratee shorthands
   * or max array length checks.
   *
   * @private
   * @param {number} n The number of times to invoke `iteratee`.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {Array} Returns the array of results.
   */
  function baseTimes$1(n, iteratee) {
    var index = -1,
        result = Array(n);

    while (++index < n) {
      result[index] = iteratee(index);
    }
    return result;
  }

  /**
   * The base implementation of `_.values` and `_.valuesIn` which creates an
   * array of `object` property values corresponding to the property names
   * of `props`.
   *
   * @private
   * @param {Object} object The object to query.
   * @param {Array} props The property names to get values for.
   * @returns {Object} Returns the array of property values.
   */
  function baseValues(object, props) {
    return arrayMap(props, function(key) {
      return object[key];
    });
  }

  /**
   * Gets the value at `key` of `object`.
   *
   * @private
   * @param {Object} [object] The object to query.
   * @param {string} key The key of the property to get.
   * @returns {*} Returns the property value.
   */
  function getValue(object, key) {
    return object == null ? undefined : object[key];
  }

  /**
   * Checks if `string` contains Unicode symbols.
   *
   * @private
   * @param {string} string The string to inspect.
   * @returns {boolean} Returns `true` if a symbol is found, else `false`.
   */
  function hasUnicode$1(string) {
    return reHasUnicode$1.test(string);
  }

  /**
   * Checks if `value` is a host object in IE < 9.
   *
   * @private
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is a host object, else `false`.
   */
  function isHostObject(value) {
    // Many host objects are `Object` objects that can coerce to strings
    // despite having improperly defined `toString` methods.
    var result = false;
    if (value != null && typeof value.toString != 'function') {
      try {
        result = !!(value + '');
      } catch (e) {}
    }
    return result;
  }

  /**
   * Converts `iterator` to an array.
   *
   * @private
   * @param {Object} iterator The iterator to convert.
   * @returns {Array} Returns the converted array.
   */
  function iteratorToArray(iterator) {
    var data,
        result = [];

    while (!(data = iterator.next()).done) {
      result.push(data.value);
    }
    return result;
  }

  /**
   * Converts `map` to its key-value pairs.
   *
   * @private
   * @param {Object} map The map to convert.
   * @returns {Array} Returns the key-value pairs.
   */
  function mapToArray(map) {
    var index = -1,
        result = Array(map.size);

    map.forEach(function(value, key) {
      result[++index] = [key, value];
    });
    return result;
  }

  /**
   * Creates a unary function that invokes `func` with its argument transformed.
   *
   * @private
   * @param {Function} func The function to wrap.
   * @param {Function} transform The argument transform.
   * @returns {Function} Returns the new function.
   */
  function overArg$1(func, transform) {
    return function(arg) {
      return func(transform(arg));
    };
  }

  /**
   * Converts `set` to an array of its values.
   *
   * @private
   * @param {Object} set The set to convert.
   * @returns {Array} Returns the values.
   */
  function setToArray(set) {
    var index = -1,
        result = Array(set.size);

    set.forEach(function(value) {
      result[++index] = value;
    });
    return result;
  }

  /**
   * Converts `string` to an array.
   *
   * @private
   * @param {string} string The string to convert.
   * @returns {Array} Returns the converted array.
   */
  function stringToArray$1(string) {
    return hasUnicode$1(string)
      ? unicodeToArray$1(string)
      : asciiToArray$1(string);
  }

  /**
   * Converts a Unicode `string` to an array.
   *
   * @private
   * @param {string} string The string to convert.
   * @returns {Array} Returns the converted array.
   */
  function unicodeToArray$1(string) {
    return string.match(reUnicode$1) || [];
  }

  /** Used for built-in method references. */
  var funcProto = Function.prototype,
      objectProto$4 = Object.prototype;

  /** Used to detect overreaching core-js shims. */
  var coreJsData = root$3['__core-js_shared__'];

  /** Used to detect methods masquerading as native. */
  var maskSrcKey = (function() {
    var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');
    return uid ? ('Symbol(src)_1.' + uid) : '';
  }());

  /** Used to resolve the decompiled source of functions. */
  var funcToString = funcProto.toString;

  /** Used to check objects for own properties. */
  var hasOwnProperty$2 = objectProto$4.hasOwnProperty;

  /**
   * Used to resolve the
   * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
   * of values.
   */
  var objectToString$4 = objectProto$4.toString;

  /** Used to detect if a method is native. */
  var reIsNative = RegExp('^' +
    funcToString.call(hasOwnProperty$2).replace(reRegExpChar, '\\$&')
    .replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$'
  );

  /** Built-in value references. */
  var Symbol$2 = root$3.Symbol,
      iteratorSymbol = Symbol$2 ? Symbol$2.iterator : undefined,
      propertyIsEnumerable$1 = objectProto$4.propertyIsEnumerable;

  /* Built-in method references for those with the same name as other `lodash` methods. */
  var nativeKeys$1 = overArg$1(Object.keys, Object);

  /* Built-in method references that are verified to be native. */
  var DataView = getNative(root$3, 'DataView'),
      Map$1 = getNative(root$3, 'Map'),
      Promise$1 = getNative(root$3, 'Promise'),
      Set$1 = getNative(root$3, 'Set'),
      WeakMap$1 = getNative(root$3, 'WeakMap');

  /** Used to detect maps, sets, and weakmaps. */
  var dataViewCtorString = toSource(DataView),
      mapCtorString = toSource(Map$1),
      promiseCtorString = toSource(Promise$1),
      setCtorString = toSource(Set$1),
      weakMapCtorString = toSource(WeakMap$1);

  /**
   * Creates an array of the enumerable property names of the array-like `value`.
   *
   * @private
   * @param {*} value The value to query.
   * @param {boolean} inherited Specify returning inherited property names.
   * @returns {Array} Returns the array of property names.
   */
  function arrayLikeKeys$1(value, inherited) {
    // Safari 8.1 makes `arguments.callee` enumerable in strict mode.
    // Safari 9 makes `arguments.length` enumerable in strict mode.
    var result = (isArray$1(value) || isArguments$1(value))
      ? baseTimes$1(value.length, String)
      : [];

    var length = result.length,
        skipIndexes = !!length;

    for (var key in value) {
      if ((inherited || hasOwnProperty$2.call(value, key)) &&
          !(skipIndexes && (key == 'length' || isIndex$1(key, length)))) {
        result.push(key);
      }
    }
    return result;
  }

  /**
   * The base implementation of `getTag`.
   *
   * @private
   * @param {*} value The value to query.
   * @returns {string} Returns the `toStringTag`.
   */
  function baseGetTag(value) {
    return objectToString$4.call(value);
  }

  /**
   * The base implementation of `_.isNative` without bad shim checks.
   *
   * @private
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is a native function,
   *  else `false`.
   */
  function baseIsNative(value) {
    if (!isObject$4(value) || isMasked(value)) {
      return false;
    }
    var pattern = (isFunction$1(value) || isHostObject(value)) ? reIsNative : reIsHostCtor;
    return pattern.test(toSource(value));
  }

  /**
   * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.
   *
   * @private
   * @param {Object} object The object to query.
   * @returns {Array} Returns the array of property names.
   */
  function baseKeys$1(object) {
    if (!isPrototype$1(object)) {
      return nativeKeys$1(object);
    }
    var result = [];
    for (var key in Object(object)) {
      if (hasOwnProperty$2.call(object, key) && key != 'constructor') {
        result.push(key);
      }
    }
    return result;
  }

  /**
   * Copies the values of `source` to `array`.
   *
   * @private
   * @param {Array} source The array to copy values from.
   * @param {Array} [array=[]] The array to copy values to.
   * @returns {Array} Returns `array`.
   */
  function copyArray(source, array) {
    var index = -1,
        length = source.length;

    array || (array = Array(length));
    while (++index < length) {
      array[index] = source[index];
    }
    return array;
  }

  /**
   * Gets the native function at `key` of `object`.
   *
   * @private
   * @param {Object} object The object to query.
   * @param {string} key The key of the method to get.
   * @returns {*} Returns the function if it's native, else `undefined`.
   */
  function getNative(object, key) {
    var value = getValue(object, key);
    return baseIsNative(value) ? value : undefined;
  }

  /**
   * Gets the `toStringTag` of `value`.
   *
   * @private
   * @param {*} value The value to query.
   * @returns {string} Returns the `toStringTag`.
   */
  var getTag = baseGetTag;

  // Fallback for data views, maps, sets, and weak maps in IE 11,
  // for data views in Edge < 14, and promises in Node.js.
  if ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||
      (Map$1 && getTag(new Map$1) != mapTag) ||
      (Promise$1 && getTag(Promise$1.resolve()) != promiseTag) ||
      (Set$1 && getTag(new Set$1) != setTag) ||
      (WeakMap$1 && getTag(new WeakMap$1) != weakMapTag)) {
    getTag = function(value) {
      var result = objectToString$4.call(value),
          Ctor = result == objectTag ? value.constructor : undefined,
          ctorString = Ctor ? toSource(Ctor) : undefined;

      if (ctorString) {
        switch (ctorString) {
          case dataViewCtorString: return dataViewTag;
          case mapCtorString: return mapTag;
          case promiseCtorString: return promiseTag;
          case setCtorString: return setTag;
          case weakMapCtorString: return weakMapTag;
        }
      }
      return result;
    };
  }

  /**
   * Checks if `value` is a valid array-like index.
   *
   * @private
   * @param {*} value The value to check.
   * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.
   * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.
   */
  function isIndex$1(value, length) {
    length = length == null ? MAX_SAFE_INTEGER$1 : length;
    return !!length &&
      (typeof value == 'number' || reIsUint$1.test(value)) &&
      (value > -1 && value % 1 == 0 && value < length);
  }

  /**
   * Checks if `func` has its source masked.
   *
   * @private
   * @param {Function} func The function to check.
   * @returns {boolean} Returns `true` if `func` is masked, else `false`.
   */
  function isMasked(func) {
    return !!maskSrcKey && (maskSrcKey in func);
  }

  /**
   * Checks if `value` is likely a prototype object.
   *
   * @private
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.
   */
  function isPrototype$1(value) {
    var Ctor = value && value.constructor,
        proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto$4;

    return value === proto;
  }

  /**
   * Converts `func` to its source code.
   *
   * @private
   * @param {Function} func The function to process.
   * @returns {string} Returns the source code.
   */
  function toSource(func) {
    if (func != null) {
      try {
        return funcToString.call(func);
      } catch (e) {}
      try {
        return (func + '');
      } catch (e) {}
    }
    return '';
  }

  /**
   * Checks if `value` is likely an `arguments` object.
   *
   * @static
   * @memberOf _
   * @since 0.1.0
   * @category Lang
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is an `arguments` object,
   *  else `false`.
   * @example
   *
   * _.isArguments(function() { return arguments; }());
   * // => true
   *
   * _.isArguments([1, 2, 3]);
   * // => false
   */
  function isArguments$1(value) {
    // Safari 8.1 makes `arguments.callee` enumerable in strict mode.
    return isArrayLikeObject$1(value) && hasOwnProperty$2.call(value, 'callee') &&
      (!propertyIsEnumerable$1.call(value, 'callee') || objectToString$4.call(value) == argsTag$1);
  }

  /**
   * Checks if `value` is classified as an `Array` object.
   *
   * @static
   * @memberOf _
   * @since 0.1.0
   * @category Lang
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is an array, else `false`.
   * @example
   *
   * _.isArray([1, 2, 3]);
   * // => true
   *
   * _.isArray(document.body.children);
   * // => false
   *
   * _.isArray('abc');
   * // => false
   *
   * _.isArray(_.noop);
   * // => false
   */
  var isArray$1 = Array.isArray;

  /**
   * Checks if `value` is array-like. A value is considered array-like if it's
   * not a function and has a `value.length` that's an integer greater than or
   * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.
   *
   * @static
   * @memberOf _
   * @since 4.0.0
   * @category Lang
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is array-like, else `false`.
   * @example
   *
   * _.isArrayLike([1, 2, 3]);
   * // => true
   *
   * _.isArrayLike(document.body.children);
   * // => true
   *
   * _.isArrayLike('abc');
   * // => true
   *
   * _.isArrayLike(_.noop);
   * // => false
   */
  function isArrayLike$1(value) {
    return value != null && isLength$1(value.length) && !isFunction$1(value);
  }

  /**
   * This method is like `_.isArrayLike` except that it also checks if `value`
   * is an object.
   *
   * @static
   * @memberOf _
   * @since 4.0.0
   * @category Lang
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is an array-like object,
   *  else `false`.
   * @example
   *
   * _.isArrayLikeObject([1, 2, 3]);
   * // => true
   *
   * _.isArrayLikeObject(document.body.children);
   * // => true
   *
   * _.isArrayLikeObject('abc');
   * // => false
   *
   * _.isArrayLikeObject(_.noop);
   * // => false
   */
  function isArrayLikeObject$1(value) {
    return isObjectLike$4(value) && isArrayLike$1(value);
  }

  /**
   * Checks if `value` is classified as a `Function` object.
   *
   * @static
   * @memberOf _
   * @since 0.1.0
   * @category Lang
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is a function, else `false`.
   * @example
   *
   * _.isFunction(_);
   * // => true
   *
   * _.isFunction(/abc/);
   * // => false
   */
  function isFunction$1(value) {
    // The use of `Object#toString` avoids issues with the `typeof` operator
    // in Safari 8-9 which returns 'object' for typed array and other constructors.
    var tag = isObject$4(value) ? objectToString$4.call(value) : '';
    return tag == funcTag$1 || tag == genTag$1;
  }

  /**
   * Checks if `value` is a valid array-like length.
   *
   * **Note:** This method is loosely based on
   * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
   *
   * @static
   * @memberOf _
   * @since 4.0.0
   * @category Lang
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.
   * @example
   *
   * _.isLength(3);
   * // => true
   *
   * _.isLength(Number.MIN_VALUE);
   * // => false
   *
   * _.isLength(Infinity);
   * // => false
   *
   * _.isLength('3');
   * // => false
   */
  function isLength$1(value) {
    return typeof value == 'number' &&
      value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER$1;
  }

  /**
   * Checks if `value` is the
   * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
   * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
   *
   * @static
   * @memberOf _
   * @since 0.1.0
   * @category Lang
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is an object, else `false`.
   * @example
   *
   * _.isObject({});
   * // => true
   *
   * _.isObject([1, 2, 3]);
   * // => true
   *
   * _.isObject(_.noop);
   * // => true
   *
   * _.isObject(null);
   * // => false
   */
  function isObject$4(value) {
    var type = typeof value;
    return !!value && (type == 'object' || type == 'function');
  }

  /**
   * Checks if `value` is object-like. A value is object-like if it's not `null`
   * and has a `typeof` result of "object".
   *
   * @static
   * @memberOf _
   * @since 4.0.0
   * @category Lang
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
   * @example
   *
   * _.isObjectLike({});
   * // => true
   *
   * _.isObjectLike([1, 2, 3]);
   * // => true
   *
   * _.isObjectLike(_.noop);
   * // => false
   *
   * _.isObjectLike(null);
   * // => false
   */
  function isObjectLike$4(value) {
    return !!value && typeof value == 'object';
  }

  /**
   * Checks if `value` is classified as a `String` primitive or object.
   *
   * @static
   * @since 0.1.0
   * @memberOf _
   * @category Lang
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is a string, else `false`.
   * @example
   *
   * _.isString('abc');
   * // => true
   *
   * _.isString(1);
   * // => false
   */
  function isString(value) {
    return typeof value == 'string' ||
      (!isArray$1(value) && isObjectLike$4(value) && objectToString$4.call(value) == stringTag);
  }

  /**
   * Converts `value` to an array.
   *
   * @static
   * @since 0.1.0
   * @memberOf _
   * @category Lang
   * @param {*} value The value to convert.
   * @returns {Array} Returns the converted array.
   * @example
   *
   * _.toArray({ 'a': 1, 'b': 2 });
   * // => [1, 2]
   *
   * _.toArray('abc');
   * // => ['a', 'b', 'c']
   *
   * _.toArray(1);
   * // => []
   *
   * _.toArray(null);
   * // => []
   */
  function toArray(value) {
    if (!value) {
      return [];
    }
    if (isArrayLike$1(value)) {
      return isString(value) ? stringToArray$1(value) : copyArray(value);
    }
    if (iteratorSymbol && value[iteratorSymbol]) {
      return iteratorToArray(value[iteratorSymbol]());
    }
    var tag = getTag(value),
        func = tag == mapTag ? mapToArray : (tag == setTag ? setToArray : values);

    return func(value);
  }

  /**
   * Creates an array of the own enumerable property names of `object`.
   *
   * **Note:** Non-object values are coerced to objects. See the
   * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
   * for more details.
   *
   * @static
   * @since 0.1.0
   * @memberOf _
   * @category Object
   * @param {Object} object The object to query.
   * @returns {Array} Returns the array of property names.
   * @example
   *
   * function Foo() {
   *   this.a = 1;
   *   this.b = 2;
   * }
   *
   * Foo.prototype.c = 3;
   *
   * _.keys(new Foo);
   * // => ['a', 'b'] (iteration order is not guaranteed)
   *
   * _.keys('hi');
   * // => ['0', '1']
   */
  function keys$1(object) {
    return isArrayLike$1(object) ? arrayLikeKeys$1(object) : baseKeys$1(object);
  }

  /**
   * Creates an array of the own enumerable string keyed property values of `object`.
   *
   * **Note:** Non-object values are coerced to objects.
   *
   * @static
   * @since 0.1.0
   * @memberOf _
   * @category Object
   * @param {Object} object The object to query.
   * @returns {Array} Returns the array of property values.
   * @example
   *
   * function Foo() {
   *   this.a = 1;
   *   this.b = 2;
   * }
   *
   * Foo.prototype.c = 3;
   *
   * _.values(new Foo);
   * // => [1, 2] (iteration order is not guaranteed)
   *
   * _.values('hi');
   * // => ['h', 'i']
   */
  function values(object) {
    return object ? baseValues(object, keys$1(object)) : [];
  }

  var lodash_toarray = toArray;

  /**
   * SSR Window 3.0.0
   * Better handling for window object in SSR environment
   * https://github.com/nolimits4web/ssr-window
   *
   * Copyright 2020, Vladimir Kharlampidi
   *
   * Licensed under MIT
   *
   * Released on: November 9, 2020
   */
  /* eslint-disable no-param-reassign */
  function isObject$3(obj) {
      return (obj !== null &&
          typeof obj === 'object' &&
          'constructor' in obj &&
          obj.constructor === Object);
  }
  function extend$1(target, src) {
      if (target === void 0) { target = {}; }
      if (src === void 0) { src = {}; }
      Object.keys(src).forEach(function (key) {
          if (typeof target[key] === 'undefined')
              target[key] = src[key];
          else if (isObject$3(src[key]) &&
              isObject$3(target[key]) &&
              Object.keys(src[key]).length > 0) {
              extend$1(target[key], src[key]);
          }
      });
  }

  var ssrDocument = {
      body: {},
      addEventListener: function () { },
      removeEventListener: function () { },
      activeElement: {
          blur: function () { },
          nodeName: '',
      },
      querySelector: function () {
          return null;
      },
      querySelectorAll: function () {
          return [];
      },
      getElementById: function () {
          return null;
      },
      createEvent: function () {
          return {
              initEvent: function () { },
          };
      },
      createElement: function () {
          return {
              children: [],
              childNodes: [],
              style: {},
              setAttribute: function () { },
              getElementsByTagName: function () {
                  return [];
              },
          };
      },
      createElementNS: function () {
          return {};
      },
      importNode: function () {
          return null;
      },
      location: {
          hash: '',
          host: '',
          hostname: '',
          href: '',
          origin: '',
          pathname: '',
          protocol: '',
          search: '',
      },
  };
  function getDocument() {
      var doc = typeof document !== 'undefined' ? document : {};
      extend$1(doc, ssrDocument);
      return doc;
  }

  var ssrWindow = {
      document: ssrDocument,
      navigator: {
          userAgent: '',
      },
      location: {
          hash: '',
          host: '',
          hostname: '',
          href: '',
          origin: '',
          pathname: '',
          protocol: '',
          search: '',
      },
      history: {
          replaceState: function () { },
          pushState: function () { },
          go: function () { },
          back: function () { },
      },
      CustomEvent: function CustomEvent() {
          return this;
      },
      addEventListener: function () { },
      removeEventListener: function () { },
      getComputedStyle: function () {
          return {
              getPropertyValue: function () {
                  return '';
              },
          };
      },
      Image: function () { },
      Date: function () { },
      screen: {},
      setTimeout: function () { },
      clearTimeout: function () { },
      matchMedia: function () {
          return {};
      },
      requestAnimationFrame: function (callback) {
          if (typeof setTimeout === 'undefined') {
              callback();
              return null;
          }
          return setTimeout(callback, 0);
      },
      cancelAnimationFrame: function (id) {
          if (typeof setTimeout === 'undefined') {
              return;
          }
          clearTimeout(id);
      },
  };
  function getWindow() {
      var win = typeof window !== 'undefined' ? window : {};
      extend$1(win, ssrWindow);
      return win;
  }

  /**
   * Dom7 3.0.0
   * Minimalistic JavaScript library for DOM manipulation, with a jQuery-compatible API
   * https://framework7.io/docs/dom7.html
   *
   * Copyright 2020, Vladimir Kharlampidi
   *
   * Licensed under MIT
   *
   * Released on: November 9, 2020
   */

  function _inheritsLoose$6(subClass, superClass) {
    subClass.prototype = Object.create(superClass.prototype);
    subClass.prototype.constructor = subClass;
    subClass.__proto__ = superClass;
  }

  function _getPrototypeOf$3(o) {
    _getPrototypeOf$3 = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
      return o.__proto__ || Object.getPrototypeOf(o);
    };
    return _getPrototypeOf$3(o);
  }

  function _setPrototypeOf$6(o, p) {
    _setPrototypeOf$6 = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
      o.__proto__ = p;
      return o;
    };

    return _setPrototypeOf$6(o, p);
  }

  function _isNativeReflectConstruct$3() {
    if (typeof Reflect === "undefined" || !Reflect.construct) return false;
    if (Reflect.construct.sham) return false;
    if (typeof Proxy === "function") return true;

    try {
      Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));
      return true;
    } catch (e) {
      return false;
    }
  }

  function _construct$3(Parent, args, Class) {
    if (_isNativeReflectConstruct$3()) {
      _construct$3 = Reflect.construct;
    } else {
      _construct$3 = function _construct(Parent, args, Class) {
        var a = [null];
        a.push.apply(a, args);
        var Constructor = Function.bind.apply(Parent, a);
        var instance = new Constructor();
        if (Class) _setPrototypeOf$6(instance, Class.prototype);
        return instance;
      };
    }

    return _construct$3.apply(null, arguments);
  }

  function _isNativeFunction$3(fn) {
    return Function.toString.call(fn).indexOf("[native code]") !== -1;
  }

  function _wrapNativeSuper$3(Class) {
    var _cache = typeof Map === "function" ? new Map() : undefined;

    _wrapNativeSuper$3 = function _wrapNativeSuper(Class) {
      if (Class === null || !_isNativeFunction$3(Class)) return Class;

      if (typeof Class !== "function") {
        throw new TypeError("Super expression must either be null or a function");
      }

      if (typeof _cache !== "undefined") {
        if (_cache.has(Class)) return _cache.get(Class);

        _cache.set(Class, Wrapper);
      }

      function Wrapper() {
        return _construct$3(Class, arguments, _getPrototypeOf$3(this).constructor);
      }

      Wrapper.prototype = Object.create(Class.prototype, {
        constructor: {
          value: Wrapper,
          enumerable: false,
          writable: true,
          configurable: true
        }
      });
      return _setPrototypeOf$6(Wrapper, Class);
    };

    return _wrapNativeSuper$3(Class);
  }

  function _assertThisInitialized$1(self) {
    if (self === void 0) {
      throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }

    return self;
  }

  /* eslint-disable no-proto */
  function makeReactive(obj) {
    var proto = obj.__proto__;
    Object.defineProperty(obj, '__proto__', {
      get: function get() {
        return proto;
      },
      set: function set(value) {
        proto.__proto__ = value;
      }
    });
  }

  var Dom7 = /*#__PURE__*/function (_Array) {
    _inheritsLoose$6(Dom7, _Array);

    function Dom7(items) {
      var _this;

      _this = _Array.call.apply(_Array, [this].concat(items)) || this;
      makeReactive(_assertThisInitialized$1(_this));
      return _this;
    }

    return Dom7;
  }( /*#__PURE__*/_wrapNativeSuper$3(Array));

  function arrayFlat(arr) {
    if (arr === void 0) {
      arr = [];
    }

    var res = [];
    arr.forEach(function (el) {
      if (Array.isArray(el)) {
        res.push.apply(res, arrayFlat(el));
      } else {
        res.push(el);
      }
    });
    return res;
  }
  function arrayFilter(arr, callback) {
    return Array.prototype.filter.call(arr, callback);
  }
  function arrayUnique(arr) {
    var uniqueArray = [];

    for (var i = 0; i < arr.length; i += 1) {
      if (uniqueArray.indexOf(arr[i]) === -1) uniqueArray.push(arr[i]);
    }

    return uniqueArray;
  }
  function toCamelCase(string) {
    return string.toLowerCase().replace(/-(.)/g, function (match, group) {
      return group.toUpperCase();
    });
  }

  function qsa(selector, context) {
    if (typeof selector !== 'string') {
      return [selector];
    }

    var a = [];
    var res = context.querySelectorAll(selector);

    for (var i = 0; i < res.length; i += 1) {
      a.push(res[i]);
    }

    return a;
  }

  function $$6(selector, context) {
    var window = getWindow();
    var document = getDocument();
    var arr = [];

    if (!context && selector instanceof Dom7) {
      return selector;
    }

    if (!selector) {
      return new Dom7(arr);
    }

    if (typeof selector === 'string') {
      var html = selector.trim();

      if (html.indexOf('<') >= 0 && html.indexOf('>') >= 0) {
        var toCreate = 'div';
        if (html.indexOf('<li') === 0) toCreate = 'ul';
        if (html.indexOf('<tr') === 0) toCreate = 'tbody';
        if (html.indexOf('<td') === 0 || html.indexOf('<th') === 0) toCreate = 'tr';
        if (html.indexOf('<tbody') === 0) toCreate = 'table';
        if (html.indexOf('<option') === 0) toCreate = 'select';
        var tempParent = document.createElement(toCreate);
        tempParent.innerHTML = html;

        for (var i = 0; i < tempParent.childNodes.length; i += 1) {
          arr.push(tempParent.childNodes[i]);
        }
      } else {
        arr = qsa(selector.trim(), context || document);
      } // arr = qsa(selector, document);

    } else if (selector.nodeType || selector === window || selector === document) {
      arr.push(selector);
    } else if (Array.isArray(selector)) {
      if (selector instanceof Dom7) return selector;
      arr = selector;
    }

    return new Dom7(arrayUnique(arr));
  }

  $$6.fn = Dom7.prototype;

  function addClass() {
    for (var _len = arguments.length, classes = new Array(_len), _key = 0; _key < _len; _key++) {
      classes[_key] = arguments[_key];
    }

    var classNames = arrayFlat(classes.map(function (c) {
      return c.split(' ');
    }));
    this.forEach(function (el) {
      var _el$classList;

      (_el$classList = el.classList).add.apply(_el$classList, classNames);
    });
    return this;
  }

  function removeClass() {
    for (var _len2 = arguments.length, classes = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
      classes[_key2] = arguments[_key2];
    }

    var classNames = arrayFlat(classes.map(function (c) {
      return c.split(' ');
    }));
    this.forEach(function (el) {
      var _el$classList2;

      (_el$classList2 = el.classList).remove.apply(_el$classList2, classNames);
    });
    return this;
  }

  function hasClass() {
    for (var _len4 = arguments.length, classes = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {
      classes[_key4] = arguments[_key4];
    }

    var classNames = arrayFlat(classes.map(function (c) {
      return c.split(' ');
    }));
    return arrayFilter(this, function (el) {
      return classNames.filter(function (className) {
        return el.classList.contains(className);
      }).length > 0;
    }).length > 0;
  }

  function attr(attrs, value) {
    if (arguments.length === 1 && typeof attrs === 'string') {
      // Get attr
      if (this[0]) return this[0].getAttribute(attrs);
      return undefined;
    } // Set attrs


    for (var i = 0; i < this.length; i += 1) {
      if (arguments.length === 2) {
        // String
        this[i].setAttribute(attrs, value);
      } else {
        // Object
        for (var attrName in attrs) {
          this[i][attrName] = attrs[attrName];
          this[i].setAttribute(attrName, attrs[attrName]);
        }
      }
    }

    return this;
  }

  function removeAttr(attr) {
    for (var i = 0; i < this.length; i += 1) {
      this[i].removeAttribute(attr);
    }

    return this;
  }

  function dataset() {
    var el = this[0];
    if (!el) return undefined;
    var dataset = {}; // eslint-disable-line

    if (el.dataset) {
      for (var dataKey in el.dataset) {
        dataset[dataKey] = el.dataset[dataKey];
      }
    } else {
      for (var i = 0; i < el.attributes.length; i += 1) {
        var _attr = el.attributes[i];

        if (_attr.name.indexOf('data-') >= 0) {
          dataset[toCamelCase(_attr.name.split('data-')[1])] = _attr.value;
        }
      }
    }

    for (var key in dataset) {
      if (dataset[key] === 'false') dataset[key] = false;else if (dataset[key] === 'true') dataset[key] = true;else if (parseFloat(dataset[key]) === dataset[key] * 1) dataset[key] *= 1;
    }

    return dataset;
  }

  function val(value) {
    if (typeof value === 'undefined') {
      // get value
      var el = this[0];
      if (!el) return undefined;

      if (el.multiple && el.nodeName.toLowerCase() === 'select') {
        var values = [];

        for (var i = 0; i < el.selectedOptions.length; i += 1) {
          values.push(el.selectedOptions[i].value);
        }

        return values;
      }

      return el.value;
    } // set value


    for (var _i = 0; _i < this.length; _i += 1) {
      var _el = this[_i];

      if (Array.isArray(value) && _el.multiple && _el.nodeName.toLowerCase() === 'select') {
        for (var j = 0; j < _el.options.length; j += 1) {
          _el.options[j].selected = value.indexOf(_el.options[j].value) >= 0;
        }
      } else {
        _el.value = value;
      }
    }

    return this;
  }

  function on$4() {
    for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {
      args[_key5] = arguments[_key5];
    }

    var eventType = args[0],
        targetSelector = args[1],
        listener = args[2],
        capture = args[3];

    if (typeof args[1] === 'function') {
      eventType = args[0];
      listener = args[1];
      capture = args[2];
      targetSelector = undefined;
    }

    if (!capture) capture = false;

    function handleLiveEvent(e) {
      var target = e.target;
      if (!target) return;
      var eventData = e.target.dom7EventData || [];

      if (eventData.indexOf(e) < 0) {
        eventData.unshift(e);
      }

      if ($$6(target).is(targetSelector)) listener.apply(target, eventData);else {
        var _parents = $$6(target).parents(); // eslint-disable-line


        for (var k = 0; k < _parents.length; k += 1) {
          if ($$6(_parents[k]).is(targetSelector)) listener.apply(_parents[k], eventData);
        }
      }
    }

    function handleEvent(e) {
      var eventData = e && e.target ? e.target.dom7EventData || [] : [];

      if (eventData.indexOf(e) < 0) {
        eventData.unshift(e);
      }

      listener.apply(this, eventData);
    }

    var events = eventType.split(' ');
    var j;

    for (var i = 0; i < this.length; i += 1) {
      var el = this[i];

      if (!targetSelector) {
        for (j = 0; j < events.length; j += 1) {
          var event = events[j];
          if (!el.dom7Listeners) el.dom7Listeners = {};
          if (!el.dom7Listeners[event]) el.dom7Listeners[event] = [];
          el.dom7Listeners[event].push({
            listener: listener,
            proxyListener: handleEvent
          });
          el.addEventListener(event, handleEvent, capture);
        }
      } else {
        // Live events
        for (j = 0; j < events.length; j += 1) {
          var _event = events[j];
          if (!el.dom7LiveListeners) el.dom7LiveListeners = {};
          if (!el.dom7LiveListeners[_event]) el.dom7LiveListeners[_event] = [];

          el.dom7LiveListeners[_event].push({
            listener: listener,
            proxyListener: handleLiveEvent
          });

          el.addEventListener(_event, handleLiveEvent, capture);
        }
      }
    }

    return this;
  }

  function off() {
    for (var _len6 = arguments.length, args = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {
      args[_key6] = arguments[_key6];
    }

    var eventType = args[0],
        targetSelector = args[1],
        listener = args[2],
        capture = args[3];

    if (typeof args[1] === 'function') {
      eventType = args[0];
      listener = args[1];
      capture = args[2];
      targetSelector = undefined;
    }

    if (!capture) capture = false;
    var events = eventType.split(' ');

    for (var i = 0; i < events.length; i += 1) {
      var event = events[i];

      for (var j = 0; j < this.length; j += 1) {
        var el = this[j];
        var handlers = void 0;

        if (!targetSelector && el.dom7Listeners) {
          handlers = el.dom7Listeners[event];
        } else if (targetSelector && el.dom7LiveListeners) {
          handlers = el.dom7LiveListeners[event];
        }

        if (handlers && handlers.length) {
          for (var k = handlers.length - 1; k >= 0; k -= 1) {
            var handler = handlers[k];

            if (listener && handler.listener === listener) {
              el.removeEventListener(event, handler.proxyListener, capture);
              handlers.splice(k, 1);
            } else if (listener && handler.listener && handler.listener.dom7proxy && handler.listener.dom7proxy === listener) {
              el.removeEventListener(event, handler.proxyListener, capture);
              handlers.splice(k, 1);
            } else if (!listener) {
              el.removeEventListener(event, handler.proxyListener, capture);
              handlers.splice(k, 1);
            }
          }
        }
      }
    }

    return this;
  }

  function width() {
    var window = getWindow();

    if (this[0] === window) {
      return window.innerWidth;
    }

    if (this.length > 0) {
      return parseFloat(this.css('width'));
    }

    return null;
  }

  function height() {
    var window = getWindow();

    if (this[0] === window) {
      return window.innerHeight;
    }

    if (this.length > 0) {
      return parseFloat(this.css('height'));
    }

    return null;
  }

  function offset() {
    if (this.length > 0) {
      var window = getWindow();
      var document = getDocument();
      var el = this[0];
      var box = el.getBoundingClientRect();
      var body = document.body;
      var clientTop = el.clientTop || body.clientTop || 0;
      var clientLeft = el.clientLeft || body.clientLeft || 0;
      var scrollTop = el === window ? window.scrollY : el.scrollTop;
      var scrollLeft = el === window ? window.scrollX : el.scrollLeft;
      return {
        top: box.top + scrollTop - clientTop,
        left: box.left + scrollLeft - clientLeft
      };
    }

    return null;
  }

  function hide() {
    for (var i = 0; i < this.length; i += 1) {
      this[i].style.display = 'none';
    }

    return this;
  }

  function show() {
    var window = getWindow();

    for (var i = 0; i < this.length; i += 1) {
      var el = this[i];

      if (el.style.display === 'none') {
        el.style.display = '';
      }

      if (window.getComputedStyle(el, null).getPropertyValue('display') === 'none') {
        // Still not visible
        el.style.display = 'block';
      }
    }

    return this;
  }

  function css(props, value) {
    var window = getWindow();
    var i;

    if (arguments.length === 1) {
      if (typeof props === 'string') {
        // .css('width')
        if (this[0]) return window.getComputedStyle(this[0], null).getPropertyValue(props);
      } else {
        // .css({ width: '100px' })
        for (i = 0; i < this.length; i += 1) {
          for (var _prop in props) {
            this[i].style[_prop] = props[_prop];
          }
        }

        return this;
      }
    }

    if (arguments.length === 2 && typeof props === 'string') {
      // .css('width', '100px')
      for (i = 0; i < this.length; i += 1) {
        this[i].style[props] = value;
      }

      return this;
    }

    return this;
  }

  function each(callback) {
    if (!callback) return this;
    this.forEach(function (el, index) {
      callback.apply(el, [el, index]);
    });
    return this;
  }

  function html(html) {
    if (typeof html === 'undefined') {
      return this[0] ? this[0].innerHTML : null;
    }

    for (var i = 0; i < this.length; i += 1) {
      this[i].innerHTML = html;
    }

    return this;
  }

  function text(text) {
    if (typeof text === 'undefined') {
      return this[0] ? this[0].textContent.trim() : null;
    }

    for (var i = 0; i < this.length; i += 1) {
      this[i].textContent = text;
    }

    return this;
  }

  function is$1(selector) {
    var window = getWindow();
    var document = getDocument();
    var el = this[0];
    var compareWith;
    var i;
    if (!el || typeof selector === 'undefined') return false;

    if (typeof selector === 'string') {
      if (el.matches) return el.matches(selector);
      if (el.webkitMatchesSelector) return el.webkitMatchesSelector(selector);
      if (el.msMatchesSelector) return el.msMatchesSelector(selector);
      compareWith = $$6(selector);

      for (i = 0; i < compareWith.length; i += 1) {
        if (compareWith[i] === el) return true;
      }

      return false;
    }

    if (selector === document) {
      return el === document;
    }

    if (selector === window) {
      return el === window;
    }

    if (selector.nodeType || selector instanceof Dom7) {
      compareWith = selector.nodeType ? [selector] : selector;

      for (i = 0; i < compareWith.length; i += 1) {
        if (compareWith[i] === el) return true;
      }

      return false;
    }

    return false;
  }

  function append() {
    var newChild;
    var document = getDocument();

    for (var k = 0; k < arguments.length; k += 1) {
      newChild = k < 0 || arguments.length <= k ? undefined : arguments[k];

      for (var i = 0; i < this.length; i += 1) {
        if (typeof newChild === 'string') {
          var tempDiv = document.createElement('div');
          tempDiv.innerHTML = newChild;

          while (tempDiv.firstChild) {
            this[i].appendChild(tempDiv.firstChild);
          }
        } else if (newChild instanceof Dom7) {
          for (var j = 0; j < newChild.length; j += 1) {
            this[i].appendChild(newChild[j]);
          }
        } else {
          this[i].appendChild(newChild);
        }
      }
    }

    return this;
  }

  function prepend(newChild) {
    var document = getDocument();
    var i;
    var j;

    for (i = 0; i < this.length; i += 1) {
      if (typeof newChild === 'string') {
        var tempDiv = document.createElement('div');
        tempDiv.innerHTML = newChild;

        for (j = tempDiv.childNodes.length - 1; j >= 0; j -= 1) {
          this[i].insertBefore(tempDiv.childNodes[j], this[i].childNodes[0]);
        }
      } else if (newChild instanceof Dom7) {
        for (j = 0; j < newChild.length; j += 1) {
          this[i].insertBefore(newChild[j], this[i].childNodes[0]);
        }
      } else {
        this[i].insertBefore(newChild, this[i].childNodes[0]);
      }
    }

    return this;
  }

  function parent(selector) {
    var parents = []; // eslint-disable-line

    for (var i = 0; i < this.length; i += 1) {
      if (this[i].parentNode !== null) {
        if (selector) {
          if ($$6(this[i].parentNode).is(selector)) parents.push(this[i].parentNode);
        } else {
          parents.push(this[i].parentNode);
        }
      }
    }

    return $$6(parents);
  }

  function parents(selector) {
    var parents = []; // eslint-disable-line

    for (var i = 0; i < this.length; i += 1) {
      var _parent = this[i].parentNode; // eslint-disable-line

      while (_parent) {
        if (selector) {
          if ($$6(_parent).is(selector)) parents.push(_parent);
        } else {
          parents.push(_parent);
        }

        _parent = _parent.parentNode;
      }
    }

    return $$6(parents);
  }

  function find(selector) {
    var foundElements = [];

    for (var i = 0; i < this.length; i += 1) {
      var found = this[i].querySelectorAll(selector);

      for (var j = 0; j < found.length; j += 1) {
        foundElements.push(found[j]);
      }
    }

    return $$6(foundElements);
  }

  function children(selector) {
    var children = []; // eslint-disable-line

    for (var i = 0; i < this.length; i += 1) {
      var childNodes = this[i].children;

      for (var j = 0; j < childNodes.length; j += 1) {
        if (!selector || $$6(childNodes[j]).is(selector)) {
          children.push(childNodes[j]);
        }
      }
    }

    return $$6(children);
  }

  function remove() {
    for (var i = 0; i < this.length; i += 1) {
      if (this[i].parentNode) this[i].parentNode.removeChild(this[i]);
    }

    return this;
  }

  var noTrigger = 'resize scroll'.split(' ');

  function shortcut(name) {
    function eventHandler() {
      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      if (typeof args[0] === 'undefined') {
        for (var i = 0; i < this.length; i += 1) {
          if (noTrigger.indexOf(name) < 0) {
            if (name in this[i]) this[i][name]();else {
              $$6(this[i]).trigger(name);
            }
          }
        }

        return this;
      }

      return this.on.apply(this, [name].concat(args));
    }

    return eventHandler;
  }

  var click = shortcut('click');
  var focus = shortcut('focus');

  /**
   * lodash (Custom Build) <https://lodash.com/>
   * Build: `lodash modularize exports="npm" -o ./`
   * Copyright jQuery Foundation and other contributors <https://jquery.org/>
   * Released under MIT license <https://lodash.com/license>
   * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
   * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
   */
  /** Used as references for various `Number` constants. */
  var MAX_SAFE_INTEGER = 9007199254740991;

  /** `Object#toString` result references. */
  var argsTag = '[object Arguments]',
      funcTag = '[object Function]',
      genTag = '[object GeneratorFunction]';

  /** Used to detect unsigned integer values. */
  var reIsUint = /^(?:0|[1-9]\d*)$/;

  /**
   * A specialized version of `_.forEach` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {Array} Returns `array`.
   */
  function arrayEach(array, iteratee) {
    var index = -1,
        length = array ? array.length : 0;

    while (++index < length) {
      if (iteratee(array[index], index, array) === false) {
        break;
      }
    }
    return array;
  }

  /**
   * The base implementation of `_.times` without support for iteratee shorthands
   * or max array length checks.
   *
   * @private
   * @param {number} n The number of times to invoke `iteratee`.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {Array} Returns the array of results.
   */
  function baseTimes(n, iteratee) {
    var index = -1,
        result = Array(n);

    while (++index < n) {
      result[index] = iteratee(index);
    }
    return result;
  }

  /**
   * Creates a unary function that invokes `func` with its argument transformed.
   *
   * @private
   * @param {Function} func The function to wrap.
   * @param {Function} transform The argument transform.
   * @returns {Function} Returns the new function.
   */
  function overArg(func, transform) {
    return function(arg) {
      return func(transform(arg));
    };
  }

  /** Used for built-in method references. */
  var objectProto$3 = Object.prototype;

  /** Used to check objects for own properties. */
  var hasOwnProperty$1 = objectProto$3.hasOwnProperty;

  /**
   * Used to resolve the
   * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
   * of values.
   */
  var objectToString$3 = objectProto$3.toString;

  /** Built-in value references. */
  var propertyIsEnumerable = objectProto$3.propertyIsEnumerable;

  /* Built-in method references for those with the same name as other `lodash` methods. */
  var nativeKeys = overArg(Object.keys, Object);

  /**
   * Creates an array of the enumerable property names of the array-like `value`.
   *
   * @private
   * @param {*} value The value to query.
   * @param {boolean} inherited Specify returning inherited property names.
   * @returns {Array} Returns the array of property names.
   */
  function arrayLikeKeys(value, inherited) {
    // Safari 8.1 makes `arguments.callee` enumerable in strict mode.
    // Safari 9 makes `arguments.length` enumerable in strict mode.
    var result = (isArray(value) || isArguments(value))
      ? baseTimes(value.length, String)
      : [];

    var length = result.length,
        skipIndexes = !!length;

    for (var key in value) {
      if ((inherited || hasOwnProperty$1.call(value, key)) &&
          !(skipIndexes && (key == 'length' || isIndex(key, length)))) {
        result.push(key);
      }
    }
    return result;
  }

  /**
   * The base implementation of `_.forEach` without support for iteratee shorthands.
   *
   * @private
   * @param {Array|Object} collection The collection to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {Array|Object} Returns `collection`.
   */
  var baseEach = createBaseEach(baseForOwn);

  /**
   * The base implementation of `baseForOwn` which iterates over `object`
   * properties returned by `keysFunc` and invokes `iteratee` for each property.
   * Iteratee functions may exit iteration early by explicitly returning `false`.
   *
   * @private
   * @param {Object} object The object to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @param {Function} keysFunc The function to get the keys of `object`.
   * @returns {Object} Returns `object`.
   */
  var baseFor = createBaseFor();

  /**
   * The base implementation of `_.forOwn` without support for iteratee shorthands.
   *
   * @private
   * @param {Object} object The object to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {Object} Returns `object`.
   */
  function baseForOwn(object, iteratee) {
    return object && baseFor(object, iteratee, keys);
  }

  /**
   * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.
   *
   * @private
   * @param {Object} object The object to query.
   * @returns {Array} Returns the array of property names.
   */
  function baseKeys(object) {
    if (!isPrototype(object)) {
      return nativeKeys(object);
    }
    var result = [];
    for (var key in Object(object)) {
      if (hasOwnProperty$1.call(object, key) && key != 'constructor') {
        result.push(key);
      }
    }
    return result;
  }

  /**
   * Creates a `baseEach` or `baseEachRight` function.
   *
   * @private
   * @param {Function} eachFunc The function to iterate over a collection.
   * @param {boolean} [fromRight] Specify iterating from right to left.
   * @returns {Function} Returns the new base function.
   */
  function createBaseEach(eachFunc, fromRight) {
    return function(collection, iteratee) {
      if (collection == null) {
        return collection;
      }
      if (!isArrayLike(collection)) {
        return eachFunc(collection, iteratee);
      }
      var length = collection.length,
          index = fromRight ? length : -1,
          iterable = Object(collection);

      while ((fromRight ? index-- : ++index < length)) {
        if (iteratee(iterable[index], index, iterable) === false) {
          break;
        }
      }
      return collection;
    };
  }

  /**
   * Creates a base function for methods like `_.forIn` and `_.forOwn`.
   *
   * @private
   * @param {boolean} [fromRight] Specify iterating from right to left.
   * @returns {Function} Returns the new base function.
   */
  function createBaseFor(fromRight) {
    return function(object, iteratee, keysFunc) {
      var index = -1,
          iterable = Object(object),
          props = keysFunc(object),
          length = props.length;

      while (length--) {
        var key = props[fromRight ? length : ++index];
        if (iteratee(iterable[key], key, iterable) === false) {
          break;
        }
      }
      return object;
    };
  }

  /**
   * Checks if `value` is a valid array-like index.
   *
   * @private
   * @param {*} value The value to check.
   * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.
   * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.
   */
  function isIndex(value, length) {
    length = length == null ? MAX_SAFE_INTEGER : length;
    return !!length &&
      (typeof value == 'number' || reIsUint.test(value)) &&
      (value > -1 && value % 1 == 0 && value < length);
  }

  /**
   * Checks if `value` is likely a prototype object.
   *
   * @private
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.
   */
  function isPrototype(value) {
    var Ctor = value && value.constructor,
        proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto$3;

    return value === proto;
  }

  /**
   * Iterates over elements of `collection` and invokes `iteratee` for each element.
   * The iteratee is invoked with three arguments: (value, index|key, collection).
   * Iteratee functions may exit iteration early by explicitly returning `false`.
   *
   * **Note:** As with other "Collections" methods, objects with a "length"
   * property are iterated like arrays. To avoid this behavior use `_.forIn`
   * or `_.forOwn` for object iteration.
   *
   * @static
   * @memberOf _
   * @since 0.1.0
   * @alias each
   * @category Collection
   * @param {Array|Object} collection The collection to iterate over.
   * @param {Function} [iteratee=_.identity] The function invoked per iteration.
   * @returns {Array|Object} Returns `collection`.
   * @see _.forEachRight
   * @example
   *
   * _([1, 2]).forEach(function(value) {
   *   console.log(value);
   * });
   * // => Logs `1` then `2`.
   *
   * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {
   *   console.log(key);
   * });
   * // => Logs 'a' then 'b' (iteration order is not guaranteed).
   */
  function forEach(collection, iteratee) {
    var func = isArray(collection) ? arrayEach : baseEach;
    return func(collection, typeof iteratee == 'function' ? iteratee : identity);
  }

  /**
   * Checks if `value` is likely an `arguments` object.
   *
   * @static
   * @memberOf _
   * @since 0.1.0
   * @category Lang
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is an `arguments` object,
   *  else `false`.
   * @example
   *
   * _.isArguments(function() { return arguments; }());
   * // => true
   *
   * _.isArguments([1, 2, 3]);
   * // => false
   */
  function isArguments(value) {
    // Safari 8.1 makes `arguments.callee` enumerable in strict mode.
    return isArrayLikeObject(value) && hasOwnProperty$1.call(value, 'callee') &&
      (!propertyIsEnumerable.call(value, 'callee') || objectToString$3.call(value) == argsTag);
  }

  /**
   * Checks if `value` is classified as an `Array` object.
   *
   * @static
   * @memberOf _
   * @since 0.1.0
   * @category Lang
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is an array, else `false`.
   * @example
   *
   * _.isArray([1, 2, 3]);
   * // => true
   *
   * _.isArray(document.body.children);
   * // => false
   *
   * _.isArray('abc');
   * // => false
   *
   * _.isArray(_.noop);
   * // => false
   */
  var isArray = Array.isArray;

  /**
   * Checks if `value` is array-like. A value is considered array-like if it's
   * not a function and has a `value.length` that's an integer greater than or
   * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.
   *
   * @static
   * @memberOf _
   * @since 4.0.0
   * @category Lang
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is array-like, else `false`.
   * @example
   *
   * _.isArrayLike([1, 2, 3]);
   * // => true
   *
   * _.isArrayLike(document.body.children);
   * // => true
   *
   * _.isArrayLike('abc');
   * // => true
   *
   * _.isArrayLike(_.noop);
   * // => false
   */
  function isArrayLike(value) {
    return value != null && isLength(value.length) && !isFunction(value);
  }

  /**
   * This method is like `_.isArrayLike` except that it also checks if `value`
   * is an object.
   *
   * @static
   * @memberOf _
   * @since 4.0.0
   * @category Lang
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is an array-like object,
   *  else `false`.
   * @example
   *
   * _.isArrayLikeObject([1, 2, 3]);
   * // => true
   *
   * _.isArrayLikeObject(document.body.children);
   * // => true
   *
   * _.isArrayLikeObject('abc');
   * // => false
   *
   * _.isArrayLikeObject(_.noop);
   * // => false
   */
  function isArrayLikeObject(value) {
    return isObjectLike$3(value) && isArrayLike(value);
  }

  /**
   * Checks if `value` is classified as a `Function` object.
   *
   * @static
   * @memberOf _
   * @since 0.1.0
   * @category Lang
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is a function, else `false`.
   * @example
   *
   * _.isFunction(_);
   * // => true
   *
   * _.isFunction(/abc/);
   * // => false
   */
  function isFunction(value) {
    // The use of `Object#toString` avoids issues with the `typeof` operator
    // in Safari 8-9 which returns 'object' for typed array and other constructors.
    var tag = isObject$2(value) ? objectToString$3.call(value) : '';
    return tag == funcTag || tag == genTag;
  }

  /**
   * Checks if `value` is a valid array-like length.
   *
   * **Note:** This method is loosely based on
   * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
   *
   * @static
   * @memberOf _
   * @since 4.0.0
   * @category Lang
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.
   * @example
   *
   * _.isLength(3);
   * // => true
   *
   * _.isLength(Number.MIN_VALUE);
   * // => false
   *
   * _.isLength(Infinity);
   * // => false
   *
   * _.isLength('3');
   * // => false
   */
  function isLength(value) {
    return typeof value == 'number' &&
      value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
  }

  /**
   * Checks if `value` is the
   * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
   * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
   *
   * @static
   * @memberOf _
   * @since 0.1.0
   * @category Lang
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is an object, else `false`.
   * @example
   *
   * _.isObject({});
   * // => true
   *
   * _.isObject([1, 2, 3]);
   * // => true
   *
   * _.isObject(_.noop);
   * // => true
   *
   * _.isObject(null);
   * // => false
   */
  function isObject$2(value) {
    var type = typeof value;
    return !!value && (type == 'object' || type == 'function');
  }

  /**
   * Checks if `value` is object-like. A value is object-like if it's not `null`
   * and has a `typeof` result of "object".
   *
   * @static
   * @memberOf _
   * @since 4.0.0
   * @category Lang
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
   * @example
   *
   * _.isObjectLike({});
   * // => true
   *
   * _.isObjectLike([1, 2, 3]);
   * // => true
   *
   * _.isObjectLike(_.noop);
   * // => false
   *
   * _.isObjectLike(null);
   * // => false
   */
  function isObjectLike$3(value) {
    return !!value && typeof value == 'object';
  }

  /**
   * Creates an array of the own enumerable property names of `object`.
   *
   * **Note:** Non-object values are coerced to objects. See the
   * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
   * for more details.
   *
   * @static
   * @since 0.1.0
   * @memberOf _
   * @category Object
   * @param {Object} object The object to query.
   * @returns {Array} Returns the array of property names.
   * @example
   *
   * function Foo() {
   *   this.a = 1;
   *   this.b = 2;
   * }
   *
   * Foo.prototype.c = 3;
   *
   * _.keys(new Foo);
   * // => ['a', 'b'] (iteration order is not guaranteed)
   *
   * _.keys('hi');
   * // => ['0', '1']
   */
  function keys(object) {
    return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);
  }

  /**
   * This method returns the first argument it receives.
   *
   * @static
   * @since 0.1.0
   * @memberOf _
   * @category Util
   * @param {*} value Any value.
   * @returns {*} Returns `value`.
   * @example
   *
   * var object = { 'a': 1 };
   *
   * console.log(_.identity(object) === object);
   * // => true
   */
  function identity(value) {
    return value;
  }

  var lodash_foreach = forEach;

  /**
   * lodash (Custom Build) <https://lodash.com/>
   * Build: `lodash modularize exports="npm" -o ./`
   * Copyright jQuery Foundation and other contributors <https://jquery.org/>
   * Released under MIT license <https://lodash.com/license>
   * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
   * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
   */

  /** Used as the `TypeError` message for "Functions" methods. */
  var FUNC_ERROR_TEXT$1 = 'Expected a function';

  /** Used as references for various `Number` constants. */
  var NAN$1 = 0 / 0;

  /** `Object#toString` result references. */
  var symbolTag$2 = '[object Symbol]';

  /** Used to match leading and trailing whitespace. */
  var reTrim$1 = /^\s+|\s+$/g;

  /** Used to detect bad signed hexadecimal string values. */
  var reIsBadHex$1 = /^[-+]0x[0-9a-f]+$/i;

  /** Used to detect binary string values. */
  var reIsBinary$1 = /^0b[01]+$/i;

  /** Used to detect octal string values. */
  var reIsOctal$1 = /^0o[0-7]+$/i;

  /** Built-in method references without a dependency on `root`. */
  var freeParseInt$1 = parseInt;

  /** Detect free variable `global` from Node.js. */
  var freeGlobal$2 = typeof commonjsGlobal == 'object' && commonjsGlobal && commonjsGlobal.Object === Object && commonjsGlobal;

  /** Detect free variable `self`. */
  var freeSelf$2 = typeof self == 'object' && self && self.Object === Object && self;

  /** Used as a reference to the global object. */
  var root$2 = freeGlobal$2 || freeSelf$2 || Function('return this')();

  /** Used for built-in method references. */
  var objectProto$2 = Object.prototype;

  /**
   * Used to resolve the
   * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
   * of values.
   */
  var objectToString$2 = objectProto$2.toString;

  /* Built-in method references for those with the same name as other `lodash` methods. */
  var nativeMax$1 = Math.max,
      nativeMin$1 = Math.min;

  /**
   * Gets the timestamp of the number of milliseconds that have elapsed since
   * the Unix epoch (1 January 1970 00:00:00 UTC).
   *
   * @static
   * @memberOf _
   * @since 2.4.0
   * @category Date
   * @returns {number} Returns the timestamp.
   * @example
   *
   * _.defer(function(stamp) {
   *   console.log(_.now() - stamp);
   * }, _.now());
   * // => Logs the number of milliseconds it took for the deferred invocation.
   */
  var now$1 = function() {
    return root$2.Date.now();
  };

  /**
   * Creates a debounced function that delays invoking `func` until after `wait`
   * milliseconds have elapsed since the last time the debounced function was
   * invoked. The debounced function comes with a `cancel` method to cancel
   * delayed `func` invocations and a `flush` method to immediately invoke them.
   * Provide `options` to indicate whether `func` should be invoked on the
   * leading and/or trailing edge of the `wait` timeout. The `func` is invoked
   * with the last arguments provided to the debounced function. Subsequent
   * calls to the debounced function return the result of the last `func`
   * invocation.
   *
   * **Note:** If `leading` and `trailing` options are `true`, `func` is
   * invoked on the trailing edge of the timeout only if the debounced function
   * is invoked more than once during the `wait` timeout.
   *
   * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred
   * until to the next tick, similar to `setTimeout` with a timeout of `0`.
   *
   * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
   * for details over the differences between `_.debounce` and `_.throttle`.
   *
   * @static
   * @memberOf _
   * @since 0.1.0
   * @category Function
   * @param {Function} func The function to debounce.
   * @param {number} [wait=0] The number of milliseconds to delay.
   * @param {Object} [options={}] The options object.
   * @param {boolean} [options.leading=false]
   *  Specify invoking on the leading edge of the timeout.
   * @param {number} [options.maxWait]
   *  The maximum time `func` is allowed to be delayed before it's invoked.
   * @param {boolean} [options.trailing=true]
   *  Specify invoking on the trailing edge of the timeout.
   * @returns {Function} Returns the new debounced function.
   * @example
   *
   * // Avoid costly calculations while the window size is in flux.
   * jQuery(window).on('resize', _.debounce(calculateLayout, 150));
   *
   * // Invoke `sendMail` when clicked, debouncing subsequent calls.
   * jQuery(element).on('click', _.debounce(sendMail, 300, {
   *   'leading': true,
   *   'trailing': false
   * }));
   *
   * // Ensure `batchLog` is invoked once after 1 second of debounced calls.
   * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });
   * var source = new EventSource('/stream');
   * jQuery(source).on('message', debounced);
   *
   * // Cancel the trailing debounced invocation.
   * jQuery(window).on('popstate', debounced.cancel);
   */
  function debounce$2(func, wait, options) {
    var lastArgs,
        lastThis,
        maxWait,
        result,
        timerId,
        lastCallTime,
        lastInvokeTime = 0,
        leading = false,
        maxing = false,
        trailing = true;

    if (typeof func != 'function') {
      throw new TypeError(FUNC_ERROR_TEXT$1);
    }
    wait = toNumber$1(wait) || 0;
    if (isObject$1(options)) {
      leading = !!options.leading;
      maxing = 'maxWait' in options;
      maxWait = maxing ? nativeMax$1(toNumber$1(options.maxWait) || 0, wait) : maxWait;
      trailing = 'trailing' in options ? !!options.trailing : trailing;
    }

    function invokeFunc(time) {
      var args = lastArgs,
          thisArg = lastThis;

      lastArgs = lastThis = undefined;
      lastInvokeTime = time;
      result = func.apply(thisArg, args);
      return result;
    }

    function leadingEdge(time) {
      // Reset any `maxWait` timer.
      lastInvokeTime = time;
      // Start the timer for the trailing edge.
      timerId = setTimeout(timerExpired, wait);
      // Invoke the leading edge.
      return leading ? invokeFunc(time) : result;
    }

    function remainingWait(time) {
      var timeSinceLastCall = time - lastCallTime,
          timeSinceLastInvoke = time - lastInvokeTime,
          result = wait - timeSinceLastCall;

      return maxing ? nativeMin$1(result, maxWait - timeSinceLastInvoke) : result;
    }

    function shouldInvoke(time) {
      var timeSinceLastCall = time - lastCallTime,
          timeSinceLastInvoke = time - lastInvokeTime;

      // Either this is the first call, activity has stopped and we're at the
      // trailing edge, the system time has gone backwards and we're treating
      // it as the trailing edge, or we've hit the `maxWait` limit.
      return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||
        (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));
    }

    function timerExpired() {
      var time = now$1();
      if (shouldInvoke(time)) {
        return trailingEdge(time);
      }
      // Restart the timer.
      timerId = setTimeout(timerExpired, remainingWait(time));
    }

    function trailingEdge(time) {
      timerId = undefined;

      // Only invoke if we have `lastArgs` which means `func` has been
      // debounced at least once.
      if (trailing && lastArgs) {
        return invokeFunc(time);
      }
      lastArgs = lastThis = undefined;
      return result;
    }

    function cancel() {
      if (timerId !== undefined) {
        clearTimeout(timerId);
      }
      lastInvokeTime = 0;
      lastArgs = lastCallTime = lastThis = timerId = undefined;
    }

    function flush() {
      return timerId === undefined ? result : trailingEdge(now$1());
    }

    function debounced() {
      var time = now$1(),
          isInvoking = shouldInvoke(time);

      lastArgs = arguments;
      lastThis = this;
      lastCallTime = time;

      if (isInvoking) {
        if (timerId === undefined) {
          return leadingEdge(lastCallTime);
        }
        if (maxing) {
          // Handle invocations in a tight loop.
          timerId = setTimeout(timerExpired, wait);
          return invokeFunc(lastCallTime);
        }
      }
      if (timerId === undefined) {
        timerId = setTimeout(timerExpired, wait);
      }
      return result;
    }
    debounced.cancel = cancel;
    debounced.flush = flush;
    return debounced;
  }

  /**
   * Creates a throttled function that only invokes `func` at most once per
   * every `wait` milliseconds. The throttled function comes with a `cancel`
   * method to cancel delayed `func` invocations and a `flush` method to
   * immediately invoke them. Provide `options` to indicate whether `func`
   * should be invoked on the leading and/or trailing edge of the `wait`
   * timeout. The `func` is invoked with the last arguments provided to the
   * throttled function. Subsequent calls to the throttled function return the
   * result of the last `func` invocation.
   *
   * **Note:** If `leading` and `trailing` options are `true`, `func` is
   * invoked on the trailing edge of the timeout only if the throttled function
   * is invoked more than once during the `wait` timeout.
   *
   * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred
   * until to the next tick, similar to `setTimeout` with a timeout of `0`.
   *
   * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
   * for details over the differences between `_.throttle` and `_.debounce`.
   *
   * @static
   * @memberOf _
   * @since 0.1.0
   * @category Function
   * @param {Function} func The function to throttle.
   * @param {number} [wait=0] The number of milliseconds to throttle invocations to.
   * @param {Object} [options={}] The options object.
   * @param {boolean} [options.leading=true]
   *  Specify invoking on the leading edge of the timeout.
   * @param {boolean} [options.trailing=true]
   *  Specify invoking on the trailing edge of the timeout.
   * @returns {Function} Returns the new throttled function.
   * @example
   *
   * // Avoid excessively updating the position while scrolling.
   * jQuery(window).on('scroll', _.throttle(updatePosition, 100));
   *
   * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.
   * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });
   * jQuery(element).on('click', throttled);
   *
   * // Cancel the trailing throttled invocation.
   * jQuery(window).on('popstate', throttled.cancel);
   */
  function throttle(func, wait, options) {
    var leading = true,
        trailing = true;

    if (typeof func != 'function') {
      throw new TypeError(FUNC_ERROR_TEXT$1);
    }
    if (isObject$1(options)) {
      leading = 'leading' in options ? !!options.leading : leading;
      trailing = 'trailing' in options ? !!options.trailing : trailing;
    }
    return debounce$2(func, wait, {
      'leading': leading,
      'maxWait': wait,
      'trailing': trailing
    });
  }

  /**
   * Checks if `value` is the
   * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
   * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
   *
   * @static
   * @memberOf _
   * @since 0.1.0
   * @category Lang
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is an object, else `false`.
   * @example
   *
   * _.isObject({});
   * // => true
   *
   * _.isObject([1, 2, 3]);
   * // => true
   *
   * _.isObject(_.noop);
   * // => true
   *
   * _.isObject(null);
   * // => false
   */
  function isObject$1(value) {
    var type = typeof value;
    return !!value && (type == 'object' || type == 'function');
  }

  /**
   * Checks if `value` is object-like. A value is object-like if it's not `null`
   * and has a `typeof` result of "object".
   *
   * @static
   * @memberOf _
   * @since 4.0.0
   * @category Lang
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
   * @example
   *
   * _.isObjectLike({});
   * // => true
   *
   * _.isObjectLike([1, 2, 3]);
   * // => true
   *
   * _.isObjectLike(_.noop);
   * // => false
   *
   * _.isObjectLike(null);
   * // => false
   */
  function isObjectLike$2(value) {
    return !!value && typeof value == 'object';
  }

  /**
   * Checks if `value` is classified as a `Symbol` primitive or object.
   *
   * @static
   * @memberOf _
   * @since 4.0.0
   * @category Lang
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.
   * @example
   *
   * _.isSymbol(Symbol.iterator);
   * // => true
   *
   * _.isSymbol('abc');
   * // => false
   */
  function isSymbol$2(value) {
    return typeof value == 'symbol' ||
      (isObjectLike$2(value) && objectToString$2.call(value) == symbolTag$2);
  }

  /**
   * Converts `value` to a number.
   *
   * @static
   * @memberOf _
   * @since 4.0.0
   * @category Lang
   * @param {*} value The value to process.
   * @returns {number} Returns the number.
   * @example
   *
   * _.toNumber(3.2);
   * // => 3.2
   *
   * _.toNumber(Number.MIN_VALUE);
   * // => 5e-324
   *
   * _.toNumber(Infinity);
   * // => Infinity
   *
   * _.toNumber('3.2');
   * // => 3.2
   */
  function toNumber$1(value) {
    if (typeof value == 'number') {
      return value;
    }
    if (isSymbol$2(value)) {
      return NAN$1;
    }
    if (isObject$1(value)) {
      var other = typeof value.valueOf == 'function' ? value.valueOf() : value;
      value = isObject$1(other) ? (other + '') : other;
    }
    if (typeof value != 'string') {
      return value === 0 ? value : +value;
    }
    value = value.replace(reTrim$1, '');
    var isBinary = reIsBinary$1.test(value);
    return (isBinary || reIsOctal$1.test(value))
      ? freeParseInt$1(value.slice(2), isBinary ? 2 : 8)
      : (reIsBadHex$1.test(value) ? NAN$1 : +value);
  }

  var lodash_throttle = throttle;

  function createElement(tagName, options) {
      return document.createElement(tagName, options);
  }
  function createElementNS(namespaceURI, qualifiedName, options) {
      return document.createElementNS(namespaceURI, qualifiedName, options);
  }
  function createTextNode(text) {
      return document.createTextNode(text);
  }
  function createComment(text) {
      return document.createComment(text);
  }
  function insertBefore(parentNode, newNode, referenceNode) {
      parentNode.insertBefore(newNode, referenceNode);
  }
  function removeChild(node, child) {
      node.removeChild(child);
  }
  function appendChild(node, child) {
      node.appendChild(child);
  }
  function parentNode(node) {
      return node.parentNode;
  }
  function nextSibling(node) {
      return node.nextSibling;
  }
  function tagName(elm) {
      return elm.tagName;
  }
  function setTextContent(node, text) {
      node.textContent = text;
  }
  function getTextContent(node) {
      return node.textContent;
  }
  function isElement(node) {
      return node.nodeType === 1;
  }
  function isText(node) {
      return node.nodeType === 3;
  }
  function isComment(node) {
      return node.nodeType === 8;
  }
  const htmlDomApi = {
      createElement,
      createElementNS,
      createTextNode,
      createComment,
      insertBefore,
      removeChild,
      appendChild,
      parentNode,
      nextSibling,
      tagName,
      setTextContent,
      getTextContent,
      isElement,
      isText,
      isComment,
  };

  function vnode(sel, data, children, text, elm) {
      const key = data === undefined ? undefined : data.key;
      return { sel, data, children, text, elm, key };
  }

  const array = Array.isArray;
  function primitive(s) {
      return typeof s === "string" || typeof s === "number";
  }

  function isUndef(s) {
      return s === undefined;
  }
  function isDef(s) {
      return s !== undefined;
  }
  const emptyNode = vnode("", {}, [], undefined, undefined);
  function sameVnode(vnode1, vnode2) {
      var _a, _b;
      const isSameKey = vnode1.key === vnode2.key;
      const isSameIs = ((_a = vnode1.data) === null || _a === void 0 ? void 0 : _a.is) === ((_b = vnode2.data) === null || _b === void 0 ? void 0 : _b.is);
      const isSameSel = vnode1.sel === vnode2.sel;
      return isSameSel && isSameKey && isSameIs;
  }
  function isVnode(vnode) {
      return vnode.sel !== undefined;
  }
  function createKeyToOldIdx(children, beginIdx, endIdx) {
      var _a;
      const map = {};
      for (let i = beginIdx; i <= endIdx; ++i) {
          const key = (_a = children[i]) === null || _a === void 0 ? void 0 : _a.key;
          if (key !== undefined) {
              map[key] = i;
          }
      }
      return map;
  }
  const hooks = [
      "create",
      "update",
      "remove",
      "destroy",
      "pre",
      "post",
  ];
  function init(modules, domApi) {
      let i;
      let j;
      const cbs = {
          create: [],
          update: [],
          remove: [],
          destroy: [],
          pre: [],
          post: [],
      };
      const api = domApi !== undefined ? domApi : htmlDomApi;
      for (i = 0; i < hooks.length; ++i) {
          cbs[hooks[i]] = [];
          for (j = 0; j < modules.length; ++j) {
              const hook = modules[j][hooks[i]];
              if (hook !== undefined) {
                  cbs[hooks[i]].push(hook);
              }
          }
      }
      function emptyNodeAt(elm) {
          const id = elm.id ? "#" + elm.id : "";
          const c = elm.className ? "." + elm.className.split(" ").join(".") : "";
          return vnode(api.tagName(elm).toLowerCase() + id + c, {}, [], undefined, elm);
      }
      function createRmCb(childElm, listeners) {
          return function rmCb() {
              if (--listeners === 0) {
                  const parent = api.parentNode(childElm);
                  api.removeChild(parent, childElm);
              }
          };
      }
      function createElm(vnode, insertedVnodeQueue) {
          var _a, _b;
          let i;
          let data = vnode.data;
          if (data !== undefined) {
              const init = (_a = data.hook) === null || _a === void 0 ? void 0 : _a.init;
              if (isDef(init)) {
                  init(vnode);
                  data = vnode.data;
              }
          }
          const children = vnode.children;
          const sel = vnode.sel;
          if (sel === "!") {
              if (isUndef(vnode.text)) {
                  vnode.text = "";
              }
              vnode.elm = api.createComment(vnode.text);
          }
          else if (sel !== undefined) {
              // Parse selector
              const hashIdx = sel.indexOf("#");
              const dotIdx = sel.indexOf(".", hashIdx);
              const hash = hashIdx > 0 ? hashIdx : sel.length;
              const dot = dotIdx > 0 ? dotIdx : sel.length;
              const tag = hashIdx !== -1 || dotIdx !== -1
                  ? sel.slice(0, Math.min(hash, dot))
                  : sel;
              const elm = (vnode.elm =
                  isDef(data) && isDef((i = data.ns))
                      ? api.createElementNS(i, tag, data)
                      : api.createElement(tag, data));
              if (hash < dot)
                  elm.setAttribute("id", sel.slice(hash + 1, dot));
              if (dotIdx > 0)
                  elm.setAttribute("class", sel.slice(dot + 1).replace(/\./g, " "));
              for (i = 0; i < cbs.create.length; ++i)
                  cbs.create[i](emptyNode, vnode);
              if (array(children)) {
                  for (i = 0; i < children.length; ++i) {
                      const ch = children[i];
                      if (ch != null) {
                          api.appendChild(elm, createElm(ch, insertedVnodeQueue));
                      }
                  }
              }
              else if (primitive(vnode.text)) {
                  api.appendChild(elm, api.createTextNode(vnode.text));
              }
              const hook = vnode.data.hook;
              if (isDef(hook)) {
                  (_b = hook.create) === null || _b === void 0 ? void 0 : _b.call(hook, emptyNode, vnode);
                  if (hook.insert) {
                      insertedVnodeQueue.push(vnode);
                  }
              }
          }
          else {
              vnode.elm = api.createTextNode(vnode.text);
          }
          return vnode.elm;
      }
      function addVnodes(parentElm, before, vnodes, startIdx, endIdx, insertedVnodeQueue) {
          for (; startIdx <= endIdx; ++startIdx) {
              const ch = vnodes[startIdx];
              if (ch != null) {
                  api.insertBefore(parentElm, createElm(ch, insertedVnodeQueue), before);
              }
          }
      }
      function invokeDestroyHook(vnode) {
          var _a, _b;
          const data = vnode.data;
          if (data !== undefined) {
              (_b = (_a = data === null || data === void 0 ? void 0 : data.hook) === null || _a === void 0 ? void 0 : _a.destroy) === null || _b === void 0 ? void 0 : _b.call(_a, vnode);
              for (let i = 0; i < cbs.destroy.length; ++i)
                  cbs.destroy[i](vnode);
              if (vnode.children !== undefined) {
                  for (let j = 0; j < vnode.children.length; ++j) {
                      const child = vnode.children[j];
                      if (child != null && typeof child !== "string") {
                          invokeDestroyHook(child);
                      }
                  }
              }
          }
      }
      function removeVnodes(parentElm, vnodes, startIdx, endIdx) {
          var _a, _b;
          for (; startIdx <= endIdx; ++startIdx) {
              let listeners;
              let rm;
              const ch = vnodes[startIdx];
              if (ch != null) {
                  if (isDef(ch.sel)) {
                      invokeDestroyHook(ch);
                      listeners = cbs.remove.length + 1;
                      rm = createRmCb(ch.elm, listeners);
                      for (let i = 0; i < cbs.remove.length; ++i)
                          cbs.remove[i](ch, rm);
                      const removeHook = (_b = (_a = ch === null || ch === void 0 ? void 0 : ch.data) === null || _a === void 0 ? void 0 : _a.hook) === null || _b === void 0 ? void 0 : _b.remove;
                      if (isDef(removeHook)) {
                          removeHook(ch, rm);
                      }
                      else {
                          rm();
                      }
                  }
                  else {
                      // Text node
                      api.removeChild(parentElm, ch.elm);
                  }
              }
          }
      }
      function updateChildren(parentElm, oldCh, newCh, insertedVnodeQueue) {
          let oldStartIdx = 0;
          let newStartIdx = 0;
          let oldEndIdx = oldCh.length - 1;
          let oldStartVnode = oldCh[0];
          let oldEndVnode = oldCh[oldEndIdx];
          let newEndIdx = newCh.length - 1;
          let newStartVnode = newCh[0];
          let newEndVnode = newCh[newEndIdx];
          let oldKeyToIdx;
          let idxInOld;
          let elmToMove;
          let before;
          while (oldStartIdx <= oldEndIdx && newStartIdx <= newEndIdx) {
              if (oldStartVnode == null) {
                  oldStartVnode = oldCh[++oldStartIdx]; // Vnode might have been moved left
              }
              else if (oldEndVnode == null) {
                  oldEndVnode = oldCh[--oldEndIdx];
              }
              else if (newStartVnode == null) {
                  newStartVnode = newCh[++newStartIdx];
              }
              else if (newEndVnode == null) {
                  newEndVnode = newCh[--newEndIdx];
              }
              else if (sameVnode(oldStartVnode, newStartVnode)) {
                  patchVnode(oldStartVnode, newStartVnode, insertedVnodeQueue);
                  oldStartVnode = oldCh[++oldStartIdx];
                  newStartVnode = newCh[++newStartIdx];
              }
              else if (sameVnode(oldEndVnode, newEndVnode)) {
                  patchVnode(oldEndVnode, newEndVnode, insertedVnodeQueue);
                  oldEndVnode = oldCh[--oldEndIdx];
                  newEndVnode = newCh[--newEndIdx];
              }
              else if (sameVnode(oldStartVnode, newEndVnode)) {
                  // Vnode moved right
                  patchVnode(oldStartVnode, newEndVnode, insertedVnodeQueue);
                  api.insertBefore(parentElm, oldStartVnode.elm, api.nextSibling(oldEndVnode.elm));
                  oldStartVnode = oldCh[++oldStartIdx];
                  newEndVnode = newCh[--newEndIdx];
              }
              else if (sameVnode(oldEndVnode, newStartVnode)) {
                  // Vnode moved left
                  patchVnode(oldEndVnode, newStartVnode, insertedVnodeQueue);
                  api.insertBefore(parentElm, oldEndVnode.elm, oldStartVnode.elm);
                  oldEndVnode = oldCh[--oldEndIdx];
                  newStartVnode = newCh[++newStartIdx];
              }
              else {
                  if (oldKeyToIdx === undefined) {
                      oldKeyToIdx = createKeyToOldIdx(oldCh, oldStartIdx, oldEndIdx);
                  }
                  idxInOld = oldKeyToIdx[newStartVnode.key];
                  if (isUndef(idxInOld)) {
                      // New element
                      api.insertBefore(parentElm, createElm(newStartVnode, insertedVnodeQueue), oldStartVnode.elm);
                  }
                  else {
                      elmToMove = oldCh[idxInOld];
                      if (elmToMove.sel !== newStartVnode.sel) {
                          api.insertBefore(parentElm, createElm(newStartVnode, insertedVnodeQueue), oldStartVnode.elm);
                      }
                      else {
                          patchVnode(elmToMove, newStartVnode, insertedVnodeQueue);
                          oldCh[idxInOld] = undefined;
                          api.insertBefore(parentElm, elmToMove.elm, oldStartVnode.elm);
                      }
                  }
                  newStartVnode = newCh[++newStartIdx];
              }
          }
          if (oldStartIdx <= oldEndIdx || newStartIdx <= newEndIdx) {
              if (oldStartIdx > oldEndIdx) {
                  before = newCh[newEndIdx + 1] == null ? null : newCh[newEndIdx + 1].elm;
                  addVnodes(parentElm, before, newCh, newStartIdx, newEndIdx, insertedVnodeQueue);
              }
              else {
                  removeVnodes(parentElm, oldCh, oldStartIdx, oldEndIdx);
              }
          }
      }
      function patchVnode(oldVnode, vnode, insertedVnodeQueue) {
          var _a, _b, _c, _d, _e;
          const hook = (_a = vnode.data) === null || _a === void 0 ? void 0 : _a.hook;
          (_b = hook === null || hook === void 0 ? void 0 : hook.prepatch) === null || _b === void 0 ? void 0 : _b.call(hook, oldVnode, vnode);
          const elm = (vnode.elm = oldVnode.elm);
          const oldCh = oldVnode.children;
          const ch = vnode.children;
          if (oldVnode === vnode)
              return;
          if (vnode.data !== undefined) {
              for (let i = 0; i < cbs.update.length; ++i)
                  cbs.update[i](oldVnode, vnode);
              (_d = (_c = vnode.data.hook) === null || _c === void 0 ? void 0 : _c.update) === null || _d === void 0 ? void 0 : _d.call(_c, oldVnode, vnode);
          }
          if (isUndef(vnode.text)) {
              if (isDef(oldCh) && isDef(ch)) {
                  if (oldCh !== ch)
                      updateChildren(elm, oldCh, ch, insertedVnodeQueue);
              }
              else if (isDef(ch)) {
                  if (isDef(oldVnode.text))
                      api.setTextContent(elm, "");
                  addVnodes(elm, null, ch, 0, ch.length - 1, insertedVnodeQueue);
              }
              else if (isDef(oldCh)) {
                  removeVnodes(elm, oldCh, 0, oldCh.length - 1);
              }
              else if (isDef(oldVnode.text)) {
                  api.setTextContent(elm, "");
              }
          }
          else if (oldVnode.text !== vnode.text) {
              if (isDef(oldCh)) {
                  removeVnodes(elm, oldCh, 0, oldCh.length - 1);
              }
              api.setTextContent(elm, vnode.text);
          }
          (_e = hook === null || hook === void 0 ? void 0 : hook.postpatch) === null || _e === void 0 ? void 0 : _e.call(hook, oldVnode, vnode);
      }
      return function patch(oldVnode, vnode) {
          let i, elm, parent;
          const insertedVnodeQueue = [];
          for (i = 0; i < cbs.pre.length; ++i)
              cbs.pre[i]();
          if (!isVnode(oldVnode)) {
              oldVnode = emptyNodeAt(oldVnode);
          }
          if (sameVnode(oldVnode, vnode)) {
              patchVnode(oldVnode, vnode, insertedVnodeQueue);
          }
          else {
              elm = oldVnode.elm;
              parent = api.parentNode(elm);
              createElm(vnode, insertedVnodeQueue);
              if (parent !== null) {
                  api.insertBefore(parent, vnode.elm, api.nextSibling(elm));
                  removeVnodes(parent, [oldVnode], 0, 0);
              }
          }
          for (i = 0; i < insertedVnodeQueue.length; ++i) {
              insertedVnodeQueue[i].data.hook.insert(insertedVnodeQueue[i]);
          }
          for (i = 0; i < cbs.post.length; ++i)
              cbs.post[i]();
          return vnode;
      };
  }

  function addNS(data, children, sel) {
      data.ns = "http://www.w3.org/2000/svg";
      if (sel !== "foreignObject" && children !== undefined) {
          for (let i = 0; i < children.length; ++i) {
              const childData = children[i].data;
              if (childData !== undefined) {
                  addNS(childData, children[i].children, children[i].sel);
              }
          }
      }
  }
  function h$4(sel, b, c) {
      let data = {};
      let children;
      let text;
      let i;
      if (c !== undefined) {
          if (b !== null) {
              data = b;
          }
          if (array(c)) {
              children = c;
          }
          else if (primitive(c)) {
              text = c;
          }
          else if (c && c.sel) {
              children = [c];
          }
      }
      else if (b !== undefined && b !== null) {
          if (array(b)) {
              children = b;
          }
          else if (primitive(b)) {
              text = b;
          }
          else if (b && b.sel) {
              children = [b];
          }
          else {
              data = b;
          }
      }
      if (children !== undefined) {
          for (i = 0; i < children.length; ++i) {
              if (primitive(children[i]))
                  children[i] = vnode(undefined, undefined, undefined, children[i], undefined);
          }
      }
      if (sel[0] === "s" &&
          sel[1] === "v" &&
          sel[2] === "g" &&
          (sel.length === 3 || sel[3] === "." || sel[3] === "#")) {
          addNS(data, children, sel);
      }
      return vnode(sel, data, children, text, undefined);
  }

  function updateClass(oldVnode, vnode) {
      let cur;
      let name;
      const elm = vnode.elm;
      let oldClass = oldVnode.data.class;
      let klass = vnode.data.class;
      if (!oldClass && !klass)
          return;
      if (oldClass === klass)
          return;
      oldClass = oldClass || {};
      klass = klass || {};
      for (name in oldClass) {
          if (oldClass[name] && !Object.prototype.hasOwnProperty.call(klass, name)) {
              // was `true` and now not provided
              elm.classList.remove(name);
          }
      }
      for (name in klass) {
          cur = klass[name];
          if (cur !== oldClass[name]) {
              elm.classList[cur ? "add" : "remove"](name);
          }
      }
  }
  const classModule = { create: updateClass, update: updateClass };

  const CAPS_REGEX = /[A-Z]/g;
  function updateDataset(oldVnode, vnode) {
      const elm = vnode.elm;
      let oldDataset = oldVnode.data.dataset;
      let dataset = vnode.data.dataset;
      let key;
      if (!oldDataset && !dataset)
          return;
      if (oldDataset === dataset)
          return;
      oldDataset = oldDataset || {};
      dataset = dataset || {};
      const d = elm.dataset;
      for (key in oldDataset) {
          if (!dataset[key]) {
              if (d) {
                  if (key in d) {
                      delete d[key];
                  }
              }
              else {
                  elm.removeAttribute("data-" + key.replace(CAPS_REGEX, "-$&").toLowerCase());
              }
          }
      }
      for (key in dataset) {
          if (oldDataset[key] !== dataset[key]) {
              if (d) {
                  d[key] = dataset[key];
              }
              else {
                  elm.setAttribute("data-" + key.replace(CAPS_REGEX, "-$&").toLowerCase(), dataset[key]);
              }
          }
      }
  }
  const datasetModule = {
      create: updateDataset,
      update: updateDataset,
  };

  function invokeHandler(handler, vnode, event) {
      if (typeof handler === "function") {
          // call function handler
          handler.call(vnode, event, vnode);
      }
      else if (typeof handler === "object") {
          // call multiple handlers
          for (let i = 0; i < handler.length; i++) {
              invokeHandler(handler[i], vnode, event);
          }
      }
  }
  function handleEvent(event, vnode) {
      const name = event.type;
      const on = vnode.data.on;
      // call event handler(s) if exists
      if (on && on[name]) {
          invokeHandler(on[name], vnode, event);
      }
  }
  function createListener() {
      return function handler(event) {
          handleEvent(event, handler.vnode);
      };
  }
  function updateEventListeners(oldVnode, vnode) {
      const oldOn = oldVnode.data.on;
      const oldListener = oldVnode.listener;
      const oldElm = oldVnode.elm;
      const on = vnode && vnode.data.on;
      const elm = (vnode && vnode.elm);
      let name;
      // optimization for reused immutable handlers
      if (oldOn === on) {
          return;
      }
      // remove existing listeners which no longer used
      if (oldOn && oldListener) {
          // if element changed or deleted we remove all existing listeners unconditionally
          if (!on) {
              for (name in oldOn) {
                  // remove listener if element was changed or existing listeners removed
                  oldElm.removeEventListener(name, oldListener, false);
              }
          }
          else {
              for (name in oldOn) {
                  // remove listener if existing listener removed
                  if (!on[name]) {
                      oldElm.removeEventListener(name, oldListener, false);
                  }
              }
          }
      }
      // add new listeners which has not already attached
      if (on) {
          // reuse existing listener or create new
          const listener = (vnode.listener =
              oldVnode.listener || createListener());
          // update vnode for listener
          listener.vnode = vnode;
          // if element changed or added we add all needed listeners unconditionally
          if (!oldOn) {
              for (name in on) {
                  // add listener if element was changed or new listeners added
                  elm.addEventListener(name, listener, false);
              }
          }
          else {
              for (name in on) {
                  // add listener if new listener added
                  if (!oldOn[name]) {
                      elm.addEventListener(name, listener, false);
                  }
              }
          }
      }
  }
  const eventListenersModule = {
      create: updateEventListeners,
      update: updateEventListeners,
      destroy: updateEventListeners,
  };

  function updateProps(oldVnode, vnode) {
      let key;
      let cur;
      let old;
      const elm = vnode.elm;
      let oldProps = oldVnode.data.props;
      let props = vnode.data.props;
      if (!oldProps && !props)
          return;
      if (oldProps === props)
          return;
      oldProps = oldProps || {};
      props = props || {};
      for (key in props) {
          cur = props[key];
          old = oldProps[key];
          if (old !== cur && (key !== "value" || elm[key] !== cur)) {
              elm[key] = cur;
          }
      }
  }
  const propsModule = { create: updateProps, update: updateProps };

  // Bindig `requestAnimationFrame` like this fixes a bug in IE/Edge. See #360 and #409.
  const raf = (typeof window !== "undefined" &&
      window.requestAnimationFrame.bind(window)) ||
      setTimeout;
  const nextFrame = function (fn) {
      raf(function () {
          raf(fn);
      });
  };
  let reflowForced = false;
  function setNextFrame(obj, prop, val) {
      nextFrame(function () {
          obj[prop] = val;
      });
  }
  function updateStyle(oldVnode, vnode) {
      let cur;
      let name;
      const elm = vnode.elm;
      let oldStyle = oldVnode.data.style;
      let style = vnode.data.style;
      if (!oldStyle && !style)
          return;
      if (oldStyle === style)
          return;
      oldStyle = oldStyle || {};
      style = style || {};
      const oldHasDel = "delayed" in oldStyle;
      for (name in oldStyle) {
          if (!style[name]) {
              if (name[0] === "-" && name[1] === "-") {
                  elm.style.removeProperty(name);
              }
              else {
                  elm.style[name] = "";
              }
          }
      }
      for (name in style) {
          cur = style[name];
          if (name === "delayed" && style.delayed) {
              for (const name2 in style.delayed) {
                  cur = style.delayed[name2];
                  if (!oldHasDel || cur !== oldStyle.delayed[name2]) {
                      setNextFrame(elm.style, name2, cur);
                  }
              }
          }
          else if (name !== "remove" && cur !== oldStyle[name]) {
              if (name[0] === "-" && name[1] === "-") {
                  elm.style.setProperty(name, cur);
              }
              else {
                  elm.style[name] = cur;
              }
          }
      }
  }
  function applyDestroyStyle(vnode) {
      let style;
      let name;
      const elm = vnode.elm;
      const s = vnode.data.style;
      if (!s || !(style = s.destroy))
          return;
      for (name in style) {
          elm.style[name] = style[name];
      }
  }
  function applyRemoveStyle(vnode, rm) {
      const s = vnode.data.style;
      if (!s || !s.remove) {
          rm();
          return;
      }
      if (!reflowForced) {
          // eslint-disable-next-line @typescript-eslint/no-unused-expressions
          vnode.elm.offsetLeft;
          reflowForced = true;
      }
      let name;
      const elm = vnode.elm;
      let i = 0;
      const style = s.remove;
      let amount = 0;
      const applied = [];
      for (name in style) {
          applied.push(name);
          elm.style[name] = style[name];
      }
      const compStyle = getComputedStyle(elm);
      const props = compStyle["transition-property"].split(", ");
      for (; i < props.length; ++i) {
          if (applied.indexOf(props[i]) !== -1)
              amount++;
      }
      elm.addEventListener("transitionend", function (ev) {
          if (ev.target === elm)
              --amount;
          if (amount === 0)
              rm();
      });
  }
  function forceReflow() {
      reflowForced = false;
  }
  const styleModule = {
      pre: forceReflow,
      create: updateStyle,
      update: updateStyle,
      destroy: applyDestroyStyle,
      remove: applyRemoveStyle,
  };

  /* eslint-disable @typescript-eslint/no-namespace, import/export */
  function flattenAndFilter(children, flattened) {
      for (const child of children) {
          // filter out falsey children, except 0 since zero can be a valid value e.g inside a chart
          if (child !== undefined &&
              child !== null &&
              child !== false &&
              child !== "") {
              if (Array.isArray(child)) {
                  flattenAndFilter(child, flattened);
              }
              else if (typeof child === "string" ||
                  typeof child === "number" ||
                  typeof child === "boolean") {
                  flattened.push(vnode(undefined, undefined, undefined, String(child), undefined));
              }
              else {
                  flattened.push(child);
              }
          }
      }
      return flattened;
  }
  /**
   * jsx/tsx compatible factory function
   * see: https://www.typescriptlang.org/docs/handbook/jsx.html#factory-functions
   */
  function jsx(tag, data, ...children) {
      const flatChildren = flattenAndFilter(children, []);
      if (typeof tag === "function") {
          // tag is a function component
          return tag(data, flatChildren);
      }
      else {
          if (flatChildren.length === 1 &&
              !flatChildren[0].sel &&
              flatChildren[0].text) {
              // only child is a simple text node, pass as text for a simpler vtree
              return h$4(tag, data, flatChildren[0].text);
          }
          else {
              return h$4(tag, data, flatChildren);
          }
      }
  }
  (function (jsx) {
  })(jsx || (jsx = {}));

  /**
   * lodash (Custom Build) <https://lodash.com/>
   * Build: `lodash modularize exports="npm" -o ./`
   * Copyright jQuery Foundation and other contributors <https://jquery.org/>
   * Released under MIT license <https://lodash.com/license>
   * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
   * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
   */

  /** Used as references for various `Number` constants. */
  var INFINITY = 1 / 0;

  /** `Object#toString` result references. */
  var symbolTag$1 = '[object Symbol]';

  /** Used to match words composed of alphanumeric characters. */
  var reAsciiWord = /[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g;

  /** Used to match Latin Unicode letters (excluding mathematical operators). */
  var reLatin = /[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g;

  /** Used to compose unicode character classes. */
  var rsAstralRange = '\\ud800-\\udfff',
      rsComboMarksRange = '\\u0300-\\u036f\\ufe20-\\ufe23',
      rsComboSymbolsRange = '\\u20d0-\\u20f0',
      rsDingbatRange = '\\u2700-\\u27bf',
      rsLowerRange = 'a-z\\xdf-\\xf6\\xf8-\\xff',
      rsMathOpRange = '\\xac\\xb1\\xd7\\xf7',
      rsNonCharRange = '\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf',
      rsPunctuationRange = '\\u2000-\\u206f',
      rsSpaceRange = ' \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000',
      rsUpperRange = 'A-Z\\xc0-\\xd6\\xd8-\\xde',
      rsVarRange = '\\ufe0e\\ufe0f',
      rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;

  /** Used to compose unicode capture groups. */
  var rsApos = "['\u2019]",
      rsAstral = '[' + rsAstralRange + ']',
      rsBreak = '[' + rsBreakRange + ']',
      rsCombo = '[' + rsComboMarksRange + rsComboSymbolsRange + ']',
      rsDigits = '\\d+',
      rsDingbat = '[' + rsDingbatRange + ']',
      rsLower = '[' + rsLowerRange + ']',
      rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',
      rsFitz = '\\ud83c[\\udffb-\\udfff]',
      rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',
      rsNonAstral = '[^' + rsAstralRange + ']',
      rsRegional = '(?:\\ud83c[\\udde6-\\uddff]){2}',
      rsSurrPair = '[\\ud800-\\udbff][\\udc00-\\udfff]',
      rsUpper = '[' + rsUpperRange + ']',
      rsZWJ = '\\u200d';

  /** Used to compose unicode regexes. */
  var rsLowerMisc = '(?:' + rsLower + '|' + rsMisc + ')',
      rsUpperMisc = '(?:' + rsUpper + '|' + rsMisc + ')',
      rsOptLowerContr = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',
      rsOptUpperContr = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',
      reOptMod = rsModifier + '?',
      rsOptVar = '[' + rsVarRange + ']?',
      rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',
      rsSeq = rsOptVar + reOptMod + rsOptJoin,
      rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq,
      rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';

  /** Used to match apostrophes. */
  var reApos = RegExp(rsApos, 'g');

  /**
   * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and
   * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).
   */
  var reComboMark = RegExp(rsCombo, 'g');

  /** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */
  var reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');

  /** Used to match complex or compound words. */
  var reUnicodeWord = RegExp([
    rsUpper + '?' + rsLower + '+' + rsOptLowerContr + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',
    rsUpperMisc + '+' + rsOptUpperContr + '(?=' + [rsBreak, rsUpper + rsLowerMisc, '$'].join('|') + ')',
    rsUpper + '?' + rsLowerMisc + '+' + rsOptLowerContr,
    rsUpper + '+' + rsOptUpperContr,
    rsDigits,
    rsEmoji
  ].join('|'), 'g');

  /** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */
  var reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboMarksRange + rsComboSymbolsRange + rsVarRange + ']');

  /** Used to detect strings that need a more robust regexp to match words. */
  var reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2,}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;

  /** Used to map Latin Unicode letters to basic Latin letters. */
  var deburredLetters = {
    // Latin-1 Supplement block.
    '\xc0': 'A',  '\xc1': 'A', '\xc2': 'A', '\xc3': 'A', '\xc4': 'A', '\xc5': 'A',
    '\xe0': 'a',  '\xe1': 'a', '\xe2': 'a', '\xe3': 'a', '\xe4': 'a', '\xe5': 'a',
    '\xc7': 'C',  '\xe7': 'c',
    '\xd0': 'D',  '\xf0': 'd',
    '\xc8': 'E',  '\xc9': 'E', '\xca': 'E', '\xcb': 'E',
    '\xe8': 'e',  '\xe9': 'e', '\xea': 'e', '\xeb': 'e',
    '\xcc': 'I',  '\xcd': 'I', '\xce': 'I', '\xcf': 'I',
    '\xec': 'i',  '\xed': 'i', '\xee': 'i', '\xef': 'i',
    '\xd1': 'N',  '\xf1': 'n',
    '\xd2': 'O',  '\xd3': 'O', '\xd4': 'O', '\xd5': 'O', '\xd6': 'O', '\xd8': 'O',
    '\xf2': 'o',  '\xf3': 'o', '\xf4': 'o', '\xf5': 'o', '\xf6': 'o', '\xf8': 'o',
    '\xd9': 'U',  '\xda': 'U', '\xdb': 'U', '\xdc': 'U',
    '\xf9': 'u',  '\xfa': 'u', '\xfb': 'u', '\xfc': 'u',
    '\xdd': 'Y',  '\xfd': 'y', '\xff': 'y',
    '\xc6': 'Ae', '\xe6': 'ae',
    '\xde': 'Th', '\xfe': 'th',
    '\xdf': 'ss',
    // Latin Extended-A block.
    '\u0100': 'A',  '\u0102': 'A', '\u0104': 'A',
    '\u0101': 'a',  '\u0103': 'a', '\u0105': 'a',
    '\u0106': 'C',  '\u0108': 'C', '\u010a': 'C', '\u010c': 'C',
    '\u0107': 'c',  '\u0109': 'c', '\u010b': 'c', '\u010d': 'c',
    '\u010e': 'D',  '\u0110': 'D', '\u010f': 'd', '\u0111': 'd',
    '\u0112': 'E',  '\u0114': 'E', '\u0116': 'E', '\u0118': 'E', '\u011a': 'E',
    '\u0113': 'e',  '\u0115': 'e', '\u0117': 'e', '\u0119': 'e', '\u011b': 'e',
    '\u011c': 'G',  '\u011e': 'G', '\u0120': 'G', '\u0122': 'G',
    '\u011d': 'g',  '\u011f': 'g', '\u0121': 'g', '\u0123': 'g',
    '\u0124': 'H',  '\u0126': 'H', '\u0125': 'h', '\u0127': 'h',
    '\u0128': 'I',  '\u012a': 'I', '\u012c': 'I', '\u012e': 'I', '\u0130': 'I',
    '\u0129': 'i',  '\u012b': 'i', '\u012d': 'i', '\u012f': 'i', '\u0131': 'i',
    '\u0134': 'J',  '\u0135': 'j',
    '\u0136': 'K',  '\u0137': 'k', '\u0138': 'k',
    '\u0139': 'L',  '\u013b': 'L', '\u013d': 'L', '\u013f': 'L', '\u0141': 'L',
    '\u013a': 'l',  '\u013c': 'l', '\u013e': 'l', '\u0140': 'l', '\u0142': 'l',
    '\u0143': 'N',  '\u0145': 'N', '\u0147': 'N', '\u014a': 'N',
    '\u0144': 'n',  '\u0146': 'n', '\u0148': 'n', '\u014b': 'n',
    '\u014c': 'O',  '\u014e': 'O', '\u0150': 'O',
    '\u014d': 'o',  '\u014f': 'o', '\u0151': 'o',
    '\u0154': 'R',  '\u0156': 'R', '\u0158': 'R',
    '\u0155': 'r',  '\u0157': 'r', '\u0159': 'r',
    '\u015a': 'S',  '\u015c': 'S', '\u015e': 'S', '\u0160': 'S',
    '\u015b': 's',  '\u015d': 's', '\u015f': 's', '\u0161': 's',
    '\u0162': 'T',  '\u0164': 'T', '\u0166': 'T',
    '\u0163': 't',  '\u0165': 't', '\u0167': 't',
    '\u0168': 'U',  '\u016a': 'U', '\u016c': 'U', '\u016e': 'U', '\u0170': 'U', '\u0172': 'U',
    '\u0169': 'u',  '\u016b': 'u', '\u016d': 'u', '\u016f': 'u', '\u0171': 'u', '\u0173': 'u',
    '\u0174': 'W',  '\u0175': 'w',
    '\u0176': 'Y',  '\u0177': 'y', '\u0178': 'Y',
    '\u0179': 'Z',  '\u017b': 'Z', '\u017d': 'Z',
    '\u017a': 'z',  '\u017c': 'z', '\u017e': 'z',
    '\u0132': 'IJ', '\u0133': 'ij',
    '\u0152': 'Oe', '\u0153': 'oe',
    '\u0149': "'n", '\u017f': 'ss'
  };

  /** Detect free variable `global` from Node.js. */
  var freeGlobal$1 = typeof commonjsGlobal == 'object' && commonjsGlobal && commonjsGlobal.Object === Object && commonjsGlobal;

  /** Detect free variable `self`. */
  var freeSelf$1 = typeof self == 'object' && self && self.Object === Object && self;

  /** Used as a reference to the global object. */
  var root$1 = freeGlobal$1 || freeSelf$1 || Function('return this')();

  /**
   * A specialized version of `_.reduce` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @param {*} [accumulator] The initial value.
   * @param {boolean} [initAccum] Specify using the first element of `array` as
   *  the initial value.
   * @returns {*} Returns the accumulated value.
   */
  function arrayReduce(array, iteratee, accumulator, initAccum) {
    var index = -1,
        length = array ? array.length : 0;

    if (initAccum && length) {
      accumulator = array[++index];
    }
    while (++index < length) {
      accumulator = iteratee(accumulator, array[index], index, array);
    }
    return accumulator;
  }

  /**
   * Converts an ASCII `string` to an array.
   *
   * @private
   * @param {string} string The string to convert.
   * @returns {Array} Returns the converted array.
   */
  function asciiToArray(string) {
    return string.split('');
  }

  /**
   * Splits an ASCII `string` into an array of its words.
   *
   * @private
   * @param {string} The string to inspect.
   * @returns {Array} Returns the words of `string`.
   */
  function asciiWords(string) {
    return string.match(reAsciiWord) || [];
  }

  /**
   * The base implementation of `_.propertyOf` without support for deep paths.
   *
   * @private
   * @param {Object} object The object to query.
   * @returns {Function} Returns the new accessor function.
   */
  function basePropertyOf(object) {
    return function(key) {
      return object == null ? undefined : object[key];
    };
  }

  /**
   * Used by `_.deburr` to convert Latin-1 Supplement and Latin Extended-A
   * letters to basic Latin letters.
   *
   * @private
   * @param {string} letter The matched letter to deburr.
   * @returns {string} Returns the deburred letter.
   */
  var deburrLetter = basePropertyOf(deburredLetters);

  /**
   * Checks if `string` contains Unicode symbols.
   *
   * @private
   * @param {string} string The string to inspect.
   * @returns {boolean} Returns `true` if a symbol is found, else `false`.
   */
  function hasUnicode(string) {
    return reHasUnicode.test(string);
  }

  /**
   * Checks if `string` contains a word composed of Unicode symbols.
   *
   * @private
   * @param {string} string The string to inspect.
   * @returns {boolean} Returns `true` if a word is found, else `false`.
   */
  function hasUnicodeWord(string) {
    return reHasUnicodeWord.test(string);
  }

  /**
   * Converts `string` to an array.
   *
   * @private
   * @param {string} string The string to convert.
   * @returns {Array} Returns the converted array.
   */
  function stringToArray(string) {
    return hasUnicode(string)
      ? unicodeToArray(string)
      : asciiToArray(string);
  }

  /**
   * Converts a Unicode `string` to an array.
   *
   * @private
   * @param {string} string The string to convert.
   * @returns {Array} Returns the converted array.
   */
  function unicodeToArray(string) {
    return string.match(reUnicode) || [];
  }

  /**
   * Splits a Unicode `string` into an array of its words.
   *
   * @private
   * @param {string} The string to inspect.
   * @returns {Array} Returns the words of `string`.
   */
  function unicodeWords(string) {
    return string.match(reUnicodeWord) || [];
  }

  /** Used for built-in method references. */
  var objectProto$1 = Object.prototype;

  /**
   * Used to resolve the
   * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
   * of values.
   */
  var objectToString$1 = objectProto$1.toString;

  /** Built-in value references. */
  var Symbol$1 = root$1.Symbol;

  /** Used to convert symbols to primitives and strings. */
  var symbolProto = Symbol$1 ? Symbol$1.prototype : undefined,
      symbolToString = symbolProto ? symbolProto.toString : undefined;

  /**
   * The base implementation of `_.slice` without an iteratee call guard.
   *
   * @private
   * @param {Array} array The array to slice.
   * @param {number} [start=0] The start position.
   * @param {number} [end=array.length] The end position.
   * @returns {Array} Returns the slice of `array`.
   */
  function baseSlice(array, start, end) {
    var index = -1,
        length = array.length;

    if (start < 0) {
      start = -start > length ? 0 : (length + start);
    }
    end = end > length ? length : end;
    if (end < 0) {
      end += length;
    }
    length = start > end ? 0 : ((end - start) >>> 0);
    start >>>= 0;

    var result = Array(length);
    while (++index < length) {
      result[index] = array[index + start];
    }
    return result;
  }

  /**
   * The base implementation of `_.toString` which doesn't convert nullish
   * values to empty strings.
   *
   * @private
   * @param {*} value The value to process.
   * @returns {string} Returns the string.
   */
  function baseToString(value) {
    // Exit early for strings to avoid a performance hit in some environments.
    if (typeof value == 'string') {
      return value;
    }
    if (isSymbol$1(value)) {
      return symbolToString ? symbolToString.call(value) : '';
    }
    var result = (value + '');
    return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;
  }

  /**
   * Casts `array` to a slice if it's needed.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {number} start The start position.
   * @param {number} [end=array.length] The end position.
   * @returns {Array} Returns the cast slice.
   */
  function castSlice(array, start, end) {
    var length = array.length;
    end = end === undefined ? length : end;
    return (!start && end >= length) ? array : baseSlice(array, start, end);
  }

  /**
   * Creates a function like `_.lowerFirst`.
   *
   * @private
   * @param {string} methodName The name of the `String` case method to use.
   * @returns {Function} Returns the new case function.
   */
  function createCaseFirst(methodName) {
    return function(string) {
      string = toString$1(string);

      var strSymbols = hasUnicode(string)
        ? stringToArray(string)
        : undefined;

      var chr = strSymbols
        ? strSymbols[0]
        : string.charAt(0);

      var trailing = strSymbols
        ? castSlice(strSymbols, 1).join('')
        : string.slice(1);

      return chr[methodName]() + trailing;
    };
  }

  /**
   * Creates a function like `_.camelCase`.
   *
   * @private
   * @param {Function} callback The function to combine each word.
   * @returns {Function} Returns the new compounder function.
   */
  function createCompounder(callback) {
    return function(string) {
      return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');
    };
  }

  /**
   * Checks if `value` is object-like. A value is object-like if it's not `null`
   * and has a `typeof` result of "object".
   *
   * @static
   * @memberOf _
   * @since 4.0.0
   * @category Lang
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
   * @example
   *
   * _.isObjectLike({});
   * // => true
   *
   * _.isObjectLike([1, 2, 3]);
   * // => true
   *
   * _.isObjectLike(_.noop);
   * // => false
   *
   * _.isObjectLike(null);
   * // => false
   */
  function isObjectLike$1(value) {
    return !!value && typeof value == 'object';
  }

  /**
   * Checks if `value` is classified as a `Symbol` primitive or object.
   *
   * @static
   * @memberOf _
   * @since 4.0.0
   * @category Lang
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.
   * @example
   *
   * _.isSymbol(Symbol.iterator);
   * // => true
   *
   * _.isSymbol('abc');
   * // => false
   */
  function isSymbol$1(value) {
    return typeof value == 'symbol' ||
      (isObjectLike$1(value) && objectToString$1.call(value) == symbolTag$1);
  }

  /**
   * Converts `value` to a string. An empty string is returned for `null`
   * and `undefined` values. The sign of `-0` is preserved.
   *
   * @static
   * @memberOf _
   * @since 4.0.0
   * @category Lang
   * @param {*} value The value to process.
   * @returns {string} Returns the string.
   * @example
   *
   * _.toString(null);
   * // => ''
   *
   * _.toString(-0);
   * // => '-0'
   *
   * _.toString([1, 2, 3]);
   * // => '1,2,3'
   */
  function toString$1(value) {
    return value == null ? '' : baseToString(value);
  }

  /**
   * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).
   *
   * @static
   * @memberOf _
   * @since 3.0.0
   * @category String
   * @param {string} [string=''] The string to convert.
   * @returns {string} Returns the camel cased string.
   * @example
   *
   * _.camelCase('Foo Bar');
   * // => 'fooBar'
   *
   * _.camelCase('--foo-bar--');
   * // => 'fooBar'
   *
   * _.camelCase('__FOO_BAR__');
   * // => 'fooBar'
   */
  var camelCase = createCompounder(function(result, word, index) {
    word = word.toLowerCase();
    return result + (index ? capitalize(word) : word);
  });

  /**
   * Converts the first character of `string` to upper case and the remaining
   * to lower case.
   *
   * @static
   * @memberOf _
   * @since 3.0.0
   * @category String
   * @param {string} [string=''] The string to capitalize.
   * @returns {string} Returns the capitalized string.
   * @example
   *
   * _.capitalize('FRED');
   * // => 'Fred'
   */
  function capitalize(string) {
    return upperFirst(toString$1(string).toLowerCase());
  }

  /**
   * Deburrs `string` by converting
   * [Latin-1 Supplement](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)
   * and [Latin Extended-A](https://en.wikipedia.org/wiki/Latin_Extended-A)
   * letters to basic Latin letters and removing
   * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).
   *
   * @static
   * @memberOf _
   * @since 3.0.0
   * @category String
   * @param {string} [string=''] The string to deburr.
   * @returns {string} Returns the deburred string.
   * @example
   *
   * _.deburr('déjà vu');
   * // => 'deja vu'
   */
  function deburr(string) {
    string = toString$1(string);
    return string && string.replace(reLatin, deburrLetter).replace(reComboMark, '');
  }

  /**
   * Converts the first character of `string` to upper case.
   *
   * @static
   * @memberOf _
   * @since 4.0.0
   * @category String
   * @param {string} [string=''] The string to convert.
   * @returns {string} Returns the converted string.
   * @example
   *
   * _.upperFirst('fred');
   * // => 'Fred'
   *
   * _.upperFirst('FRED');
   * // => 'FRED'
   */
  var upperFirst = createCaseFirst('toUpperCase');

  /**
   * Splits `string` into an array of its words.
   *
   * @static
   * @memberOf _
   * @since 3.0.0
   * @category String
   * @param {string} [string=''] The string to inspect.
   * @param {RegExp|string} [pattern] The pattern to match words.
   * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
   * @returns {Array} Returns the words of `string`.
   * @example
   *
   * _.words('fred, barney, & pebbles');
   * // => ['fred', 'barney', 'pebbles']
   *
   * _.words('fred, barney, & pebbles', /[^, ]+/g);
   * // => ['fred', 'barney', '&', 'pebbles']
   */
  function words(string, pattern, guard) {
    string = toString$1(string);
    pattern = guard ? undefined : pattern;

    if (pattern === undefined) {
      return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);
    }
    return string.match(pattern) || [];
  }

  var lodash_camelcase = camelCase;

  /**
   * Constants.
   */

  var IS_MAC = typeof window != 'undefined' && /Mac|iPod|iPhone|iPad/.test(window.navigator.platform);

  var MODIFIERS = {
    alt: 'altKey',
    control: 'ctrlKey',
    meta: 'metaKey',
    shift: 'shiftKey'
  };

  var ALIASES = {
    add: '+',
    break: 'pause',
    cmd: 'meta',
    command: 'meta',
    ctl: 'control',
    ctrl: 'control',
    del: 'delete',
    down: 'arrowdown',
    esc: 'escape',
    ins: 'insert',
    left: 'arrowleft',
    mod: IS_MAC ? 'meta' : 'control',
    opt: 'alt',
    option: 'alt',
    return: 'enter',
    right: 'arrowright',
    space: ' ',
    spacebar: ' ',
    up: 'arrowup',
    win: 'meta',
    windows: 'meta'
  };

  var CODES = {
    backspace: 8,
    tab: 9,
    enter: 13,
    shift: 16,
    control: 17,
    alt: 18,
    pause: 19,
    capslock: 20,
    escape: 27,
    ' ': 32,
    pageup: 33,
    pagedown: 34,
    end: 35,
    home: 36,
    arrowleft: 37,
    arrowup: 38,
    arrowright: 39,
    arrowdown: 40,
    insert: 45,
    delete: 46,
    meta: 91,
    numlock: 144,
    scrolllock: 145,
    ';': 186,
    '=': 187,
    ',': 188,
    '-': 189,
    '.': 190,
    '/': 191,
    '`': 192,
    '[': 219,
    '\\': 220,
    ']': 221,
    '\'': 222
  };

  for (var f$2 = 1; f$2 < 20; f$2++) {
    CODES['f' + f$2] = 111 + f$2;
  }

  /**
   * Is hotkey?
   */

  function isHotkey(hotkey, options, event) {
    if (options && !('byKey' in options)) {
      event = options;
      options = null;
    }

    if (!Array.isArray(hotkey)) {
      hotkey = [hotkey];
    }

    var array = hotkey.map(function (string) {
      return parseHotkey(string, options);
    });
    var check = function check(e) {
      return array.some(function (object) {
        return compareHotkey(object, e);
      });
    };
    var ret = event == null ? check : check(event);
    return ret;
  }

  function isKeyHotkey(hotkey, event) {
    return isHotkey(hotkey, { byKey: true }, event);
  }

  /**
   * Parse.
   */

  function parseHotkey(hotkey, options) {
    var byKey = options && options.byKey;
    var ret = {};

    // Special case to handle the `+` key since we use it as a separator.
    hotkey = hotkey.replace('++', '+add');
    var values = hotkey.split('+');
    var length = values.length;

    // Ensure that all the modifiers are set to false unless the hotkey has them.

    for (var k in MODIFIERS) {
      ret[MODIFIERS[k]] = false;
    }

    var _iteratorNormalCompletion = true;
    var _didIteratorError = false;
    var _iteratorError = undefined;

    try {
      for (var _iterator = values[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
        var value = _step.value;

        var optional = value.endsWith('?') && value.length > 1;

        if (optional) {
          value = value.slice(0, -1);
        }

        var name = toKeyName(value);
        var modifier = MODIFIERS[name];

        if (value.length > 1 && !modifier && !ALIASES[value] && !CODES[name]) {
          throw new TypeError('Unknown modifier: "' + value + '"');
        }

        if (length === 1 || !modifier) {
          if (byKey) {
            ret.key = name;
          } else {
            ret.which = toKeyCode(value);
          }
        }

        if (modifier) {
          ret[modifier] = optional ? null : true;
        }
      }
    } catch (err) {
      _didIteratorError = true;
      _iteratorError = err;
    } finally {
      try {
        if (!_iteratorNormalCompletion && _iterator.return) {
          _iterator.return();
        }
      } finally {
        if (_didIteratorError) {
          throw _iteratorError;
        }
      }
    }

    return ret;
  }

  /**
   * Compare.
   */

  function compareHotkey(object, event) {
    for (var key in object) {
      var expected = object[key];
      var actual = void 0;

      if (expected == null) {
        continue;
      }

      if (key === 'key' && event.key != null) {
        actual = event.key.toLowerCase();
      } else if (key === 'which') {
        actual = expected === 91 && event.which === 93 ? 91 : event.which;
      } else {
        actual = event[key];
      }

      if (actual == null && expected === false) {
        continue;
      }

      if (actual !== expected) {
        return false;
      }
    }

    return true;
  }

  /**
   * Utils.
   */

  function toKeyCode(name) {
    name = toKeyName(name);
    var code = CODES[name] || name.toUpperCase().charCodeAt(0);
    return code;
  }

  function toKeyName(name) {
    name = name.toLowerCase();
    name = ALIASES[name] || name;
    return name;
  }
  var isHotkey_1 = isHotkey;
  var isKeyHotkey_1 = isKeyHotkey;

  /**
   * lodash (Custom Build) <https://lodash.com/>
   * Build: `lodash modularize exports="npm" -o ./`
   * Copyright jQuery Foundation and other contributors <https://jquery.org/>
   * Released under MIT license <https://lodash.com/license>
   * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
   * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
   */

  /** Used as the `TypeError` message for "Functions" methods. */
  var FUNC_ERROR_TEXT = 'Expected a function';

  /** Used as references for various `Number` constants. */
  var NAN = 0 / 0;

  /** `Object#toString` result references. */
  var symbolTag = '[object Symbol]';

  /** Used to match leading and trailing whitespace. */
  var reTrim = /^\s+|\s+$/g;

  /** Used to detect bad signed hexadecimal string values. */
  var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;

  /** Used to detect binary string values. */
  var reIsBinary = /^0b[01]+$/i;

  /** Used to detect octal string values. */
  var reIsOctal = /^0o[0-7]+$/i;

  /** Built-in method references without a dependency on `root`. */
  var freeParseInt = parseInt;

  /** Detect free variable `global` from Node.js. */
  var freeGlobal = typeof commonjsGlobal == 'object' && commonjsGlobal && commonjsGlobal.Object === Object && commonjsGlobal;

  /** Detect free variable `self`. */
  var freeSelf = typeof self == 'object' && self && self.Object === Object && self;

  /** Used as a reference to the global object. */
  var root = freeGlobal || freeSelf || Function('return this')();

  /** Used for built-in method references. */
  var objectProto = Object.prototype;

  /**
   * Used to resolve the
   * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
   * of values.
   */
  var objectToString = objectProto.toString;

  /* Built-in method references for those with the same name as other `lodash` methods. */
  var nativeMax = Math.max,
      nativeMin = Math.min;

  /**
   * Gets the timestamp of the number of milliseconds that have elapsed since
   * the Unix epoch (1 January 1970 00:00:00 UTC).
   *
   * @static
   * @memberOf _
   * @since 2.4.0
   * @category Date
   * @returns {number} Returns the timestamp.
   * @example
   *
   * _.defer(function(stamp) {
   *   console.log(_.now() - stamp);
   * }, _.now());
   * // => Logs the number of milliseconds it took for the deferred invocation.
   */
  var now = function() {
    return root.Date.now();
  };

  /**
   * Creates a debounced function that delays invoking `func` until after `wait`
   * milliseconds have elapsed since the last time the debounced function was
   * invoked. The debounced function comes with a `cancel` method to cancel
   * delayed `func` invocations and a `flush` method to immediately invoke them.
   * Provide `options` to indicate whether `func` should be invoked on the
   * leading and/or trailing edge of the `wait` timeout. The `func` is invoked
   * with the last arguments provided to the debounced function. Subsequent
   * calls to the debounced function return the result of the last `func`
   * invocation.
   *
   * **Note:** If `leading` and `trailing` options are `true`, `func` is
   * invoked on the trailing edge of the timeout only if the debounced function
   * is invoked more than once during the `wait` timeout.
   *
   * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred
   * until to the next tick, similar to `setTimeout` with a timeout of `0`.
   *
   * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
   * for details over the differences between `_.debounce` and `_.throttle`.
   *
   * @static
   * @memberOf _
   * @since 0.1.0
   * @category Function
   * @param {Function} func The function to debounce.
   * @param {number} [wait=0] The number of milliseconds to delay.
   * @param {Object} [options={}] The options object.
   * @param {boolean} [options.leading=false]
   *  Specify invoking on the leading edge of the timeout.
   * @param {number} [options.maxWait]
   *  The maximum time `func` is allowed to be delayed before it's invoked.
   * @param {boolean} [options.trailing=true]
   *  Specify invoking on the trailing edge of the timeout.
   * @returns {Function} Returns the new debounced function.
   * @example
   *
   * // Avoid costly calculations while the window size is in flux.
   * jQuery(window).on('resize', _.debounce(calculateLayout, 150));
   *
   * // Invoke `sendMail` when clicked, debouncing subsequent calls.
   * jQuery(element).on('click', _.debounce(sendMail, 300, {
   *   'leading': true,
   *   'trailing': false
   * }));
   *
   * // Ensure `batchLog` is invoked once after 1 second of debounced calls.
   * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });
   * var source = new EventSource('/stream');
   * jQuery(source).on('message', debounced);
   *
   * // Cancel the trailing debounced invocation.
   * jQuery(window).on('popstate', debounced.cancel);
   */
  function debounce$1(func, wait, options) {
    var lastArgs,
        lastThis,
        maxWait,
        result,
        timerId,
        lastCallTime,
        lastInvokeTime = 0,
        leading = false,
        maxing = false,
        trailing = true;

    if (typeof func != 'function') {
      throw new TypeError(FUNC_ERROR_TEXT);
    }
    wait = toNumber(wait) || 0;
    if (isObject(options)) {
      leading = !!options.leading;
      maxing = 'maxWait' in options;
      maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;
      trailing = 'trailing' in options ? !!options.trailing : trailing;
    }

    function invokeFunc(time) {
      var args = lastArgs,
          thisArg = lastThis;

      lastArgs = lastThis = undefined;
      lastInvokeTime = time;
      result = func.apply(thisArg, args);
      return result;
    }

    function leadingEdge(time) {
      // Reset any `maxWait` timer.
      lastInvokeTime = time;
      // Start the timer for the trailing edge.
      timerId = setTimeout(timerExpired, wait);
      // Invoke the leading edge.
      return leading ? invokeFunc(time) : result;
    }

    function remainingWait(time) {
      var timeSinceLastCall = time - lastCallTime,
          timeSinceLastInvoke = time - lastInvokeTime,
          result = wait - timeSinceLastCall;

      return maxing ? nativeMin(result, maxWait - timeSinceLastInvoke) : result;
    }

    function shouldInvoke(time) {
      var timeSinceLastCall = time - lastCallTime,
          timeSinceLastInvoke = time - lastInvokeTime;

      // Either this is the first call, activity has stopped and we're at the
      // trailing edge, the system time has gone backwards and we're treating
      // it as the trailing edge, or we've hit the `maxWait` limit.
      return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||
        (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));
    }

    function timerExpired() {
      var time = now();
      if (shouldInvoke(time)) {
        return trailingEdge(time);
      }
      // Restart the timer.
      timerId = setTimeout(timerExpired, remainingWait(time));
    }

    function trailingEdge(time) {
      timerId = undefined;

      // Only invoke if we have `lastArgs` which means `func` has been
      // debounced at least once.
      if (trailing && lastArgs) {
        return invokeFunc(time);
      }
      lastArgs = lastThis = undefined;
      return result;
    }

    function cancel() {
      if (timerId !== undefined) {
        clearTimeout(timerId);
      }
      lastInvokeTime = 0;
      lastArgs = lastCallTime = lastThis = timerId = undefined;
    }

    function flush() {
      return timerId === undefined ? result : trailingEdge(now());
    }

    function debounced() {
      var time = now(),
          isInvoking = shouldInvoke(time);

      lastArgs = arguments;
      lastThis = this;
      lastCallTime = time;

      if (isInvoking) {
        if (timerId === undefined) {
          return leadingEdge(lastCallTime);
        }
        if (maxing) {
          // Handle invocations in a tight loop.
          timerId = setTimeout(timerExpired, wait);
          return invokeFunc(lastCallTime);
        }
      }
      if (timerId === undefined) {
        timerId = setTimeout(timerExpired, wait);
      }
      return result;
    }
    debounced.cancel = cancel;
    debounced.flush = flush;
    return debounced;
  }

  /**
   * Checks if `value` is the
   * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
   * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
   *
   * @static
   * @memberOf _
   * @since 0.1.0
   * @category Lang
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is an object, else `false`.
   * @example
   *
   * _.isObject({});
   * // => true
   *
   * _.isObject([1, 2, 3]);
   * // => true
   *
   * _.isObject(_.noop);
   * // => true
   *
   * _.isObject(null);
   * // => false
   */
  function isObject(value) {
    var type = typeof value;
    return !!value && (type == 'object' || type == 'function');
  }

  /**
   * Checks if `value` is object-like. A value is object-like if it's not `null`
   * and has a `typeof` result of "object".
   *
   * @static
   * @memberOf _
   * @since 4.0.0
   * @category Lang
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
   * @example
   *
   * _.isObjectLike({});
   * // => true
   *
   * _.isObjectLike([1, 2, 3]);
   * // => true
   *
   * _.isObjectLike(_.noop);
   * // => false
   *
   * _.isObjectLike(null);
   * // => false
   */
  function isObjectLike(value) {
    return !!value && typeof value == 'object';
  }

  /**
   * Checks if `value` is classified as a `Symbol` primitive or object.
   *
   * @static
   * @memberOf _
   * @since 4.0.0
   * @category Lang
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.
   * @example
   *
   * _.isSymbol(Symbol.iterator);
   * // => true
   *
   * _.isSymbol('abc');
   * // => false
   */
  function isSymbol(value) {
    return typeof value == 'symbol' ||
      (isObjectLike(value) && objectToString.call(value) == symbolTag);
  }

  /**
   * Converts `value` to a number.
   *
   * @static
   * @memberOf _
   * @since 4.0.0
   * @category Lang
   * @param {*} value The value to process.
   * @returns {number} Returns the number.
   * @example
   *
   * _.toNumber(3.2);
   * // => 3.2
   *
   * _.toNumber(Number.MIN_VALUE);
   * // => 5e-324
   *
   * _.toNumber(Infinity);
   * // => Infinity
   *
   * _.toNumber('3.2');
   * // => 3.2
   */
  function toNumber(value) {
    if (typeof value == 'number') {
      return value;
    }
    if (isSymbol(value)) {
      return NAN;
    }
    if (isObject(value)) {
      var other = typeof value.valueOf == 'function' ? value.valueOf() : value;
      value = isObject(other) ? (other + '') : other;
    }
    if (typeof value != 'string') {
      return value === 0 ? value : +value;
    }
    value = value.replace(reTrim, '');
    var isBinary = reIsBinary.test(value);
    return (isBinary || reIsOctal.test(value))
      ? freeParseInt(value.slice(2), isBinary ? 2 : 8)
      : (reIsBadHex.test(value) ? NAN : +value);
  }

  var lodash_debounce = debounce$1;

  /**
   * lodash (Custom Build) <https://lodash.com/>
   * Build: `lodash modularize exports="npm" -o ./`
   * Copyright jQuery Foundation and other contributors <https://jquery.org/>
   * Released under MIT license <https://lodash.com/license>
   * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
   * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
   */

  var lodash_clonedeep = createCommonjsModule(function (module, exports) {
  /** Used as the size to enable large array optimizations. */
  var LARGE_ARRAY_SIZE = 200;

  /** Used to stand-in for `undefined` hash values. */
  var HASH_UNDEFINED = '__lodash_hash_undefined__';

  /** Used as references for various `Number` constants. */
  var MAX_SAFE_INTEGER = 9007199254740991;

  /** `Object#toString` result references. */
  var argsTag = '[object Arguments]',
      arrayTag = '[object Array]',
      boolTag = '[object Boolean]',
      dateTag = '[object Date]',
      errorTag = '[object Error]',
      funcTag = '[object Function]',
      genTag = '[object GeneratorFunction]',
      mapTag = '[object Map]',
      numberTag = '[object Number]',
      objectTag = '[object Object]',
      promiseTag = '[object Promise]',
      regexpTag = '[object RegExp]',
      setTag = '[object Set]',
      stringTag = '[object String]',
      symbolTag = '[object Symbol]',
      weakMapTag = '[object WeakMap]';

  var arrayBufferTag = '[object ArrayBuffer]',
      dataViewTag = '[object DataView]',
      float32Tag = '[object Float32Array]',
      float64Tag = '[object Float64Array]',
      int8Tag = '[object Int8Array]',
      int16Tag = '[object Int16Array]',
      int32Tag = '[object Int32Array]',
      uint8Tag = '[object Uint8Array]',
      uint8ClampedTag = '[object Uint8ClampedArray]',
      uint16Tag = '[object Uint16Array]',
      uint32Tag = '[object Uint32Array]';

  /**
   * Used to match `RegExp`
   * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).
   */
  var reRegExpChar = /[\\^$.*+?()[\]{}|]/g;

  /** Used to match `RegExp` flags from their coerced string values. */
  var reFlags = /\w*$/;

  /** Used to detect host constructors (Safari). */
  var reIsHostCtor = /^\[object .+?Constructor\]$/;

  /** Used to detect unsigned integer values. */
  var reIsUint = /^(?:0|[1-9]\d*)$/;

  /** Used to identify `toStringTag` values supported by `_.clone`. */
  var cloneableTags = {};
  cloneableTags[argsTag] = cloneableTags[arrayTag] =
  cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =
  cloneableTags[boolTag] = cloneableTags[dateTag] =
  cloneableTags[float32Tag] = cloneableTags[float64Tag] =
  cloneableTags[int8Tag] = cloneableTags[int16Tag] =
  cloneableTags[int32Tag] = cloneableTags[mapTag] =
  cloneableTags[numberTag] = cloneableTags[objectTag] =
  cloneableTags[regexpTag] = cloneableTags[setTag] =
  cloneableTags[stringTag] = cloneableTags[symbolTag] =
  cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =
  cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;
  cloneableTags[errorTag] = cloneableTags[funcTag] =
  cloneableTags[weakMapTag] = false;

  /** Detect free variable `global` from Node.js. */
  var freeGlobal = typeof commonjsGlobal == 'object' && commonjsGlobal && commonjsGlobal.Object === Object && commonjsGlobal;

  /** Detect free variable `self`. */
  var freeSelf = typeof self == 'object' && self && self.Object === Object && self;

  /** Used as a reference to the global object. */
  var root = freeGlobal || freeSelf || Function('return this')();

  /** Detect free variable `exports`. */
  var freeExports = exports && !exports.nodeType && exports;

  /** Detect free variable `module`. */
  var freeModule = freeExports && 'object' == 'object' && module && !module.nodeType && module;

  /** Detect the popular CommonJS extension `module.exports`. */
  var moduleExports = freeModule && freeModule.exports === freeExports;

  /**
   * Adds the key-value `pair` to `map`.
   *
   * @private
   * @param {Object} map The map to modify.
   * @param {Array} pair The key-value pair to add.
   * @returns {Object} Returns `map`.
   */
  function addMapEntry(map, pair) {
    // Don't return `map.set` because it's not chainable in IE 11.
    map.set(pair[0], pair[1]);
    return map;
  }

  /**
   * Adds `value` to `set`.
   *
   * @private
   * @param {Object} set The set to modify.
   * @param {*} value The value to add.
   * @returns {Object} Returns `set`.
   */
  function addSetEntry(set, value) {
    // Don't return `set.add` because it's not chainable in IE 11.
    set.add(value);
    return set;
  }

  /**
   * A specialized version of `_.forEach` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {Array} Returns `array`.
   */
  function arrayEach(array, iteratee) {
    var index = -1,
        length = array ? array.length : 0;

    while (++index < length) {
      if (iteratee(array[index], index, array) === false) {
        break;
      }
    }
    return array;
  }

  /**
   * Appends the elements of `values` to `array`.
   *
   * @private
   * @param {Array} array The array to modify.
   * @param {Array} values The values to append.
   * @returns {Array} Returns `array`.
   */
  function arrayPush(array, values) {
    var index = -1,
        length = values.length,
        offset = array.length;

    while (++index < length) {
      array[offset + index] = values[index];
    }
    return array;
  }

  /**
   * A specialized version of `_.reduce` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @param {*} [accumulator] The initial value.
   * @param {boolean} [initAccum] Specify using the first element of `array` as
   *  the initial value.
   * @returns {*} Returns the accumulated value.
   */
  function arrayReduce(array, iteratee, accumulator, initAccum) {
    var index = -1,
        length = array ? array.length : 0;

    if (initAccum && length) {
      accumulator = array[++index];
    }
    while (++index < length) {
      accumulator = iteratee(accumulator, array[index], index, array);
    }
    return accumulator;
  }

  /**
   * The base implementation of `_.times` without support for iteratee shorthands
   * or max array length checks.
   *
   * @private
   * @param {number} n The number of times to invoke `iteratee`.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {Array} Returns the array of results.
   */
  function baseTimes(n, iteratee) {
    var index = -1,
        result = Array(n);

    while (++index < n) {
      result[index] = iteratee(index);
    }
    return result;
  }

  /**
   * Gets the value at `key` of `object`.
   *
   * @private
   * @param {Object} [object] The object to query.
   * @param {string} key The key of the property to get.
   * @returns {*} Returns the property value.
   */
  function getValue(object, key) {
    return object == null ? undefined : object[key];
  }

  /**
   * Checks if `value` is a host object in IE < 9.
   *
   * @private
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is a host object, else `false`.
   */
  function isHostObject(value) {
    // Many host objects are `Object` objects that can coerce to strings
    // despite having improperly defined `toString` methods.
    var result = false;
    if (value != null && typeof value.toString != 'function') {
      try {
        result = !!(value + '');
      } catch (e) {}
    }
    return result;
  }

  /**
   * Converts `map` to its key-value pairs.
   *
   * @private
   * @param {Object} map The map to convert.
   * @returns {Array} Returns the key-value pairs.
   */
  function mapToArray(map) {
    var index = -1,
        result = Array(map.size);

    map.forEach(function(value, key) {
      result[++index] = [key, value];
    });
    return result;
  }

  /**
   * Creates a unary function that invokes `func` with its argument transformed.
   *
   * @private
   * @param {Function} func The function to wrap.
   * @param {Function} transform The argument transform.
   * @returns {Function} Returns the new function.
   */
  function overArg(func, transform) {
    return function(arg) {
      return func(transform(arg));
    };
  }

  /**
   * Converts `set` to an array of its values.
   *
   * @private
   * @param {Object} set The set to convert.
   * @returns {Array} Returns the values.
   */
  function setToArray(set) {
    var index = -1,
        result = Array(set.size);

    set.forEach(function(value) {
      result[++index] = value;
    });
    return result;
  }

  /** Used for built-in method references. */
  var arrayProto = Array.prototype,
      funcProto = Function.prototype,
      objectProto = Object.prototype;

  /** Used to detect overreaching core-js shims. */
  var coreJsData = root['__core-js_shared__'];

  /** Used to detect methods masquerading as native. */
  var maskSrcKey = (function() {
    var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');
    return uid ? ('Symbol(src)_1.' + uid) : '';
  }());

  /** Used to resolve the decompiled source of functions. */
  var funcToString = funcProto.toString;

  /** Used to check objects for own properties. */
  var hasOwnProperty = objectProto.hasOwnProperty;

  /**
   * Used to resolve the
   * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
   * of values.
   */
  var objectToString = objectProto.toString;

  /** Used to detect if a method is native. */
  var reIsNative = RegExp('^' +
    funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\$&')
    .replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$'
  );

  /** Built-in value references. */
  var Buffer = moduleExports ? root.Buffer : undefined,
      Symbol = root.Symbol,
      Uint8Array = root.Uint8Array,
      getPrototype = overArg(Object.getPrototypeOf, Object),
      objectCreate = Object.create,
      propertyIsEnumerable = objectProto.propertyIsEnumerable,
      splice = arrayProto.splice;

  /* Built-in method references for those with the same name as other `lodash` methods. */
  var nativeGetSymbols = Object.getOwnPropertySymbols,
      nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,
      nativeKeys = overArg(Object.keys, Object);

  /* Built-in method references that are verified to be native. */
  var DataView = getNative(root, 'DataView'),
      Map = getNative(root, 'Map'),
      Promise = getNative(root, 'Promise'),
      Set = getNative(root, 'Set'),
      WeakMap = getNative(root, 'WeakMap'),
      nativeCreate = getNative(Object, 'create');

  /** Used to detect maps, sets, and weakmaps. */
  var dataViewCtorString = toSource(DataView),
      mapCtorString = toSource(Map),
      promiseCtorString = toSource(Promise),
      setCtorString = toSource(Set),
      weakMapCtorString = toSource(WeakMap);

  /** Used to convert symbols to primitives and strings. */
  var symbolProto = Symbol ? Symbol.prototype : undefined,
      symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;

  /**
   * Creates a hash object.
   *
   * @private
   * @constructor
   * @param {Array} [entries] The key-value pairs to cache.
   */
  function Hash(entries) {
    var index = -1,
        length = entries ? entries.length : 0;

    this.clear();
    while (++index < length) {
      var entry = entries[index];
      this.set(entry[0], entry[1]);
    }
  }

  /**
   * Removes all key-value entries from the hash.
   *
   * @private
   * @name clear
   * @memberOf Hash
   */
  function hashClear() {
    this.__data__ = nativeCreate ? nativeCreate(null) : {};
  }

  /**
   * Removes `key` and its value from the hash.
   *
   * @private
   * @name delete
   * @memberOf Hash
   * @param {Object} hash The hash to modify.
   * @param {string} key The key of the value to remove.
   * @returns {boolean} Returns `true` if the entry was removed, else `false`.
   */
  function hashDelete(key) {
    return this.has(key) && delete this.__data__[key];
  }

  /**
   * Gets the hash value for `key`.
   *
   * @private
   * @name get
   * @memberOf Hash
   * @param {string} key The key of the value to get.
   * @returns {*} Returns the entry value.
   */
  function hashGet(key) {
    var data = this.__data__;
    if (nativeCreate) {
      var result = data[key];
      return result === HASH_UNDEFINED ? undefined : result;
    }
    return hasOwnProperty.call(data, key) ? data[key] : undefined;
  }

  /**
   * Checks if a hash value for `key` exists.
   *
   * @private
   * @name has
   * @memberOf Hash
   * @param {string} key The key of the entry to check.
   * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
   */
  function hashHas(key) {
    var data = this.__data__;
    return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);
  }

  /**
   * Sets the hash `key` to `value`.
   *
   * @private
   * @name set
   * @memberOf Hash
   * @param {string} key The key of the value to set.
   * @param {*} value The value to set.
   * @returns {Object} Returns the hash instance.
   */
  function hashSet(key, value) {
    var data = this.__data__;
    data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;
    return this;
  }

  // Add methods to `Hash`.
  Hash.prototype.clear = hashClear;
  Hash.prototype['delete'] = hashDelete;
  Hash.prototype.get = hashGet;
  Hash.prototype.has = hashHas;
  Hash.prototype.set = hashSet;

  /**
   * Creates an list cache object.
   *
   * @private
   * @constructor
   * @param {Array} [entries] The key-value pairs to cache.
   */
  function ListCache(entries) {
    var index = -1,
        length = entries ? entries.length : 0;

    this.clear();
    while (++index < length) {
      var entry = entries[index];
      this.set(entry[0], entry[1]);
    }
  }

  /**
   * Removes all key-value entries from the list cache.
   *
   * @private
   * @name clear
   * @memberOf ListCache
   */
  function listCacheClear() {
    this.__data__ = [];
  }

  /**
   * Removes `key` and its value from the list cache.
   *
   * @private
   * @name delete
   * @memberOf ListCache
   * @param {string} key The key of the value to remove.
   * @returns {boolean} Returns `true` if the entry was removed, else `false`.
   */
  function listCacheDelete(key) {
    var data = this.__data__,
        index = assocIndexOf(data, key);

    if (index < 0) {
      return false;
    }
    var lastIndex = data.length - 1;
    if (index == lastIndex) {
      data.pop();
    } else {
      splice.call(data, index, 1);
    }
    return true;
  }

  /**
   * Gets the list cache value for `key`.
   *
   * @private
   * @name get
   * @memberOf ListCache
   * @param {string} key The key of the value to get.
   * @returns {*} Returns the entry value.
   */
  function listCacheGet(key) {
    var data = this.__data__,
        index = assocIndexOf(data, key);

    return index < 0 ? undefined : data[index][1];
  }

  /**
   * Checks if a list cache value for `key` exists.
   *
   * @private
   * @name has
   * @memberOf ListCache
   * @param {string} key The key of the entry to check.
   * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
   */
  function listCacheHas(key) {
    return assocIndexOf(this.__data__, key) > -1;
  }

  /**
   * Sets the list cache `key` to `value`.
   *
   * @private
   * @name set
   * @memberOf ListCache
   * @param {string} key The key of the value to set.
   * @param {*} value The value to set.
   * @returns {Object} Returns the list cache instance.
   */
  function listCacheSet(key, value) {
    var data = this.__data__,
        index = assocIndexOf(data, key);

    if (index < 0) {
      data.push([key, value]);
    } else {
      data[index][1] = value;
    }
    return this;
  }

  // Add methods to `ListCache`.
  ListCache.prototype.clear = listCacheClear;
  ListCache.prototype['delete'] = listCacheDelete;
  ListCache.prototype.get = listCacheGet;
  ListCache.prototype.has = listCacheHas;
  ListCache.prototype.set = listCacheSet;

  /**
   * Creates a map cache object to store key-value pairs.
   *
   * @private
   * @constructor
   * @param {Array} [entries] The key-value pairs to cache.
   */
  function MapCache(entries) {
    var index = -1,
        length = entries ? entries.length : 0;

    this.clear();
    while (++index < length) {
      var entry = entries[index];
      this.set(entry[0], entry[1]);
    }
  }

  /**
   * Removes all key-value entries from the map.
   *
   * @private
   * @name clear
   * @memberOf MapCache
   */
  function mapCacheClear() {
    this.__data__ = {
      'hash': new Hash,
      'map': new (Map || ListCache),
      'string': new Hash
    };
  }

  /**
   * Removes `key` and its value from the map.
   *
   * @private
   * @name delete
   * @memberOf MapCache
   * @param {string} key The key of the value to remove.
   * @returns {boolean} Returns `true` if the entry was removed, else `false`.
   */
  function mapCacheDelete(key) {
    return getMapData(this, key)['delete'](key);
  }

  /**
   * Gets the map value for `key`.
   *
   * @private
   * @name get
   * @memberOf MapCache
   * @param {string} key The key of the value to get.
   * @returns {*} Returns the entry value.
   */
  function mapCacheGet(key) {
    return getMapData(this, key).get(key);
  }

  /**
   * Checks if a map value for `key` exists.
   *
   * @private
   * @name has
   * @memberOf MapCache
   * @param {string} key The key of the entry to check.
   * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
   */
  function mapCacheHas(key) {
    return getMapData(this, key).has(key);
  }

  /**
   * Sets the map `key` to `value`.
   *
   * @private
   * @name set
   * @memberOf MapCache
   * @param {string} key The key of the value to set.
   * @param {*} value The value to set.
   * @returns {Object} Returns the map cache instance.
   */
  function mapCacheSet(key, value) {
    getMapData(this, key).set(key, value);
    return this;
  }

  // Add methods to `MapCache`.
  MapCache.prototype.clear = mapCacheClear;
  MapCache.prototype['delete'] = mapCacheDelete;
  MapCache.prototype.get = mapCacheGet;
  MapCache.prototype.has = mapCacheHas;
  MapCache.prototype.set = mapCacheSet;

  /**
   * Creates a stack cache object to store key-value pairs.
   *
   * @private
   * @constructor
   * @param {Array} [entries] The key-value pairs to cache.
   */
  function Stack(entries) {
    this.__data__ = new ListCache(entries);
  }

  /**
   * Removes all key-value entries from the stack.
   *
   * @private
   * @name clear
   * @memberOf Stack
   */
  function stackClear() {
    this.__data__ = new ListCache;
  }

  /**
   * Removes `key` and its value from the stack.
   *
   * @private
   * @name delete
   * @memberOf Stack
   * @param {string} key The key of the value to remove.
   * @returns {boolean} Returns `true` if the entry was removed, else `false`.
   */
  function stackDelete(key) {
    return this.__data__['delete'](key);
  }

  /**
   * Gets the stack value for `key`.
   *
   * @private
   * @name get
   * @memberOf Stack
   * @param {string} key The key of the value to get.
   * @returns {*} Returns the entry value.
   */
  function stackGet(key) {
    return this.__data__.get(key);
  }

  /**
   * Checks if a stack value for `key` exists.
   *
   * @private
   * @name has
   * @memberOf Stack
   * @param {string} key The key of the entry to check.
   * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
   */
  function stackHas(key) {
    return this.__data__.has(key);
  }

  /**
   * Sets the stack `key` to `value`.
   *
   * @private
   * @name set
   * @memberOf Stack
   * @param {string} key The key of the value to set.
   * @param {*} value The value to set.
   * @returns {Object} Returns the stack cache instance.
   */
  function stackSet(key, value) {
    var cache = this.__data__;
    if (cache instanceof ListCache) {
      var pairs = cache.__data__;
      if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {
        pairs.push([key, value]);
        return this;
      }
      cache = this.__data__ = new MapCache(pairs);
    }
    cache.set(key, value);
    return this;
  }

  // Add methods to `Stack`.
  Stack.prototype.clear = stackClear;
  Stack.prototype['delete'] = stackDelete;
  Stack.prototype.get = stackGet;
  Stack.prototype.has = stackHas;
  Stack.prototype.set = stackSet;

  /**
   * Creates an array of the enumerable property names of the array-like `value`.
   *
   * @private
   * @param {*} value The value to query.
   * @param {boolean} inherited Specify returning inherited property names.
   * @returns {Array} Returns the array of property names.
   */
  function arrayLikeKeys(value, inherited) {
    // Safari 8.1 makes `arguments.callee` enumerable in strict mode.
    // Safari 9 makes `arguments.length` enumerable in strict mode.
    var result = (isArray(value) || isArguments(value))
      ? baseTimes(value.length, String)
      : [];

    var length = result.length,
        skipIndexes = !!length;

    for (var key in value) {
      if ((inherited || hasOwnProperty.call(value, key)) &&
          !(skipIndexes && (key == 'length' || isIndex(key, length)))) {
        result.push(key);
      }
    }
    return result;
  }

  /**
   * Assigns `value` to `key` of `object` if the existing value is not equivalent
   * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
   * for equality comparisons.
   *
   * @private
   * @param {Object} object The object to modify.
   * @param {string} key The key of the property to assign.
   * @param {*} value The value to assign.
   */
  function assignValue(object, key, value) {
    var objValue = object[key];
    if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||
        (value === undefined && !(key in object))) {
      object[key] = value;
    }
  }

  /**
   * Gets the index at which the `key` is found in `array` of key-value pairs.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {*} key The key to search for.
   * @returns {number} Returns the index of the matched value, else `-1`.
   */
  function assocIndexOf(array, key) {
    var length = array.length;
    while (length--) {
      if (eq(array[length][0], key)) {
        return length;
      }
    }
    return -1;
  }

  /**
   * The base implementation of `_.assign` without support for multiple sources
   * or `customizer` functions.
   *
   * @private
   * @param {Object} object The destination object.
   * @param {Object} source The source object.
   * @returns {Object} Returns `object`.
   */
  function baseAssign(object, source) {
    return object && copyObject(source, keys(source), object);
  }

  /**
   * The base implementation of `_.clone` and `_.cloneDeep` which tracks
   * traversed objects.
   *
   * @private
   * @param {*} value The value to clone.
   * @param {boolean} [isDeep] Specify a deep clone.
   * @param {boolean} [isFull] Specify a clone including symbols.
   * @param {Function} [customizer] The function to customize cloning.
   * @param {string} [key] The key of `value`.
   * @param {Object} [object] The parent object of `value`.
   * @param {Object} [stack] Tracks traversed objects and their clone counterparts.
   * @returns {*} Returns the cloned value.
   */
  function baseClone(value, isDeep, isFull, customizer, key, object, stack) {
    var result;
    if (customizer) {
      result = object ? customizer(value, key, object, stack) : customizer(value);
    }
    if (result !== undefined) {
      return result;
    }
    if (!isObject(value)) {
      return value;
    }
    var isArr = isArray(value);
    if (isArr) {
      result = initCloneArray(value);
      if (!isDeep) {
        return copyArray(value, result);
      }
    } else {
      var tag = getTag(value),
          isFunc = tag == funcTag || tag == genTag;

      if (isBuffer(value)) {
        return cloneBuffer(value, isDeep);
      }
      if (tag == objectTag || tag == argsTag || (isFunc && !object)) {
        if (isHostObject(value)) {
          return object ? value : {};
        }
        result = initCloneObject(isFunc ? {} : value);
        if (!isDeep) {
          return copySymbols(value, baseAssign(result, value));
        }
      } else {
        if (!cloneableTags[tag]) {
          return object ? value : {};
        }
        result = initCloneByTag(value, tag, baseClone, isDeep);
      }
    }
    // Check for circular references and return its corresponding clone.
    stack || (stack = new Stack);
    var stacked = stack.get(value);
    if (stacked) {
      return stacked;
    }
    stack.set(value, result);

    if (!isArr) {
      var props = isFull ? getAllKeys(value) : keys(value);
    }
    arrayEach(props || value, function(subValue, key) {
      if (props) {
        key = subValue;
        subValue = value[key];
      }
      // Recursively populate clone (susceptible to call stack limits).
      assignValue(result, key, baseClone(subValue, isDeep, isFull, customizer, key, value, stack));
    });
    return result;
  }

  /**
   * The base implementation of `_.create` without support for assigning
   * properties to the created object.
   *
   * @private
   * @param {Object} prototype The object to inherit from.
   * @returns {Object} Returns the new object.
   */
  function baseCreate(proto) {
    return isObject(proto) ? objectCreate(proto) : {};
  }

  /**
   * The base implementation of `getAllKeys` and `getAllKeysIn` which uses
   * `keysFunc` and `symbolsFunc` to get the enumerable property names and
   * symbols of `object`.
   *
   * @private
   * @param {Object} object The object to query.
   * @param {Function} keysFunc The function to get the keys of `object`.
   * @param {Function} symbolsFunc The function to get the symbols of `object`.
   * @returns {Array} Returns the array of property names and symbols.
   */
  function baseGetAllKeys(object, keysFunc, symbolsFunc) {
    var result = keysFunc(object);
    return isArray(object) ? result : arrayPush(result, symbolsFunc(object));
  }

  /**
   * The base implementation of `getTag`.
   *
   * @private
   * @param {*} value The value to query.
   * @returns {string} Returns the `toStringTag`.
   */
  function baseGetTag(value) {
    return objectToString.call(value);
  }

  /**
   * The base implementation of `_.isNative` without bad shim checks.
   *
   * @private
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is a native function,
   *  else `false`.
   */
  function baseIsNative(value) {
    if (!isObject(value) || isMasked(value)) {
      return false;
    }
    var pattern = (isFunction(value) || isHostObject(value)) ? reIsNative : reIsHostCtor;
    return pattern.test(toSource(value));
  }

  /**
   * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.
   *
   * @private
   * @param {Object} object The object to query.
   * @returns {Array} Returns the array of property names.
   */
  function baseKeys(object) {
    if (!isPrototype(object)) {
      return nativeKeys(object);
    }
    var result = [];
    for (var key in Object(object)) {
      if (hasOwnProperty.call(object, key) && key != 'constructor') {
        result.push(key);
      }
    }
    return result;
  }

  /**
   * Creates a clone of  `buffer`.
   *
   * @private
   * @param {Buffer} buffer The buffer to clone.
   * @param {boolean} [isDeep] Specify a deep clone.
   * @returns {Buffer} Returns the cloned buffer.
   */
  function cloneBuffer(buffer, isDeep) {
    if (isDeep) {
      return buffer.slice();
    }
    var result = new buffer.constructor(buffer.length);
    buffer.copy(result);
    return result;
  }

  /**
   * Creates a clone of `arrayBuffer`.
   *
   * @private
   * @param {ArrayBuffer} arrayBuffer The array buffer to clone.
   * @returns {ArrayBuffer} Returns the cloned array buffer.
   */
  function cloneArrayBuffer(arrayBuffer) {
    var result = new arrayBuffer.constructor(arrayBuffer.byteLength);
    new Uint8Array(result).set(new Uint8Array(arrayBuffer));
    return result;
  }

  /**
   * Creates a clone of `dataView`.
   *
   * @private
   * @param {Object} dataView The data view to clone.
   * @param {boolean} [isDeep] Specify a deep clone.
   * @returns {Object} Returns the cloned data view.
   */
  function cloneDataView(dataView, isDeep) {
    var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;
    return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);
  }

  /**
   * Creates a clone of `map`.
   *
   * @private
   * @param {Object} map The map to clone.
   * @param {Function} cloneFunc The function to clone values.
   * @param {boolean} [isDeep] Specify a deep clone.
   * @returns {Object} Returns the cloned map.
   */
  function cloneMap(map, isDeep, cloneFunc) {
    var array = isDeep ? cloneFunc(mapToArray(map), true) : mapToArray(map);
    return arrayReduce(array, addMapEntry, new map.constructor);
  }

  /**
   * Creates a clone of `regexp`.
   *
   * @private
   * @param {Object} regexp The regexp to clone.
   * @returns {Object} Returns the cloned regexp.
   */
  function cloneRegExp(regexp) {
    var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));
    result.lastIndex = regexp.lastIndex;
    return result;
  }

  /**
   * Creates a clone of `set`.
   *
   * @private
   * @param {Object} set The set to clone.
   * @param {Function} cloneFunc The function to clone values.
   * @param {boolean} [isDeep] Specify a deep clone.
   * @returns {Object} Returns the cloned set.
   */
  function cloneSet(set, isDeep, cloneFunc) {
    var array = isDeep ? cloneFunc(setToArray(set), true) : setToArray(set);
    return arrayReduce(array, addSetEntry, new set.constructor);
  }

  /**
   * Creates a clone of the `symbol` object.
   *
   * @private
   * @param {Object} symbol The symbol object to clone.
   * @returns {Object} Returns the cloned symbol object.
   */
  function cloneSymbol(symbol) {
    return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};
  }

  /**
   * Creates a clone of `typedArray`.
   *
   * @private
   * @param {Object} typedArray The typed array to clone.
   * @param {boolean} [isDeep] Specify a deep clone.
   * @returns {Object} Returns the cloned typed array.
   */
  function cloneTypedArray(typedArray, isDeep) {
    var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;
    return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);
  }

  /**
   * Copies the values of `source` to `array`.
   *
   * @private
   * @param {Array} source The array to copy values from.
   * @param {Array} [array=[]] The array to copy values to.
   * @returns {Array} Returns `array`.
   */
  function copyArray(source, array) {
    var index = -1,
        length = source.length;

    array || (array = Array(length));
    while (++index < length) {
      array[index] = source[index];
    }
    return array;
  }

  /**
   * Copies properties of `source` to `object`.
   *
   * @private
   * @param {Object} source The object to copy properties from.
   * @param {Array} props The property identifiers to copy.
   * @param {Object} [object={}] The object to copy properties to.
   * @param {Function} [customizer] The function to customize copied values.
   * @returns {Object} Returns `object`.
   */
  function copyObject(source, props, object, customizer) {
    object || (object = {});

    var index = -1,
        length = props.length;

    while (++index < length) {
      var key = props[index];

      var newValue = customizer
        ? customizer(object[key], source[key], key, object, source)
        : undefined;

      assignValue(object, key, newValue === undefined ? source[key] : newValue);
    }
    return object;
  }

  /**
   * Copies own symbol properties of `source` to `object`.
   *
   * @private
   * @param {Object} source The object to copy symbols from.
   * @param {Object} [object={}] The object to copy symbols to.
   * @returns {Object} Returns `object`.
   */
  function copySymbols(source, object) {
    return copyObject(source, getSymbols(source), object);
  }

  /**
   * Creates an array of own enumerable property names and symbols of `object`.
   *
   * @private
   * @param {Object} object The object to query.
   * @returns {Array} Returns the array of property names and symbols.
   */
  function getAllKeys(object) {
    return baseGetAllKeys(object, keys, getSymbols);
  }

  /**
   * Gets the data for `map`.
   *
   * @private
   * @param {Object} map The map to query.
   * @param {string} key The reference key.
   * @returns {*} Returns the map data.
   */
  function getMapData(map, key) {
    var data = map.__data__;
    return isKeyable(key)
      ? data[typeof key == 'string' ? 'string' : 'hash']
      : data.map;
  }

  /**
   * Gets the native function at `key` of `object`.
   *
   * @private
   * @param {Object} object The object to query.
   * @param {string} key The key of the method to get.
   * @returns {*} Returns the function if it's native, else `undefined`.
   */
  function getNative(object, key) {
    var value = getValue(object, key);
    return baseIsNative(value) ? value : undefined;
  }

  /**
   * Creates an array of the own enumerable symbol properties of `object`.
   *
   * @private
   * @param {Object} object The object to query.
   * @returns {Array} Returns the array of symbols.
   */
  var getSymbols = nativeGetSymbols ? overArg(nativeGetSymbols, Object) : stubArray;

  /**
   * Gets the `toStringTag` of `value`.
   *
   * @private
   * @param {*} value The value to query.
   * @returns {string} Returns the `toStringTag`.
   */
  var getTag = baseGetTag;

  // Fallback for data views, maps, sets, and weak maps in IE 11,
  // for data views in Edge < 14, and promises in Node.js.
  if ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||
      (Map && getTag(new Map) != mapTag) ||
      (Promise && getTag(Promise.resolve()) != promiseTag) ||
      (Set && getTag(new Set) != setTag) ||
      (WeakMap && getTag(new WeakMap) != weakMapTag)) {
    getTag = function(value) {
      var result = objectToString.call(value),
          Ctor = result == objectTag ? value.constructor : undefined,
          ctorString = Ctor ? toSource(Ctor) : undefined;

      if (ctorString) {
        switch (ctorString) {
          case dataViewCtorString: return dataViewTag;
          case mapCtorString: return mapTag;
          case promiseCtorString: return promiseTag;
          case setCtorString: return setTag;
          case weakMapCtorString: return weakMapTag;
        }
      }
      return result;
    };
  }

  /**
   * Initializes an array clone.
   *
   * @private
   * @param {Array} array The array to clone.
   * @returns {Array} Returns the initialized clone.
   */
  function initCloneArray(array) {
    var length = array.length,
        result = array.constructor(length);

    // Add properties assigned by `RegExp#exec`.
    if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {
      result.index = array.index;
      result.input = array.input;
    }
    return result;
  }

  /**
   * Initializes an object clone.
   *
   * @private
   * @param {Object} object The object to clone.
   * @returns {Object} Returns the initialized clone.
   */
  function initCloneObject(object) {
    return (typeof object.constructor == 'function' && !isPrototype(object))
      ? baseCreate(getPrototype(object))
      : {};
  }

  /**
   * Initializes an object clone based on its `toStringTag`.
   *
   * **Note:** This function only supports cloning values with tags of
   * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.
   *
   * @private
   * @param {Object} object The object to clone.
   * @param {string} tag The `toStringTag` of the object to clone.
   * @param {Function} cloneFunc The function to clone values.
   * @param {boolean} [isDeep] Specify a deep clone.
   * @returns {Object} Returns the initialized clone.
   */
  function initCloneByTag(object, tag, cloneFunc, isDeep) {
    var Ctor = object.constructor;
    switch (tag) {
      case arrayBufferTag:
        return cloneArrayBuffer(object);

      case boolTag:
      case dateTag:
        return new Ctor(+object);

      case dataViewTag:
        return cloneDataView(object, isDeep);

      case float32Tag: case float64Tag:
      case int8Tag: case int16Tag: case int32Tag:
      case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:
        return cloneTypedArray(object, isDeep);

      case mapTag:
        return cloneMap(object, isDeep, cloneFunc);

      case numberTag:
      case stringTag:
        return new Ctor(object);

      case regexpTag:
        return cloneRegExp(object);

      case setTag:
        return cloneSet(object, isDeep, cloneFunc);

      case symbolTag:
        return cloneSymbol(object);
    }
  }

  /**
   * Checks if `value` is a valid array-like index.
   *
   * @private
   * @param {*} value The value to check.
   * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.
   * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.
   */
  function isIndex(value, length) {
    length = length == null ? MAX_SAFE_INTEGER : length;
    return !!length &&
      (typeof value == 'number' || reIsUint.test(value)) &&
      (value > -1 && value % 1 == 0 && value < length);
  }

  /**
   * Checks if `value` is suitable for use as unique object key.
   *
   * @private
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is suitable, else `false`.
   */
  function isKeyable(value) {
    var type = typeof value;
    return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')
      ? (value !== '__proto__')
      : (value === null);
  }

  /**
   * Checks if `func` has its source masked.
   *
   * @private
   * @param {Function} func The function to check.
   * @returns {boolean} Returns `true` if `func` is masked, else `false`.
   */
  function isMasked(func) {
    return !!maskSrcKey && (maskSrcKey in func);
  }

  /**
   * Checks if `value` is likely a prototype object.
   *
   * @private
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.
   */
  function isPrototype(value) {
    var Ctor = value && value.constructor,
        proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;

    return value === proto;
  }

  /**
   * Converts `func` to its source code.
   *
   * @private
   * @param {Function} func The function to process.
   * @returns {string} Returns the source code.
   */
  function toSource(func) {
    if (func != null) {
      try {
        return funcToString.call(func);
      } catch (e) {}
      try {
        return (func + '');
      } catch (e) {}
    }
    return '';
  }

  /**
   * This method is like `_.clone` except that it recursively clones `value`.
   *
   * @static
   * @memberOf _
   * @since 1.0.0
   * @category Lang
   * @param {*} value The value to recursively clone.
   * @returns {*} Returns the deep cloned value.
   * @see _.clone
   * @example
   *
   * var objects = [{ 'a': 1 }, { 'b': 2 }];
   *
   * var deep = _.cloneDeep(objects);
   * console.log(deep[0] === objects[0]);
   * // => false
   */
  function cloneDeep(value) {
    return baseClone(value, true, true);
  }

  /**
   * Performs a
   * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
   * comparison between two values to determine if they are equivalent.
   *
   * @static
   * @memberOf _
   * @since 4.0.0
   * @category Lang
   * @param {*} value The value to compare.
   * @param {*} other The other value to compare.
   * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
   * @example
   *
   * var object = { 'a': 1 };
   * var other = { 'a': 1 };
   *
   * _.eq(object, object);
   * // => true
   *
   * _.eq(object, other);
   * // => false
   *
   * _.eq('a', 'a');
   * // => true
   *
   * _.eq('a', Object('a'));
   * // => false
   *
   * _.eq(NaN, NaN);
   * // => true
   */
  function eq(value, other) {
    return value === other || (value !== value && other !== other);
  }

  /**
   * Checks if `value` is likely an `arguments` object.
   *
   * @static
   * @memberOf _
   * @since 0.1.0
   * @category Lang
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is an `arguments` object,
   *  else `false`.
   * @example
   *
   * _.isArguments(function() { return arguments; }());
   * // => true
   *
   * _.isArguments([1, 2, 3]);
   * // => false
   */
  function isArguments(value) {
    // Safari 8.1 makes `arguments.callee` enumerable in strict mode.
    return isArrayLikeObject(value) && hasOwnProperty.call(value, 'callee') &&
      (!propertyIsEnumerable.call(value, 'callee') || objectToString.call(value) == argsTag);
  }

  /**
   * Checks if `value` is classified as an `Array` object.
   *
   * @static
   * @memberOf _
   * @since 0.1.0
   * @category Lang
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is an array, else `false`.
   * @example
   *
   * _.isArray([1, 2, 3]);
   * // => true
   *
   * _.isArray(document.body.children);
   * // => false
   *
   * _.isArray('abc');
   * // => false
   *
   * _.isArray(_.noop);
   * // => false
   */
  var isArray = Array.isArray;

  /**
   * Checks if `value` is array-like. A value is considered array-like if it's
   * not a function and has a `value.length` that's an integer greater than or
   * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.
   *
   * @static
   * @memberOf _
   * @since 4.0.0
   * @category Lang
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is array-like, else `false`.
   * @example
   *
   * _.isArrayLike([1, 2, 3]);
   * // => true
   *
   * _.isArrayLike(document.body.children);
   * // => true
   *
   * _.isArrayLike('abc');
   * // => true
   *
   * _.isArrayLike(_.noop);
   * // => false
   */
  function isArrayLike(value) {
    return value != null && isLength(value.length) && !isFunction(value);
  }

  /**
   * This method is like `_.isArrayLike` except that it also checks if `value`
   * is an object.
   *
   * @static
   * @memberOf _
   * @since 4.0.0
   * @category Lang
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is an array-like object,
   *  else `false`.
   * @example
   *
   * _.isArrayLikeObject([1, 2, 3]);
   * // => true
   *
   * _.isArrayLikeObject(document.body.children);
   * // => true
   *
   * _.isArrayLikeObject('abc');
   * // => false
   *
   * _.isArrayLikeObject(_.noop);
   * // => false
   */
  function isArrayLikeObject(value) {
    return isObjectLike(value) && isArrayLike(value);
  }

  /**
   * Checks if `value` is a buffer.
   *
   * @static
   * @memberOf _
   * @since 4.3.0
   * @category Lang
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.
   * @example
   *
   * _.isBuffer(new Buffer(2));
   * // => true
   *
   * _.isBuffer(new Uint8Array(2));
   * // => false
   */
  var isBuffer = nativeIsBuffer || stubFalse;

  /**
   * Checks if `value` is classified as a `Function` object.
   *
   * @static
   * @memberOf _
   * @since 0.1.0
   * @category Lang
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is a function, else `false`.
   * @example
   *
   * _.isFunction(_);
   * // => true
   *
   * _.isFunction(/abc/);
   * // => false
   */
  function isFunction(value) {
    // The use of `Object#toString` avoids issues with the `typeof` operator
    // in Safari 8-9 which returns 'object' for typed array and other constructors.
    var tag = isObject(value) ? objectToString.call(value) : '';
    return tag == funcTag || tag == genTag;
  }

  /**
   * Checks if `value` is a valid array-like length.
   *
   * **Note:** This method is loosely based on
   * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
   *
   * @static
   * @memberOf _
   * @since 4.0.0
   * @category Lang
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.
   * @example
   *
   * _.isLength(3);
   * // => true
   *
   * _.isLength(Number.MIN_VALUE);
   * // => false
   *
   * _.isLength(Infinity);
   * // => false
   *
   * _.isLength('3');
   * // => false
   */
  function isLength(value) {
    return typeof value == 'number' &&
      value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
  }

  /**
   * Checks if `value` is the
   * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
   * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
   *
   * @static
   * @memberOf _
   * @since 0.1.0
   * @category Lang
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is an object, else `false`.
   * @example
   *
   * _.isObject({});
   * // => true
   *
   * _.isObject([1, 2, 3]);
   * // => true
   *
   * _.isObject(_.noop);
   * // => true
   *
   * _.isObject(null);
   * // => false
   */
  function isObject(value) {
    var type = typeof value;
    return !!value && (type == 'object' || type == 'function');
  }

  /**
   * Checks if `value` is object-like. A value is object-like if it's not `null`
   * and has a `typeof` result of "object".
   *
   * @static
   * @memberOf _
   * @since 4.0.0
   * @category Lang
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
   * @example
   *
   * _.isObjectLike({});
   * // => true
   *
   * _.isObjectLike([1, 2, 3]);
   * // => true
   *
   * _.isObjectLike(_.noop);
   * // => false
   *
   * _.isObjectLike(null);
   * // => false
   */
  function isObjectLike(value) {
    return !!value && typeof value == 'object';
  }

  /**
   * Creates an array of the own enumerable property names of `object`.
   *
   * **Note:** Non-object values are coerced to objects. See the
   * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
   * for more details.
   *
   * @static
   * @since 0.1.0
   * @memberOf _
   * @category Object
   * @param {Object} object The object to query.
   * @returns {Array} Returns the array of property names.
   * @example
   *
   * function Foo() {
   *   this.a = 1;
   *   this.b = 2;
   * }
   *
   * Foo.prototype.c = 3;
   *
   * _.keys(new Foo);
   * // => ['a', 'b'] (iteration order is not guaranteed)
   *
   * _.keys('hi');
   * // => ['0', '1']
   */
  function keys(object) {
    return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);
  }

  /**
   * This method returns a new empty array.
   *
   * @static
   * @memberOf _
   * @since 4.13.0
   * @category Util
   * @returns {Array} Returns the new empty array.
   * @example
   *
   * var arrays = _.times(2, _.stubArray);
   *
   * console.log(arrays);
   * // => [[], []]
   *
   * console.log(arrays[0] === arrays[1]);
   * // => false
   */
  function stubArray() {
    return [];
  }

  /**
   * This method returns `false`.
   *
   * @static
   * @memberOf _
   * @since 4.13.0
   * @category Util
   * @returns {boolean} Returns `false`.
   * @example
   *
   * _.times(2, _.stubFalse);
   * // => [false, false]
   */
  function stubFalse() {
    return false;
  }

  module.exports = cloneDeep;
  });

  var hasProperty = function has(object, key) {
    return Object.prototype.hasOwnProperty.call(object, key);
  };

  function _extends$6() { _extends$6 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$6.apply(this, arguments); }


  /**
   * Translates strings with interpolation & pluralization support.
   * Extensible with custom dictionaries and pluralization functions.
   *
   * Borrows heavily from and inspired by Polyglot https://github.com/airbnb/polyglot.js,
   * basically a stripped-down version of it. Differences: pluralization functions are not hardcoded
   * and can be easily added among with dictionaries, nested objects are used for pluralization
   * as opposed to `||||` delimeter
   *
   * Usage example: `translator.translate('files_chosen', {smart_count: 3})`
   */


  var Translator = /*#__PURE__*/function () {
    /**
     * @param {object|Array<object>} locales - locale or list of locales.
     */
    function Translator(locales) {
      var _this = this;

      this.locale = {
        strings: {},
        pluralize: function pluralize(n) {
          if (n === 1) {
            return 0;
          }

          return 1;
        }
      };

      if (Array.isArray(locales)) {
        locales.forEach(function (locale) {
          return _this._apply(locale);
        });
      } else {
        this._apply(locales);
      }
    }

    var _proto = Translator.prototype;

    _proto._apply = function _apply(locale) {
      if (!locale || !locale.strings) {
        return;
      }

      var prevLocale = this.locale;
      this.locale = _extends$6({}, prevLocale, {
        strings: _extends$6({}, prevLocale.strings, locale.strings)
      });
      this.locale.pluralize = locale.pluralize || prevLocale.pluralize;
    }
    /**
     * Takes a string with placeholder variables like `%{smart_count} file selected`
     * and replaces it with values from options `{smart_count: 5}`
     *
     * @license https://github.com/airbnb/polyglot.js/blob/master/LICENSE
     * taken from https://github.com/airbnb/polyglot.js/blob/master/lib/polyglot.js#L299
     *
     * @param {string} phrase that needs interpolation, with placeholders
     * @param {object} options with values that will be used to replace placeholders
     * @returns {any[]} interpolated
     */
    ;

    _proto.interpolate = function interpolate(phrase, options) {
      var _String$prototype = String.prototype,
          split = _String$prototype.split,
          replace = _String$prototype.replace;
      var dollarRegex = /\$/g;
      var dollarBillsYall = '$$$$';
      var interpolated = [phrase];

      for (var arg in options) {
        if (arg !== '_' && hasProperty(options, arg)) {
          // Ensure replacement value is escaped to prevent special $-prefixed
          // regex replace tokens. the "$$$$" is needed because each "$" needs to
          // be escaped with "$" itself, and we need two in the resulting output.
          var replacement = options[arg];

          if (typeof replacement === 'string') {
            replacement = replace.call(options[arg], dollarRegex, dollarBillsYall);
          } // We create a new `RegExp` each time instead of using a more-efficient
          // string replace so that the same argument can be replaced multiple times
          // in the same phrase.


          interpolated = insertReplacement(interpolated, new RegExp("%\\{" + arg + "\\}", 'g'), replacement);
        }
      }

      return interpolated;

      function insertReplacement(source, rx, replacement) {
        var newParts = [];
        source.forEach(function (chunk) {
          // When the source contains multiple placeholders for interpolation,
          // we should ignore chunks that are not strings, because those
          // can be JSX objects and will be otherwise incorrectly turned into strings.
          // Without this condition we’d get this: [object Object] hello [object Object] my <button>
          if (typeof chunk !== 'string') {
            return newParts.push(chunk);
          }

          split.call(chunk, rx).forEach(function (raw, i, list) {
            if (raw !== '') {
              newParts.push(raw);
            } // Interlace with the `replacement` value


            if (i < list.length - 1) {
              newParts.push(replacement);
            }
          });
        });
        return newParts;
      }
    }
    /**
     * Public translate method
     *
     * @param {string} key
     * @param {object} options with values that will be used later to replace placeholders in string
     * @returns {string} translated (and interpolated)
     */
    ;

    _proto.translate = function translate(key, options) {
      return this.translateArray(key, options).join('');
    }
    /**
     * Get a translation and return the translated and interpolated parts as an array.
     *
     * @param {string} key
     * @param {object} options with values that will be used to replace placeholders
     * @returns {Array} The translated and interpolated parts, in order.
     */
    ;

    _proto.translateArray = function translateArray(key, options) {
      if (!hasProperty(this.locale.strings, key)) {
        throw new Error("missing string: " + key);
      }

      var string = this.locale.strings[key];
      var hasPluralForms = typeof string === 'object';

      if (hasPluralForms) {
        if (options && typeof options.smart_count !== 'undefined') {
          var plural = this.locale.pluralize(options.smart_count);
          return this.interpolate(string[plural], options);
        }

        throw new Error('Attempted to use a string with plural forms, but no value was given for %{smart_count}');
      }

      return this.interpolate(string, options);
    };

    return Translator;
  }();

  /**
  * Create an event emitter with namespaces
  * @name createNamespaceEmitter
  * @example
  * var emitter = require('./index')()
  *
  * emitter.on('*', function () {
  *   console.log('all events emitted', this.event)
  * })
  *
  * emitter.on('example', function () {
  *   console.log('example event emitted')
  * })
  */
  var namespaceEmitter = function createNamespaceEmitter () {
    var emitter = {};
    var _fns = emitter._fns = {};

    /**
    * Emit an event. Optionally namespace the event. Handlers are fired in the order in which they were added with exact matches taking precedence. Separate the namespace and event with a `:`
    * @name emit
    * @param {String} event – the name of the event, with optional namespace
    * @param {...*} data – up to 6 arguments that are passed to the event listener
    * @example
    * emitter.emit('example')
    * emitter.emit('demo:test')
    * emitter.emit('data', { example: true}, 'a string', 1)
    */
    emitter.emit = function emit (event, arg1, arg2, arg3, arg4, arg5, arg6) {
      var toEmit = getListeners(event);

      if (toEmit.length) {
        emitAll(event, toEmit, [arg1, arg2, arg3, arg4, arg5, arg6]);
      }
    };

    /**
    * Create en event listener.
    * @name on
    * @param {String} event
    * @param {Function} fn
    * @example
    * emitter.on('example', function () {})
    * emitter.on('demo', function () {})
    */
    emitter.on = function on (event, fn) {
      if (!_fns[event]) {
        _fns[event] = [];
      }

      _fns[event].push(fn);
    };

    /**
    * Create en event listener that fires once.
    * @name once
    * @param {String} event
    * @param {Function} fn
    * @example
    * emitter.once('example', function () {})
    * emitter.once('demo', function () {})
    */
    emitter.once = function once (event, fn) {
      function one () {
        fn.apply(this, arguments);
        emitter.off(event, one);
      }
      this.on(event, one);
    };

    /**
    * Stop listening to an event. Stop all listeners on an event by only passing the event name. Stop a single listener by passing that event handler as a callback.
    * You must be explicit about what will be unsubscribed: `emitter.off('demo')` will unsubscribe an `emitter.on('demo')` listener,
    * `emitter.off('demo:example')` will unsubscribe an `emitter.on('demo:example')` listener
    * @name off
    * @param {String} event
    * @param {Function} [fn] – the specific handler
    * @example
    * emitter.off('example')
    * emitter.off('demo', function () {})
    */
    emitter.off = function off (event, fn) {
      var keep = [];

      if (event && fn) {
        var fns = this._fns[event];
        var i = 0;
        var l = fns ? fns.length : 0;

        for (i; i < l; i++) {
          if (fns[i] !== fn) {
            keep.push(fns[i]);
          }
        }
      }

      keep.length ? this._fns[event] = keep : delete this._fns[event];
    };

    function getListeners (e) {
      var out = _fns[e] ? _fns[e] : [];
      var idx = e.indexOf(':');
      var args = (idx === -1) ? [e] : [e.substring(0, idx), e.substring(idx + 1)];

      var keys = Object.keys(_fns);
      var i = 0;
      var l = keys.length;

      for (i; i < l; i++) {
        var key = keys[i];
        if (key === '*') {
          out = out.concat(_fns[key]);
        }

        if (args.length === 2 && args[0] === key) {
          out = out.concat(_fns[key]);
          break
        }
      }

      return out
    }

    function emitAll (e, fns, args) {
      var i = 0;
      var l = fns.length;

      for (i; i < l; i++) {
        if (!fns[i]) break
        fns[i].event = e;
        fns[i].apply(fns[i], args);
      }
    }

    return emitter
  };

  var pad$1 = function pad (num, size) {
    var s = '000000000' + num;
    return s.substr(s.length - size);
  };

  var env = typeof window === 'object' ? window : self;
  var globalCount = Object.keys(env).length;
  var mimeTypesLength = navigator.mimeTypes ? navigator.mimeTypes.length : 0;
  var clientId = pad$1((mimeTypesLength +
    navigator.userAgent.length).toString(36) +
    globalCount.toString(36), 4);

  var fingerprint_browser = function fingerprint () {
    return clientId;
  };

  var getRandomValue;

  var crypto = typeof window !== 'undefined' &&
    (window.crypto || window.msCrypto) ||
    typeof self !== 'undefined' &&
    self.crypto;

  if (crypto) {
      var lim = Math.pow(2, 32) - 1;
      getRandomValue = function () {
          return Math.abs(crypto.getRandomValues(new Uint32Array(1))[0] / lim);
      };
  } else {
      getRandomValue = Math.random;
  }

  var getRandomValue_browser = getRandomValue;

  /**
   * cuid.js
   * Collision-resistant UID generator for browsers and node.
   * Sequential for fast db lookups and recency sorting.
   * Safe for element IDs and server-side lookups.
   *
   * Extracted from CLCTR
   *
   * Copyright (c) Eric Elliott 2012
   * MIT License
   */

  var c$2 = 0,
    blockSize = 4,
    base = 36,
    discreteValues = Math.pow(base, blockSize);

  function randomBlock () {
    return pad$1((getRandomValue_browser() *
      discreteValues << 0)
      .toString(base), blockSize);
  }

  function safeCounter () {
    c$2 = c$2 < discreteValues ? c$2 : 0;
    c$2++; // this is not subliminal
    return c$2 - 1;
  }

  function cuid () {
    // Starting with a lowercase letter makes
    // it HTML element ID friendly.
    var letter = 'c', // hard-coded allows for sequential access

      // timestamp
      // warning: this exposes the exact date and time
      // that the uid was created.
      timestamp = (new Date().getTime()).toString(base),

      // Prevent same-machine collisions.
      counter = pad$1(safeCounter().toString(base), blockSize),

      // A few chars to generate distinct ids for different
      // clients (so different computers are far less
      // likely to generate the same id)
      print = fingerprint_browser(),

      // Grab some more chars from Math.random()
      random = randomBlock() + randomBlock();

    return letter + timestamp + counter + print + random;
  }

  cuid.slug = function slug () {
    var date = new Date().getTime().toString(36),
      counter = safeCounter().toString(36).slice(-4),
      print = fingerprint_browser().slice(0, 1) +
        fingerprint_browser().slice(-1),
      random = randomBlock().slice(-2);

    return date.slice(-2) +
      counter + print + random;
  };

  cuid.isCuid = function isCuid (stringToCheck) {
    if (typeof stringToCheck !== 'string') return false;
    if (stringToCheck.startsWith('c')) return true;
    return false;
  };

  cuid.isSlug = function isSlug (stringToCheck) {
    if (typeof stringToCheck !== 'string') return false;
    var stringLength = stringToCheck.length;
    if (stringLength >= 7 && stringLength <= 10) return true;
    return false;
  };

  cuid.fingerprint = fingerprint_browser;

  var cuid_1 = cuid;

  // Adapted from https://github.com/Flet/prettier-bytes/
  // Changing 1000 bytes to 1024, so we can keep uppercase KB vs kB
  // ISC License (c) Dan Flettre https://github.com/Flet/prettier-bytes/blob/master/LICENSE
  var prettierBytes = function prettierBytes (num) {
    if (typeof num !== 'number' || isNaN(num)) {
      throw new TypeError('Expected a number, got ' + typeof num)
    }

    var neg = num < 0;
    var units = ['B', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];

    if (neg) {
      num = -num;
    }

    if (num < 1) {
      return (neg ? '-' : '') + num + ' B'
    }

    var exponent = Math.min(Math.floor(Math.log(num) / Math.log(1024)), units.length - 1);
    num = Number(num / Math.pow(1024, exponent));
    var unit = units[exponent];

    if (num >= 10 || num % 1 === 0) {
      // Do not show decimals when the number is two-digit, or if the number has no
      // decimal component.
      return (neg ? '-' : '') + num.toFixed(0) + ' ' + unit
    } else {
      return (neg ? '-' : '') + num.toFixed(1) + ' ' + unit
    }
  };

  /* jshint node: true */

  /**
    # wildcard

    Very simple wildcard matching, which is designed to provide the same
    functionality that is found in the
    [eve](https://github.com/adobe-webplatform/eve) eventing library.

    ## Usage

    It works with strings:

    <<< examples/strings.js

    Arrays:

    <<< examples/arrays.js

    Objects (matching against keys):

    <<< examples/objects.js

    While the library works in Node, if you are are looking for file-based
    wildcard matching then you should have a look at:

    <https://github.com/isaacs/node-glob>
  **/

  function WildcardMatcher(text, separator) {
    this.text = text = text || '';
    this.hasWild = ~text.indexOf('*');
    this.separator = separator;
    this.parts = text.split(separator);
  }

  WildcardMatcher.prototype.match = function(input) {
    var matches = true;
    var parts = this.parts;
    var ii;
    var partsCount = parts.length;
    var testParts;

    if (typeof input == 'string' || input instanceof String) {
      if (!this.hasWild && this.text != input) {
        matches = false;
      } else {
        testParts = (input || '').split(this.separator);
        for (ii = 0; matches && ii < partsCount; ii++) {
          if (parts[ii] === '*')  {
            continue;
          } else if (ii < testParts.length) {
            matches = parts[ii] === testParts[ii];
          } else {
            matches = false;
          }
        }

        // If matches, then return the component parts
        matches = matches && testParts;
      }
    }
    else if (typeof input.splice == 'function') {
      matches = [];

      for (ii = input.length; ii--; ) {
        if (this.match(input[ii])) {
          matches[matches.length] = input[ii];
        }
      }
    }
    else if (typeof input == 'object') {
      matches = {};

      for (var key in input) {
        if (this.match(key)) {
          matches[key] = input[key];
        }
      }
    }

    return matches;
  };

  var wildcard = function(text, test, separator) {
    var matcher = new WildcardMatcher(text, separator || /[\/\.]/);
    if (typeof test != 'undefined') {
      return matcher.match(test);
    }

    return matcher;
  };

  var reMimePartSplit = /[\/\+\.]/;

  /**
    # mime-match

    A simple function to checker whether a target mime type matches a mime-type
    pattern (e.g. image/jpeg matches image/jpeg OR image/*).

    ## Example Usage

    <<< example.js

  **/
  var mimeMatch = function(target, pattern) {
    function test(pattern) {
      var result = wildcard(pattern, target, reMimePartSplit);

      // ensure that we have a valid mime type (should have two parts)
      return result && result.length >= 2;
    }

    return pattern ? test(pattern.split(';')[0]) : test;
  };

  function _extends$5() { _extends$5 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$5.apply(this, arguments); }

  /**
   * Default store that keeps state in a simple object.
   */
  var DefaultStore = /*#__PURE__*/function () {
    function DefaultStore() {
      this.state = {};
      this.callbacks = [];
    }

    var _proto = DefaultStore.prototype;

    _proto.getState = function getState() {
      return this.state;
    };

    _proto.setState = function setState(patch) {
      var prevState = _extends$5({}, this.state);

      var nextState = _extends$5({}, this.state, patch);

      this.state = nextState;

      this._publish(prevState, nextState, patch);
    };

    _proto.subscribe = function subscribe(listener) {
      var _this = this;

      this.callbacks.push(listener);
      return function () {
        // Remove the listener.
        _this.callbacks.splice(_this.callbacks.indexOf(listener), 1);
      };
    };

    _proto._publish = function _publish() {
      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      this.callbacks.forEach(function (listener) {
        listener.apply(void 0, args);
      });
    };

    return DefaultStore;
  }();

  DefaultStore.VERSION = "1.2.7";

  var lib$3 = function defaultStore() {
    return new DefaultStore();
  };

  /**
   * Takes a full filename string and returns an object {name, extension}
   *
   * @param {string} fullFileName
   * @returns {object} {name, extension}
   */
  var getFileNameAndExtension = function getFileNameAndExtension(fullFileName) {
    var lastDot = fullFileName.lastIndexOf('.'); // these count as no extension: "no-dot", "trailing-dot."

    if (lastDot === -1 || lastDot === fullFileName.length - 1) {
      return {
        name: fullFileName,
        extension: undefined
      };
    }

    return {
      name: fullFileName.slice(0, lastDot),
      extension: fullFileName.slice(lastDot + 1)
    };
  };

  // ___Why not add the mime-types package?
  //    It's 19.7kB gzipped, and we only need mime types for well-known extensions (for file previews).
  // ___Where to take new extensions from?
  //    https://github.com/jshttp/mime-db/blob/master/db.json
  var mimeTypes = {
    md: 'text/markdown',
    markdown: 'text/markdown',
    mp4: 'video/mp4',
    mp3: 'audio/mp3',
    svg: 'image/svg+xml',
    jpg: 'image/jpeg',
    png: 'image/png',
    gif: 'image/gif',
    heic: 'image/heic',
    heif: 'image/heif',
    yaml: 'text/yaml',
    yml: 'text/yaml',
    csv: 'text/csv',
    tsv: 'text/tab-separated-values',
    tab: 'text/tab-separated-values',
    avi: 'video/x-msvideo',
    mks: 'video/x-matroska',
    mkv: 'video/x-matroska',
    mov: 'video/quicktime',
    doc: 'application/msword',
    docm: 'application/vnd.ms-word.document.macroenabled.12',
    docx: 'application/vnd.openxmlformats-officedocument.wordprocessingml.document',
    dot: 'application/msword',
    dotm: 'application/vnd.ms-word.template.macroenabled.12',
    dotx: 'application/vnd.openxmlformats-officedocument.wordprocessingml.template',
    xla: 'application/vnd.ms-excel',
    xlam: 'application/vnd.ms-excel.addin.macroenabled.12',
    xlc: 'application/vnd.ms-excel',
    xlf: 'application/x-xliff+xml',
    xlm: 'application/vnd.ms-excel',
    xls: 'application/vnd.ms-excel',
    xlsb: 'application/vnd.ms-excel.sheet.binary.macroenabled.12',
    xlsm: 'application/vnd.ms-excel.sheet.macroenabled.12',
    xlsx: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',
    xlt: 'application/vnd.ms-excel',
    xltm: 'application/vnd.ms-excel.template.macroenabled.12',
    xltx: 'application/vnd.openxmlformats-officedocument.spreadsheetml.template',
    xlw: 'application/vnd.ms-excel',
    txt: 'text/plain',
    text: 'text/plain',
    conf: 'text/plain',
    log: 'text/plain',
    pdf: 'application/pdf',
    zip: 'application/zip',
    '7z': 'application/x-7z-compressed',
    rar: 'application/x-rar-compressed',
    tar: 'application/x-tar',
    gz: 'application/gzip',
    dmg: 'application/x-apple-diskimage'
  };

  var getFileType = function getFileType(file) {
    var fileExtension = file.name ? getFileNameAndExtension(file.name).extension : null;
    fileExtension = fileExtension ? fileExtension.toLowerCase() : null;

    if (file.type) {
      // if mime type is set in the file object already, use that
      return file.type;
    }

    if (fileExtension && mimeTypes[fileExtension]) {
      // else, see if we can map extension to a mime type
      return mimeTypes[fileExtension];
    } // if all fails, fall back to a generic byte stream type


    return 'application/octet-stream';
  };

  /**
   * Takes a file object and turns it into fileID, by converting file.name to lowercase,
   * removing extra characters and adding type, size and lastModified
   *
   * @param {object} file
   * @returns {string} the fileID
   */
  var generateFileID = function generateFileID(file) {
    // It's tempting to do `[items].filter(Boolean).join('-')` here, but that
    // is slower! simple string concatenation is fast
    var id = 'uppy';

    if (typeof file.name === 'string') {
      id += "-" + encodeFilename(file.name.toLowerCase());
    }

    if (file.type !== undefined) {
      id += "-" + file.type;
    }

    if (file.meta && typeof file.meta.relativePath === 'string') {
      id += "-" + encodeFilename(file.meta.relativePath.toLowerCase());
    }

    if (file.data.size !== undefined) {
      id += "-" + file.data.size;
    }

    if (file.data.lastModified !== undefined) {
      id += "-" + file.data.lastModified;
    }

    return id;
  };

  function encodeFilename(name) {
    var suffix = '';
    return name.replace(/[^A-Z0-9]/ig, function (character) {
      suffix += "-" + encodeCharacter(character);
      return '/';
    }) + suffix;
  }

  function encodeCharacter(character) {
    return character.charCodeAt(0).toString(32);
  }

  /**
   * Array.prototype.findIndex ponyfill for old browsers.
   *
   * @param {Array} array
   * @param {Function} predicate
   * @returns {number}
   */
  var findIndex = function findIndex(array, predicate) {
    for (var i = 0; i < array.length; i++) {
      if (predicate(array[i])) return i;
    }

    return -1;
  };

  // Edge 15.x does not fire 'progress' events on uploads.
  // See https://github.com/transloadit/uppy/issues/945
  // And https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/12224510/
  var supportsUploadProgress = function supportsUploadProgress(userAgent) {
    // Allow passing in userAgent for tests
    if (userAgent == null) {
      userAgent = typeof navigator !== 'undefined' ? navigator.userAgent : null;
    } // Assume it works because basically everything supports progress events.


    if (!userAgent) return true;
    var m = /Edge\/(\d+\.\d+)/.exec(userAgent);
    if (!m) return true;
    var edgeVersion = m[1];

    var _edgeVersion$split = edgeVersion.split('.'),
        major = _edgeVersion$split[0],
        minor = _edgeVersion$split[1];

    major = parseInt(major, 10);
    minor = parseInt(minor, 10); // Worked before:
    // Edge 40.15063.0.0
    // Microsoft EdgeHTML 15.15063

    if (major < 15 || major === 15 && minor < 15063) {
      return true;
    } // Fixed in:
    // Microsoft EdgeHTML 18.18218


    if (major > 18 || major === 18 && minor >= 18218) {
      return true;
    } // other versions don't work.


    return false;
  };

  /**
   * Returns a timestamp in the format of `hours:minutes:seconds`
   */
  var getTimeStamp = function getTimeStamp() {
    var date = new Date();
    var hours = pad(date.getHours().toString());
    var minutes = pad(date.getMinutes().toString());
    var seconds = pad(date.getSeconds().toString());
    return hours + ":" + minutes + ":" + seconds;
  };
  /**
   * Adds zero to strings shorter than two characters
   */


  function pad(str) {
    return str.length !== 2 ? 0 + str : str;
  }

  // Swallow all logs, except errors.
  // default if logger is not set or debug: false


  var justErrorsLogger$1 = {
    debug: function debug() {},
    warn: function warn() {},
    error: function error() {
      var _console;

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      return (_console = console).error.apply(_console, ["[Uppy] [" + getTimeStamp() + "]"].concat(args));
    }
  }; // Print logs to console with namespace + timestamp,
  // set by logger: Uppy.debugLogger or debug: true

  var debugLogger$1 = {
    debug: function debug() {
      // IE 10 doesn’t support console.debug
      var debug = console.debug || console.log;

      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
        args[_key2] = arguments[_key2];
      }

      debug.call.apply(debug, [console, "[Uppy] [" + getTimeStamp() + "]"].concat(args));
    },
    warn: function warn() {
      var _console2;

      for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
        args[_key3] = arguments[_key3];
      }

      return (_console2 = console).warn.apply(_console2, ["[Uppy] [" + getTimeStamp() + "]"].concat(args));
    },
    error: function error() {
      var _console3;

      for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {
        args[_key4] = arguments[_key4];
      }

      return (_console3 = console).error.apply(_console3, ["[Uppy] [" + getTimeStamp() + "]"].concat(args));
    }
  };
  var loggers = {
    justErrorsLogger: justErrorsLogger$1,
    debugLogger: debugLogger$1
  };

  /** Virtual DOM Node */
  function VNode() {}

  /** Global options
   *	@public
   *	@namespace options {Object}
   */
  var options = {

  	/** If `true`, `prop` changes trigger synchronous component updates.
    *	@name syncComponentUpdates
    *	@type Boolean
    *	@default true
    */
  	//syncComponentUpdates: true,

  	/** Processes all created VNodes.
    *	@param {VNode} vnode	A newly-created VNode to normalize/process
    */
  	//vnode(vnode) { }

  	/** Hook invoked after a component is mounted. */
  	// afterMount(component) { }

  	/** Hook invoked after the DOM is updated with a component's latest render. */
  	// afterUpdate(component) { }

  	/** Hook invoked immediately before a component is unmounted. */
  	// beforeUnmount(component) { }
  };

  var stack = [];

  var EMPTY_CHILDREN = [];

  /**
   * JSX/hyperscript reviver.
   * @see http://jasonformat.com/wtf-is-jsx
   * Benchmarks: https://esbench.com/bench/57ee8f8e330ab09900a1a1a0
   *
   * Note: this is exported as both `h()` and `createElement()` for compatibility reasons.
   *
   * Creates a VNode (virtual DOM element). A tree of VNodes can be used as a lightweight representation
   * of the structure of a DOM tree. This structure can be realized by recursively comparing it against
   * the current _actual_ DOM structure, and applying only the differences.
   *
   * `h()`/`createElement()` accepts an element name, a list of attributes/props,
   * and optionally children to append to the element.
   *
   * @example The following DOM tree
   *
   * `<div id="foo" name="bar">Hello!</div>`
   *
   * can be constructed using this function as:
   *
   * `h('div', { id: 'foo', name : 'bar' }, 'Hello!');`
   *
   * @param {string} nodeName	An element name. Ex: `div`, `a`, `span`, etc.
   * @param {Object} attributes	Any attributes/props to set on the created element.
   * @param rest			Additional arguments are taken to be children to append. Can be infinitely nested Arrays.
   *
   * @public
   */
  function h$3(nodeName, attributes) {
  	var children = EMPTY_CHILDREN,
  	    lastSimple,
  	    child,
  	    simple,
  	    i;
  	for (i = arguments.length; i-- > 2;) {
  		stack.push(arguments[i]);
  	}
  	if (attributes && attributes.children != null) {
  		if (!stack.length) stack.push(attributes.children);
  		delete attributes.children;
  	}
  	while (stack.length) {
  		if ((child = stack.pop()) && child.pop !== undefined) {
  			for (i = child.length; i--;) {
  				stack.push(child[i]);
  			}
  		} else {
  			if (typeof child === 'boolean') child = null;

  			if (simple = typeof nodeName !== 'function') {
  				if (child == null) child = '';else if (typeof child === 'number') child = String(child);else if (typeof child !== 'string') simple = false;
  			}

  			if (simple && lastSimple) {
  				children[children.length - 1] += child;
  			} else if (children === EMPTY_CHILDREN) {
  				children = [child];
  			} else {
  				children.push(child);
  			}

  			lastSimple = simple;
  		}
  	}

  	var p = new VNode();
  	p.nodeName = nodeName;
  	p.children = children;
  	p.attributes = attributes == null ? undefined : attributes;
  	p.key = attributes == null ? undefined : attributes.key;

  	// if a "vnode hook" is defined, pass every created VNode to it
  	if (options.vnode !== undefined) options.vnode(p);

  	return p;
  }

  /**
   *  Copy all properties from `props` onto `obj`.
   *  @param {Object} obj		Object onto which properties should be copied.
   *  @param {Object} props	Object from which to copy properties.
   *  @returns obj
   *  @private
   */
  function extend(obj, props) {
    for (var i in props) {
      obj[i] = props[i];
    }return obj;
  }

  /**
   * Call a function asynchronously, as soon as possible. Makes
   * use of HTML Promise to schedule the callback if available,
   * otherwise falling back to `setTimeout` (mainly for IE<11).
   *
   * @param {Function} callback
   */
  var defer = typeof Promise == 'function' ? Promise.resolve().then.bind(Promise.resolve()) : setTimeout;

  /**
   * Clones the given VNode, optionally adding attributes/props and replacing its children.
   * @param {VNode} vnode		The virtual DOM element to clone
   * @param {Object} props	Attributes/props to add when cloning
   * @param {VNode} rest		Any additional arguments will be used as replacement children.
   */
  function cloneElement(vnode, props) {
    return h$3(vnode.nodeName, extend(extend({}, vnode.attributes), props), arguments.length > 2 ? [].slice.call(arguments, 2) : vnode.children);
  }

  // DOM properties that should NOT have "px" added when numeric
  var IS_NON_DIMENSIONAL = /acit|ex(?:s|g|n|p|$)|rph|ows|mnc|ntw|ine[ch]|zoo|^ord/i;

  /** Managed queue of dirty components to be re-rendered */

  var items = [];

  function enqueueRender(component) {
  	if (!component._dirty && (component._dirty = true) && items.push(component) == 1) {
  		(options.debounceRendering || defer)(rerender);
  	}
  }

  function rerender() {
  	var p,
  	    list = items;
  	items = [];
  	while (p = list.pop()) {
  		if (p._dirty) renderComponent(p);
  	}
  }

  /**
   * Check if two nodes are equivalent.
   *
   * @param {Node} node			DOM Node to compare
   * @param {VNode} vnode			Virtual DOM node to compare
   * @param {boolean} [hydrating=false]	If true, ignores component constructors when comparing.
   * @private
   */
  function isSameNodeType(node, vnode, hydrating) {
    if (typeof vnode === 'string' || typeof vnode === 'number') {
      return node.splitText !== undefined;
    }
    if (typeof vnode.nodeName === 'string') {
      return !node._componentConstructor && isNamedNode(node, vnode.nodeName);
    }
    return hydrating || node._componentConstructor === vnode.nodeName;
  }

  /**
   * Check if an Element has a given nodeName, case-insensitively.
   *
   * @param {Element} node	A DOM Element to inspect the name of.
   * @param {String} nodeName	Unnormalized name to compare against.
   */
  function isNamedNode(node, nodeName) {
    return node.normalizedNodeName === nodeName || node.nodeName.toLowerCase() === nodeName.toLowerCase();
  }

  /**
   * Reconstruct Component-style `props` from a VNode.
   * Ensures default/fallback values from `defaultProps`:
   * Own-properties of `defaultProps` not present in `vnode.attributes` are added.
   *
   * @param {VNode} vnode
   * @returns {Object} props
   */
  function getNodeProps(vnode) {
    var props = extend({}, vnode.attributes);
    props.children = vnode.children;

    var defaultProps = vnode.nodeName.defaultProps;
    if (defaultProps !== undefined) {
      for (var i in defaultProps) {
        if (props[i] === undefined) {
          props[i] = defaultProps[i];
        }
      }
    }

    return props;
  }

  /** Create an element with the given nodeName.
   *	@param {String} nodeName
   *	@param {Boolean} [isSvg=false]	If `true`, creates an element within the SVG namespace.
   *	@returns {Element} node
   */
  function createNode(nodeName, isSvg) {
  	var node = isSvg ? document.createElementNS('http://www.w3.org/2000/svg', nodeName) : document.createElement(nodeName);
  	node.normalizedNodeName = nodeName;
  	return node;
  }

  /** Remove a child node from its parent if attached.
   *	@param {Element} node		The node to remove
   */
  function removeNode(node) {
  	var parentNode = node.parentNode;
  	if (parentNode) parentNode.removeChild(node);
  }

  /** Set a named attribute on the given Node, with special behavior for some names and event handlers.
   *	If `value` is `null`, the attribute/handler will be removed.
   *	@param {Element} node	An element to mutate
   *	@param {string} name	The name/key to set, such as an event or attribute name
   *	@param {any} old	The last value that was set for this name/node pair
   *	@param {any} value	An attribute value, such as a function to be used as an event handler
   *	@param {Boolean} isSvg	Are we currently diffing inside an svg?
   *	@private
   */
  function setAccessor(node, name, old, value, isSvg) {
  	if (name === 'className') name = 'class';

  	if (name === 'key') ; else if (name === 'ref') {
  		if (old) old(null);
  		if (value) value(node);
  	} else if (name === 'class' && !isSvg) {
  		node.className = value || '';
  	} else if (name === 'style') {
  		if (!value || typeof value === 'string' || typeof old === 'string') {
  			node.style.cssText = value || '';
  		}
  		if (value && typeof value === 'object') {
  			if (typeof old !== 'string') {
  				for (var i in old) {
  					if (!(i in value)) node.style[i] = '';
  				}
  			}
  			for (var i in value) {
  				node.style[i] = typeof value[i] === 'number' && IS_NON_DIMENSIONAL.test(i) === false ? value[i] + 'px' : value[i];
  			}
  		}
  	} else if (name === 'dangerouslySetInnerHTML') {
  		if (value) node.innerHTML = value.__html || '';
  	} else if (name[0] == 'o' && name[1] == 'n') {
  		var useCapture = name !== (name = name.replace(/Capture$/, ''));
  		name = name.toLowerCase().substring(2);
  		if (value) {
  			if (!old) node.addEventListener(name, eventProxy, useCapture);
  		} else {
  			node.removeEventListener(name, eventProxy, useCapture);
  		}
  		(node._listeners || (node._listeners = {}))[name] = value;
  	} else if (name !== 'list' && name !== 'type' && !isSvg && name in node) {
  		setProperty(node, name, value == null ? '' : value);
  		if (value == null || value === false) node.removeAttribute(name);
  	} else {
  		var ns = isSvg && name !== (name = name.replace(/^xlink:?/, ''));
  		if (value == null || value === false) {
  			if (ns) node.removeAttributeNS('http://www.w3.org/1999/xlink', name.toLowerCase());else node.removeAttribute(name);
  		} else if (typeof value !== 'function') {
  			if (ns) node.setAttributeNS('http://www.w3.org/1999/xlink', name.toLowerCase(), value);else node.setAttribute(name, value);
  		}
  	}
  }

  /** Attempt to set a DOM property to the given value.
   *	IE & FF throw for certain property-value combinations.
   */
  function setProperty(node, name, value) {
  	try {
  		node[name] = value;
  	} catch (e) {}
  }

  /** Proxy an event to hooked event handlers
   *	@private
   */
  function eventProxy(e) {
  	return this._listeners[e.type](options.event && options.event(e) || e);
  }

  /** Queue of components that have been mounted and are awaiting componentDidMount */
  var mounts = [];

  /** Diff recursion count, used to track the end of the diff cycle. */
  var diffLevel = 0;

  /** Global flag indicating if the diff is currently within an SVG */
  var isSvgMode = false;

  /** Global flag indicating if the diff is performing hydration */
  var hydrating = false;

  /** Invoke queued componentDidMount lifecycle methods */
  function flushMounts() {
  	var c;
  	while (c = mounts.pop()) {
  		if (options.afterMount) options.afterMount(c);
  		if (c.componentDidMount) c.componentDidMount();
  	}
  }

  /** Apply differences in a given vnode (and it's deep children) to a real DOM Node.
   *	@param {Element} [dom=null]		A DOM node to mutate into the shape of the `vnode`
   *	@param {VNode} vnode			A VNode (with descendants forming a tree) representing the desired DOM structure
   *	@returns {Element} dom			The created/mutated element
   *	@private
   */
  function diff(dom, vnode, context, mountAll, parent, componentRoot) {
  	// diffLevel having been 0 here indicates initial entry into the diff (not a subdiff)
  	if (!diffLevel++) {
  		// when first starting the diff, check if we're diffing an SVG or within an SVG
  		isSvgMode = parent != null && parent.ownerSVGElement !== undefined;

  		// hydration is indicated by the existing element to be diffed not having a prop cache
  		hydrating = dom != null && !('__preactattr_' in dom);
  	}

  	var ret = idiff(dom, vnode, context, mountAll, componentRoot);

  	// append the element if its a new parent
  	if (parent && ret.parentNode !== parent) parent.appendChild(ret);

  	// diffLevel being reduced to 0 means we're exiting the diff
  	if (! --diffLevel) {
  		hydrating = false;
  		// invoke queued componentDidMount lifecycle methods
  		if (!componentRoot) flushMounts();
  	}

  	return ret;
  }

  /** Internals of `diff()`, separated to allow bypassing diffLevel / mount flushing. */
  function idiff(dom, vnode, context, mountAll, componentRoot) {
  	var out = dom,
  	    prevSvgMode = isSvgMode;

  	// empty values (null, undefined, booleans) render as empty Text nodes
  	if (vnode == null || typeof vnode === 'boolean') vnode = '';

  	// Fast case: Strings & Numbers create/update Text nodes.
  	if (typeof vnode === 'string' || typeof vnode === 'number') {

  		// update if it's already a Text node:
  		if (dom && dom.splitText !== undefined && dom.parentNode && (!dom._component || componentRoot)) {
  			/* istanbul ignore if */ /* Browser quirk that can't be covered: https://github.com/developit/preact/commit/fd4f21f5c45dfd75151bd27b4c217d8003aa5eb9 */
  			if (dom.nodeValue != vnode) {
  				dom.nodeValue = vnode;
  			}
  		} else {
  			// it wasn't a Text node: replace it with one and recycle the old Element
  			out = document.createTextNode(vnode);
  			if (dom) {
  				if (dom.parentNode) dom.parentNode.replaceChild(out, dom);
  				recollectNodeTree(dom, true);
  			}
  		}

  		out['__preactattr_'] = true;

  		return out;
  	}

  	// If the VNode represents a Component, perform a component diff:
  	var vnodeName = vnode.nodeName;
  	if (typeof vnodeName === 'function') {
  		return buildComponentFromVNode(dom, vnode, context, mountAll);
  	}

  	// Tracks entering and exiting SVG namespace when descending through the tree.
  	isSvgMode = vnodeName === 'svg' ? true : vnodeName === 'foreignObject' ? false : isSvgMode;

  	// If there's no existing element or it's the wrong type, create a new one:
  	vnodeName = String(vnodeName);
  	if (!dom || !isNamedNode(dom, vnodeName)) {
  		out = createNode(vnodeName, isSvgMode);

  		if (dom) {
  			// move children into the replacement node
  			while (dom.firstChild) {
  				out.appendChild(dom.firstChild);
  			} // if the previous Element was mounted into the DOM, replace it inline
  			if (dom.parentNode) dom.parentNode.replaceChild(out, dom);

  			// recycle the old element (skips non-Element node types)
  			recollectNodeTree(dom, true);
  		}
  	}

  	var fc = out.firstChild,
  	    props = out['__preactattr_'],
  	    vchildren = vnode.children;

  	if (props == null) {
  		props = out['__preactattr_'] = {};
  		for (var a = out.attributes, i = a.length; i--;) {
  			props[a[i].name] = a[i].value;
  		}
  	}

  	// Optimization: fast-path for elements containing a single TextNode:
  	if (!hydrating && vchildren && vchildren.length === 1 && typeof vchildren[0] === 'string' && fc != null && fc.splitText !== undefined && fc.nextSibling == null) {
  		if (fc.nodeValue != vchildren[0]) {
  			fc.nodeValue = vchildren[0];
  		}
  	}
  	// otherwise, if there are existing or new children, diff them:
  	else if (vchildren && vchildren.length || fc != null) {
  			innerDiffNode(out, vchildren, context, mountAll, hydrating || props.dangerouslySetInnerHTML != null);
  		}

  	// Apply attributes/props from VNode to the DOM Element:
  	diffAttributes(out, vnode.attributes, props);

  	// restore previous SVG mode: (in case we're exiting an SVG namespace)
  	isSvgMode = prevSvgMode;

  	return out;
  }

  /** Apply child and attribute changes between a VNode and a DOM Node to the DOM.
   *	@param {Element} dom			Element whose children should be compared & mutated
   *	@param {Array} vchildren		Array of VNodes to compare to `dom.childNodes`
   *	@param {Object} context			Implicitly descendant context object (from most recent `getChildContext()`)
   *	@param {Boolean} mountAll
   *	@param {Boolean} isHydrating	If `true`, consumes externally created elements similar to hydration
   */
  function innerDiffNode(dom, vchildren, context, mountAll, isHydrating) {
  	var originalChildren = dom.childNodes,
  	    children = [],
  	    keyed = {},
  	    keyedLen = 0,
  	    min = 0,
  	    len = originalChildren.length,
  	    childrenLen = 0,
  	    vlen = vchildren ? vchildren.length : 0,
  	    j,
  	    c,
  	    f,
  	    vchild,
  	    child;

  	// Build up a map of keyed children and an Array of unkeyed children:
  	if (len !== 0) {
  		for (var i = 0; i < len; i++) {
  			var _child = originalChildren[i],
  			    props = _child['__preactattr_'],
  			    key = vlen && props ? _child._component ? _child._component.__key : props.key : null;
  			if (key != null) {
  				keyedLen++;
  				keyed[key] = _child;
  			} else if (props || (_child.splitText !== undefined ? isHydrating ? _child.nodeValue.trim() : true : isHydrating)) {
  				children[childrenLen++] = _child;
  			}
  		}
  	}

  	if (vlen !== 0) {
  		for (var i = 0; i < vlen; i++) {
  			vchild = vchildren[i];
  			child = null;

  			// attempt to find a node based on key matching
  			var key = vchild.key;
  			if (key != null) {
  				if (keyedLen && keyed[key] !== undefined) {
  					child = keyed[key];
  					keyed[key] = undefined;
  					keyedLen--;
  				}
  			}
  			// attempt to pluck a node of the same type from the existing children
  			else if (!child && min < childrenLen) {
  					for (j = min; j < childrenLen; j++) {
  						if (children[j] !== undefined && isSameNodeType(c = children[j], vchild, isHydrating)) {
  							child = c;
  							children[j] = undefined;
  							if (j === childrenLen - 1) childrenLen--;
  							if (j === min) min++;
  							break;
  						}
  					}
  				}

  			// morph the matched/found/created DOM child to match vchild (deep)
  			child = idiff(child, vchild, context, mountAll);

  			f = originalChildren[i];
  			if (child && child !== dom && child !== f) {
  				if (f == null) {
  					dom.appendChild(child);
  				} else if (child === f.nextSibling) {
  					removeNode(f);
  				} else {
  					dom.insertBefore(child, f);
  				}
  			}
  		}
  	}

  	// remove unused keyed children:
  	if (keyedLen) {
  		for (var i in keyed) {
  			if (keyed[i] !== undefined) recollectNodeTree(keyed[i], false);
  		}
  	}

  	// remove orphaned unkeyed children:
  	while (min <= childrenLen) {
  		if ((child = children[childrenLen--]) !== undefined) recollectNodeTree(child, false);
  	}
  }

  /** Recursively recycle (or just unmount) a node and its descendants.
   *	@param {Node} node						DOM node to start unmount/removal from
   *	@param {Boolean} [unmountOnly=false]	If `true`, only triggers unmount lifecycle, skips removal
   */
  function recollectNodeTree(node, unmountOnly) {
  	var component = node._component;
  	if (component) {
  		// if node is owned by a Component, unmount that component (ends up recursing back here)
  		unmountComponent(component);
  	} else {
  		// If the node's VNode had a ref function, invoke it with null here.
  		// (this is part of the React spec, and smart for unsetting references)
  		if (node['__preactattr_'] != null && node['__preactattr_'].ref) node['__preactattr_'].ref(null);

  		if (unmountOnly === false || node['__preactattr_'] == null) {
  			removeNode(node);
  		}

  		removeChildren(node);
  	}
  }

  /** Recollect/unmount all children.
   *	- we use .lastChild here because it causes less reflow than .firstChild
   *	- it's also cheaper than accessing the .childNodes Live NodeList
   */
  function removeChildren(node) {
  	node = node.lastChild;
  	while (node) {
  		var next = node.previousSibling;
  		recollectNodeTree(node, true);
  		node = next;
  	}
  }

  /** Apply differences in attributes from a VNode to the given DOM Element.
   *	@param {Element} dom		Element with attributes to diff `attrs` against
   *	@param {Object} attrs		The desired end-state key-value attribute pairs
   *	@param {Object} old			Current/previous attributes (from previous VNode or element's prop cache)
   */
  function diffAttributes(dom, attrs, old) {
  	var name;

  	// remove attributes no longer present on the vnode by setting them to undefined
  	for (name in old) {
  		if (!(attrs && attrs[name] != null) && old[name] != null) {
  			setAccessor(dom, name, old[name], old[name] = undefined, isSvgMode);
  		}
  	}

  	// add new & update changed attributes
  	for (name in attrs) {
  		if (name !== 'children' && name !== 'innerHTML' && (!(name in old) || attrs[name] !== (name === 'value' || name === 'checked' ? dom[name] : old[name]))) {
  			setAccessor(dom, name, old[name], old[name] = attrs[name], isSvgMode);
  		}
  	}
  }

  /** Retains a pool of Components for re-use, keyed on component name.
   *	Note: since component names are not unique or even necessarily available, these are primarily a form of sharding.
   *	@private
   */
  var components = {};

  /** Reclaim a component for later re-use by the recycler. */
  function collectComponent(component) {
  	var name = component.constructor.name;
  	(components[name] || (components[name] = [])).push(component);
  }

  /** Create a component. Normalizes differences between PFC's and classful Components. */
  function createComponent(Ctor, props, context) {
  	var list = components[Ctor.name],
  	    inst;

  	if (Ctor.prototype && Ctor.prototype.render) {
  		inst = new Ctor(props, context);
  		Component.call(inst, props, context);
  	} else {
  		inst = new Component(props, context);
  		inst.constructor = Ctor;
  		inst.render = doRender;
  	}

  	if (list) {
  		for (var i = list.length; i--;) {
  			if (list[i].constructor === Ctor) {
  				inst.nextBase = list[i].nextBase;
  				list.splice(i, 1);
  				break;
  			}
  		}
  	}
  	return inst;
  }

  /** The `.render()` method for a PFC backing instance. */
  function doRender(props, state, context) {
  	return this.constructor(props, context);
  }

  /** Set a component's `props` (generally derived from JSX attributes).
   *	@param {Object} props
   *	@param {Object} [opts]
   *	@param {boolean} [opts.renderSync=false]	If `true` and {@link options.syncComponentUpdates} is `true`, triggers synchronous rendering.
   *	@param {boolean} [opts.render=true]			If `false`, no render will be triggered.
   */
  function setComponentProps(component, props, opts, context, mountAll) {
  	if (component._disable) return;
  	component._disable = true;

  	if (component.__ref = props.ref) delete props.ref;
  	if (component.__key = props.key) delete props.key;

  	if (!component.base || mountAll) {
  		if (component.componentWillMount) component.componentWillMount();
  	} else if (component.componentWillReceiveProps) {
  		component.componentWillReceiveProps(props, context);
  	}

  	if (context && context !== component.context) {
  		if (!component.prevContext) component.prevContext = component.context;
  		component.context = context;
  	}

  	if (!component.prevProps) component.prevProps = component.props;
  	component.props = props;

  	component._disable = false;

  	if (opts !== 0) {
  		if (opts === 1 || options.syncComponentUpdates !== false || !component.base) {
  			renderComponent(component, 1, mountAll);
  		} else {
  			enqueueRender(component);
  		}
  	}

  	if (component.__ref) component.__ref(component);
  }

  /** Render a Component, triggering necessary lifecycle events and taking High-Order Components into account.
   *	@param {Component} component
   *	@param {Object} [opts]
   *	@param {boolean} [opts.build=false]		If `true`, component will build and store a DOM node if not already associated with one.
   *	@private
   */
  function renderComponent(component, opts, mountAll, isChild) {
  	if (component._disable) return;

  	var props = component.props,
  	    state = component.state,
  	    context = component.context,
  	    previousProps = component.prevProps || props,
  	    previousState = component.prevState || state,
  	    previousContext = component.prevContext || context,
  	    isUpdate = component.base,
  	    nextBase = component.nextBase,
  	    initialBase = isUpdate || nextBase,
  	    initialChildComponent = component._component,
  	    skip = false,
  	    rendered,
  	    inst,
  	    cbase;

  	// if updating
  	if (isUpdate) {
  		component.props = previousProps;
  		component.state = previousState;
  		component.context = previousContext;
  		if (opts !== 2 && component.shouldComponentUpdate && component.shouldComponentUpdate(props, state, context) === false) {
  			skip = true;
  		} else if (component.componentWillUpdate) {
  			component.componentWillUpdate(props, state, context);
  		}
  		component.props = props;
  		component.state = state;
  		component.context = context;
  	}

  	component.prevProps = component.prevState = component.prevContext = component.nextBase = null;
  	component._dirty = false;

  	if (!skip) {
  		rendered = component.render(props, state, context);

  		// context to pass to the child, can be updated via (grand-)parent component
  		if (component.getChildContext) {
  			context = extend(extend({}, context), component.getChildContext());
  		}

  		var childComponent = rendered && rendered.nodeName,
  		    toUnmount,
  		    base;

  		if (typeof childComponent === 'function') {
  			// set up high order component link

  			var childProps = getNodeProps(rendered);
  			inst = initialChildComponent;

  			if (inst && inst.constructor === childComponent && childProps.key == inst.__key) {
  				setComponentProps(inst, childProps, 1, context, false);
  			} else {
  				toUnmount = inst;

  				component._component = inst = createComponent(childComponent, childProps, context);
  				inst.nextBase = inst.nextBase || nextBase;
  				inst._parentComponent = component;
  				setComponentProps(inst, childProps, 0, context, false);
  				renderComponent(inst, 1, mountAll, true);
  			}

  			base = inst.base;
  		} else {
  			cbase = initialBase;

  			// destroy high order component link
  			toUnmount = initialChildComponent;
  			if (toUnmount) {
  				cbase = component._component = null;
  			}

  			if (initialBase || opts === 1) {
  				if (cbase) cbase._component = null;
  				base = diff(cbase, rendered, context, mountAll || !isUpdate, initialBase && initialBase.parentNode, true);
  			}
  		}

  		if (initialBase && base !== initialBase && inst !== initialChildComponent) {
  			var baseParent = initialBase.parentNode;
  			if (baseParent && base !== baseParent) {
  				baseParent.replaceChild(base, initialBase);

  				if (!toUnmount) {
  					initialBase._component = null;
  					recollectNodeTree(initialBase, false);
  				}
  			}
  		}

  		if (toUnmount) {
  			unmountComponent(toUnmount);
  		}

  		component.base = base;
  		if (base && !isChild) {
  			var componentRef = component,
  			    t = component;
  			while (t = t._parentComponent) {
  				(componentRef = t).base = base;
  			}
  			base._component = componentRef;
  			base._componentConstructor = componentRef.constructor;
  		}
  	}

  	if (!isUpdate || mountAll) {
  		mounts.unshift(component);
  	} else if (!skip) {
  		// Ensure that pending componentDidMount() hooks of child components
  		// are called before the componentDidUpdate() hook in the parent.
  		// Note: disabled as it causes duplicate hooks, see https://github.com/developit/preact/issues/750
  		// flushMounts();

  		if (component.componentDidUpdate) {
  			component.componentDidUpdate(previousProps, previousState, previousContext);
  		}
  		if (options.afterUpdate) options.afterUpdate(component);
  	}

  	if (component._renderCallbacks != null) {
  		while (component._renderCallbacks.length) {
  			component._renderCallbacks.pop().call(component);
  		}
  	}

  	if (!diffLevel && !isChild) flushMounts();
  }

  /** Apply the Component referenced by a VNode to the DOM.
   *	@param {Element} dom	The DOM node to mutate
   *	@param {VNode} vnode	A Component-referencing VNode
   *	@returns {Element} dom	The created/mutated element
   *	@private
   */
  function buildComponentFromVNode(dom, vnode, context, mountAll) {
  	var c = dom && dom._component,
  	    originalComponent = c,
  	    oldDom = dom,
  	    isDirectOwner = c && dom._componentConstructor === vnode.nodeName,
  	    isOwner = isDirectOwner,
  	    props = getNodeProps(vnode);
  	while (c && !isOwner && (c = c._parentComponent)) {
  		isOwner = c.constructor === vnode.nodeName;
  	}

  	if (c && isOwner && (!mountAll || c._component)) {
  		setComponentProps(c, props, 3, context, mountAll);
  		dom = c.base;
  	} else {
  		if (originalComponent && !isDirectOwner) {
  			unmountComponent(originalComponent);
  			dom = oldDom = null;
  		}

  		c = createComponent(vnode.nodeName, props, context);
  		if (dom && !c.nextBase) {
  			c.nextBase = dom;
  			// passing dom/oldDom as nextBase will recycle it if unused, so bypass recycling on L229:
  			oldDom = null;
  		}
  		setComponentProps(c, props, 1, context, mountAll);
  		dom = c.base;

  		if (oldDom && dom !== oldDom) {
  			oldDom._component = null;
  			recollectNodeTree(oldDom, false);
  		}
  	}

  	return dom;
  }

  /** Remove a component from the DOM and recycle it.
   *	@param {Component} component	The Component instance to unmount
   *	@private
   */
  function unmountComponent(component) {
  	if (options.beforeUnmount) options.beforeUnmount(component);

  	var base = component.base;

  	component._disable = true;

  	if (component.componentWillUnmount) component.componentWillUnmount();

  	component.base = null;

  	// recursively tear down & recollect high-order component children:
  	var inner = component._component;
  	if (inner) {
  		unmountComponent(inner);
  	} else if (base) {
  		if (base['__preactattr_'] && base['__preactattr_'].ref) base['__preactattr_'].ref(null);

  		component.nextBase = base;

  		removeNode(base);
  		collectComponent(component);

  		removeChildren(base);
  	}

  	if (component.__ref) component.__ref(null);
  }

  /** Base Component class.
   *	Provides `setState()` and `forceUpdate()`, which trigger rendering.
   *	@public
   *
   *	@example
   *	class MyFoo extends Component {
   *		render(props, state) {
   *			return <div />;
   *		}
   *	}
   */
  function Component(props, context) {
  	this._dirty = true;

  	/** @public
    *	@type {object}
    */
  	this.context = context;

  	/** @public
    *	@type {object}
    */
  	this.props = props;

  	/** @public
    *	@type {object}
    */
  	this.state = this.state || {};
  }

  extend(Component.prototype, {

  	/** Returns a `boolean` indicating if the component should re-render when receiving the given `props` and `state`.
    *	@param {object} nextProps
    *	@param {object} nextState
    *	@param {object} nextContext
    *	@returns {Boolean} should the component re-render
    *	@name shouldComponentUpdate
    *	@function
    */

  	/** Update component state by copying properties from `state` to `this.state`.
    *	@param {object} state		A hash of state properties to update with new values
    *	@param {function} callback	A function to be called once component state is updated
    */
  	setState: function setState(state, callback) {
  		var s = this.state;
  		if (!this.prevState) this.prevState = extend({}, s);
  		extend(s, typeof state === 'function' ? state(s, this.props) : state);
  		if (callback) (this._renderCallbacks = this._renderCallbacks || []).push(callback);
  		enqueueRender(this);
  	},


  	/** Immediately perform a synchronous re-render of the component.
    *	@param {function} callback		A function to be called after component is re-rendered.
    *	@private
    */
  	forceUpdate: function forceUpdate(callback) {
  		if (callback) (this._renderCallbacks = this._renderCallbacks || []).push(callback);
  		renderComponent(this, 2);
  	},


  	/** Accepts `props` and `state`, and returns a new Virtual DOM tree to build.
    *	Virtual DOM is generally constructed via [JSX](http://jasonformat.com/wtf-is-jsx).
    *	@param {object} props		Props (eg: JSX attributes) received from parent element/component
    *	@param {object} state		The component's current state
    *	@param {object} context		Context object (if a parent component has provided context)
    *	@returns VNode
    */
  	render: function render() {}
  });

  /** Render JSX into a `parent` Element.
   *	@param {VNode} vnode		A (JSX) VNode to render
   *	@param {Element} parent		DOM element to render into
   *	@param {Element} [merge]	Attempt to re-use an existing DOM tree rooted at `merge`
   *	@public
   *
   *	@example
   *	// render a div into <body>:
   *	render(<div id="hello">hello!</div>, document.body);
   *
   *	@example
   *	// render a "Thing" component into #foo:
   *	const Thing = ({ name }) => <span>{ name }</span>;
   *	render(<Thing name="one" />, document.querySelector('#foo'));
   */
  function render(vnode, parent, merge) {
    return diff(merge, vnode, {}, false, parent, false);
  }

  var preact$1 = {
  	h: h$3,
  	createElement: h$3,
  	cloneElement: cloneElement,
  	Component: Component,
  	render: render,
  	rerender: rerender,
  	options: options
  };

  var preact_esm = /*#__PURE__*/Object.freeze({
    __proto__: null,
    'default': preact$1,
    h: h$3,
    createElement: h$3,
    cloneElement: cloneElement,
    Component: Component,
    render: render,
    rerender: rerender,
    options: options
  });

  /**
   * Check if an object is a DOM element. Duck-typing based on `nodeType`.
   *
   * @param {*} obj
   */
  var isDOMElement = function isDOMElement(obj) {
    return obj && typeof obj === 'object' && obj.nodeType === Node.ELEMENT_NODE;
  };

  /**
   * Find a DOM element.
   *
   * @param {Node|string} element
   * @returns {Node|null}
   */


  var findDOMElement = function findDOMElement(element, context) {
    if (context === void 0) {
      context = document;
    }

    if (typeof element === 'string') {
      return context.querySelector(element);
    }

    if (isDOMElement(element)) {
      return element;
    }
  };

  var preact = /*@__PURE__*/getAugmentedNamespace(preact_esm);

  function _extends$4() { _extends$4 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$4.apply(this, arguments); }




  /**
   * Defer a frequent call to the microtask queue.
   */


  function debounce(fn) {
    var calling = null;
    var latestArgs = null;
    return function () {
      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      latestArgs = args;

      if (!calling) {
        calling = Promise.resolve().then(function () {
          calling = null; // At this point `args` may be different from the most
          // recent state, if multiple calls happened since this task
          // was queued. So we use the `latestArgs`, which definitely
          // is the most recent call.

          return fn.apply(void 0, latestArgs);
        });
      }

      return calling;
    };
  }
  /**
   * Boilerplate that all Plugins share - and should not be used
   * directly. It also shows which methods final plugins should implement/override,
   * this deciding on structure.
   *
   * @param {object} main Uppy core object
   * @param {object} object with plugin options
   * @returns {Array|string} files or success/fail message
   */


  var Plugin$1 = /*#__PURE__*/function () {
    function Plugin(uppy, opts) {
      this.uppy = uppy;
      this.opts = opts || {};
      this.update = this.update.bind(this);
      this.mount = this.mount.bind(this);
      this.install = this.install.bind(this);
      this.uninstall = this.uninstall.bind(this);
    }

    var _proto = Plugin.prototype;

    _proto.getPluginState = function getPluginState() {
      var _this$uppy$getState = this.uppy.getState(),
          plugins = _this$uppy$getState.plugins;

      return plugins[this.id] || {};
    };

    _proto.setPluginState = function setPluginState(update) {
      var _extends2;

      var _this$uppy$getState2 = this.uppy.getState(),
          plugins = _this$uppy$getState2.plugins;

      this.uppy.setState({
        plugins: _extends$4({}, plugins, (_extends2 = {}, _extends2[this.id] = _extends$4({}, plugins[this.id], update), _extends2))
      });
    };

    _proto.setOptions = function setOptions(newOpts) {
      this.opts = _extends$4({}, this.opts, newOpts);
      this.setPluginState(); // so that UI re-renders with new options
    };

    _proto.update = function update(state) {
      if (typeof this.el === 'undefined') {
        return;
      }

      if (this._updateUI) {
        this._updateUI(state);
      }
    } // Called after every state update, after everything's mounted. Debounced.
    ;

    _proto.afterUpdate = function afterUpdate() {}
    /**
     * Called when plugin is mounted, whether in DOM or into another plugin.
     * Needed because sometimes plugins are mounted separately/after `install`,
     * so this.el and this.parent might not be available in `install`.
     * This is the case with @uppy/react plugins, for example.
     */
    ;

    _proto.onMount = function onMount() {}
    /**
     * Check if supplied `target` is a DOM element or an `object`.
     * If it’s an object — target is a plugin, and we search `plugins`
     * for a plugin with same name and return its target.
     *
     * @param {string|object} target
     *
     */
    ;

    _proto.mount = function mount(target, plugin) {
      var _this = this;

      var callerPluginName = plugin.id;
      var targetElement = findDOMElement(target);

      if (targetElement) {
        this.isTargetDOMEl = true; // API for plugins that require a synchronous rerender.

        this.rerender = function (state) {
          // plugin could be removed, but this.rerender is debounced below,
          // so it could still be called even after uppy.removePlugin or uppy.close
          // hence the check
          if (!_this.uppy.getPlugin(_this.id)) return;
          _this.el = preact.render(_this.render(state), targetElement, _this.el);

          _this.afterUpdate();
        };

        this._updateUI = debounce(this.rerender);
        this.uppy.log("Installing " + callerPluginName + " to a DOM element '" + target + "'"); // clear everything inside the target container

        if (this.opts.replaceTargetContent) {
          targetElement.innerHTML = '';
        }

        this.el = preact.render(this.render(this.uppy.getState()), targetElement);
        this.onMount();
        return this.el;
      }

      var targetPlugin;

      if (typeof target === 'object' && target instanceof Plugin) {
        // Targeting a plugin *instance*
        targetPlugin = target;
      } else if (typeof target === 'function') {
        // Targeting a plugin type
        var Target = target; // Find the target plugin instance.

        this.uppy.iteratePlugins(function (plugin) {
          if (plugin instanceof Target) {
            targetPlugin = plugin;
            return false;
          }
        });
      }

      if (targetPlugin) {
        this.uppy.log("Installing " + callerPluginName + " to " + targetPlugin.id);
        this.parent = targetPlugin;
        this.el = targetPlugin.addTarget(plugin);
        this.onMount();
        return this.el;
      }

      this.uppy.log("Not installing " + callerPluginName);
      var message = "Invalid target option given to " + callerPluginName + ".";

      if (typeof target === 'function') {
        message += ' The given target is not a Plugin class. ' + 'Please check that you\'re not specifying a React Component instead of a plugin. ' + 'If you are using @uppy/* packages directly, make sure you have only 1 version of @uppy/core installed: ' + 'run `npm ls @uppy/core` on the command line and verify that all the versions match and are deduped correctly.';
      } else {
        message += 'If you meant to target an HTML element, please make sure that the element exists. ' + 'Check that the <script> tag initializing Uppy is right before the closing </body> tag at the end of the page. ' + '(see https://github.com/transloadit/uppy/issues/1042)\n\n' + 'If you meant to target a plugin, please confirm that your `import` statements or `require` calls are correct.';
      }

      throw new Error(message);
    };

    _proto.render = function render(state) {
      throw new Error('Extend the render method to add your plugin to a DOM element');
    };

    _proto.addTarget = function addTarget(plugin) {
      throw new Error('Extend the addTarget method to add your plugin to another plugin\'s target');
    };

    _proto.unmount = function unmount() {
      if (this.isTargetDOMEl && this.el && this.el.parentNode) {
        this.el.parentNode.removeChild(this.el);
      }
    };

    _proto.install = function install() {};

    _proto.uninstall = function uninstall() {
      this.unmount();
    };

    return Plugin;
  }();

  const name="@uppy/core";const description="Core module for the extensible JavaScript file upload widget with support for drag&drop, resumable uploads, previews, restrictions, file processing/encoding, remote providers like Instagram, Dropbox, Google Drive, S3 and more :dog:";const version$1="1.19.2";const license="MIT";const main="lib/index.js";const style="dist/style.min.css";const types="types/index.d.ts";const keywords=["file uploader","uppy","uppy-plugin"];const homepage="https://uppy.io";const bugs={url:"https://github.com/transloadit/uppy/issues"};const repository={type:"git",url:"git+https://github.com/transloadit/uppy.git"};const dependencies={"@transloadit/prettier-bytes":"0.0.7","@uppy/store-default":"^1.2.7","@uppy/utils":"^3.6.2",cuid:"^2.1.1","lodash.throttle":"^4.1.1","mime-match":"^1.0.2","namespace-emitter":"^2.0.1",preact:"8.2.9"};const gitHead="4b782ffbbb443672843d7b4096956bed3b11d612";var _require2 = {name:name,description:description,version:version$1,license:license,main:main,style:style,types:types,keywords:keywords,homepage:homepage,bugs:bugs,repository:repository,dependencies:dependencies,gitHead:gitHead};

  function _extends$3() { _extends$3 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$3.apply(this, arguments); }

  function _defineProperties$1(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

  function _createClass$1(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties$1(Constructor.prototype, protoProps); if (staticProps) _defineProperties$1(Constructor, staticProps); return Constructor; }

  function _inheritsLoose$5(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf$5(subClass, superClass); }

  function _wrapNativeSuper$2(Class) { var _cache = typeof Map === "function" ? new Map() : undefined; _wrapNativeSuper$2 = function _wrapNativeSuper(Class) { if (Class === null || !_isNativeFunction$2(Class)) return Class; if (typeof Class !== "function") { throw new TypeError("Super expression must either be null or a function"); } if (typeof _cache !== "undefined") { if (_cache.has(Class)) return _cache.get(Class); _cache.set(Class, Wrapper); } function Wrapper() { return _construct$2(Class, arguments, _getPrototypeOf$2(this).constructor); } Wrapper.prototype = Object.create(Class.prototype, { constructor: { value: Wrapper, enumerable: false, writable: true, configurable: true } }); return _setPrototypeOf$5(Wrapper, Class); }; return _wrapNativeSuper$2(Class); }

  function _construct$2(Parent, args, Class) { if (_isNativeReflectConstruct$2()) { _construct$2 = Reflect.construct; } else { _construct$2 = function _construct(Parent, args, Class) { var a = [null]; a.push.apply(a, args); var Constructor = Function.bind.apply(Parent, a); var instance = new Constructor(); if (Class) _setPrototypeOf$5(instance, Class.prototype); return instance; }; } return _construct$2.apply(null, arguments); }

  function _isNativeReflectConstruct$2() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

  function _isNativeFunction$2(fn) { return Function.toString.call(fn).indexOf("[native code]") !== -1; }

  function _setPrototypeOf$5(o, p) { _setPrototypeOf$5 = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf$5(o, p); }

  function _getPrototypeOf$2(o) { _getPrototypeOf$2 = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf$2(o); }

  /* global AggregateError */
























  var justErrorsLogger = loggers.justErrorsLogger,
      debugLogger = loggers.debugLogger;



  var version = _require2.version; // Exported from here.


  var RestrictionError = /*#__PURE__*/function (_Error) {
    _inheritsLoose$5(RestrictionError, _Error);

    function RestrictionError() {
      var _this;

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = _Error.call.apply(_Error, [this].concat(args)) || this;
      _this.isRestriction = true;
      return _this;
    }

    return RestrictionError;
  }( /*#__PURE__*/_wrapNativeSuper$2(Error));
  /**
   * Uppy Core module.
   * Manages plugins, state updates, acts as an event bus,
   * adds/removes files and metadata.
   */


  var Uppy = /*#__PURE__*/function () {
    /**
     * Instantiate Uppy
     *
     * @param {object} opts — Uppy options
     */
    function Uppy(opts) {
      var _this2 = this;

      this.defaultLocale = {
        strings: {
          addBulkFilesFailed: {
            0: 'Failed to add %{smart_count} file due to an internal error',
            1: 'Failed to add %{smart_count} files due to internal errors'
          },
          youCanOnlyUploadX: {
            0: 'You can only upload %{smart_count} file',
            1: 'You can only upload %{smart_count} files'
          },
          youHaveToAtLeastSelectX: {
            0: 'You have to select at least %{smart_count} file',
            1: 'You have to select at least %{smart_count} files'
          },
          // The default `exceedsSize2` string only combines the `exceedsSize` string (%{backwardsCompat}) with the size.
          // Locales can override `exceedsSize2` to specify a different word order. This is for backwards compat with
          // Uppy 1.9.x and below which did a naive concatenation of `exceedsSize2 + size` instead of using a locale-specific
          // substitution.
          // TODO: In 2.0 `exceedsSize2` should be removed in and `exceedsSize` updated to use substitution.
          exceedsSize2: '%{backwardsCompat} %{size}',
          exceedsSize: '%{file} exceeds maximum allowed size of',
          inferiorSize: 'This file is smaller than the allowed size of %{size}',
          youCanOnlyUploadFileTypes: 'You can only upload: %{types}',
          noNewAlreadyUploading: 'Cannot add new files: already uploading',
          noDuplicates: 'Cannot add the duplicate file \'%{fileName}\', it already exists',
          companionError: 'Connection with Companion failed',
          companionUnauthorizeHint: 'To unauthorize to your %{provider} account, please go to %{url}',
          failedToUpload: 'Failed to upload %{file}',
          noInternetConnection: 'No Internet connection',
          connectedToInternet: 'Connected to the Internet',
          // Strings for remote providers
          noFilesFound: 'You have no files or folders here',
          selectX: {
            0: 'Select %{smart_count}',
            1: 'Select %{smart_count}'
          },
          selectAllFilesFromFolderNamed: 'Select all files from folder %{name}',
          unselectAllFilesFromFolderNamed: 'Unselect all files from folder %{name}',
          selectFileNamed: 'Select file %{name}',
          unselectFileNamed: 'Unselect file %{name}',
          openFolderNamed: 'Open folder %{name}',
          cancel: 'Cancel',
          logOut: 'Log out',
          filter: 'Filter',
          resetFilter: 'Reset filter',
          loading: 'Loading...',
          authenticateWithTitle: 'Please authenticate with %{pluginName} to select files',
          authenticateWith: 'Connect to %{pluginName}',
          searchImages: 'Search for images',
          enterTextToSearch: 'Enter text to search for images',
          backToSearch: 'Back to Search',
          emptyFolderAdded: 'No files were added from empty folder',
          folderAdded: {
            0: 'Added %{smart_count} file from %{folder}',
            1: 'Added %{smart_count} files from %{folder}'
          }
        }
      };
      var defaultOptions = {
        id: 'uppy',
        autoProceed: false,
        allowMultipleUploads: true,
        debug: false,
        restrictions: {
          maxFileSize: null,
          minFileSize: null,
          maxTotalFileSize: null,
          maxNumberOfFiles: null,
          minNumberOfFiles: null,
          allowedFileTypes: null
        },
        meta: {},
        onBeforeFileAdded: function onBeforeFileAdded(currentFile) {
          return currentFile;
        },
        onBeforeUpload: function onBeforeUpload(files) {
          return files;
        },
        store: lib$3(),
        logger: justErrorsLogger,
        infoTimeout: 5000
      }; // Merge default options with the ones set by user,
      // making sure to merge restrictions too

      this.opts = _extends$3({}, defaultOptions, opts, {
        restrictions: _extends$3({}, defaultOptions.restrictions, opts && opts.restrictions)
      }); // Support debug: true for backwards-compatability, unless logger is set in opts
      // opts instead of this.opts to avoid comparing objects — we set logger: justErrorsLogger in defaultOptions

      if (opts && opts.logger && opts.debug) {
        this.log('You are using a custom `logger`, but also set `debug: true`, which uses built-in logger to output logs to console. Ignoring `debug: true` and using your custom `logger`.', 'warning');
      } else if (opts && opts.debug) {
        this.opts.logger = debugLogger;
      }

      this.log("Using Core v" + this.constructor.VERSION);

      if (this.opts.restrictions.allowedFileTypes && this.opts.restrictions.allowedFileTypes !== null && !Array.isArray(this.opts.restrictions.allowedFileTypes)) {
        throw new TypeError('`restrictions.allowedFileTypes` must be an array');
      }

      this.i18nInit(); // Container for different types of plugins

      this.plugins = {};
      this.getState = this.getState.bind(this);
      this.getPlugin = this.getPlugin.bind(this);
      this.setFileMeta = this.setFileMeta.bind(this);
      this.setFileState = this.setFileState.bind(this);
      this.log = this.log.bind(this);
      this.info = this.info.bind(this);
      this.hideInfo = this.hideInfo.bind(this);
      this.addFile = this.addFile.bind(this);
      this.removeFile = this.removeFile.bind(this);
      this.pauseResume = this.pauseResume.bind(this);
      this.validateRestrictions = this.validateRestrictions.bind(this); // ___Why throttle at 500ms?
      //    - We must throttle at >250ms for superfocus in Dashboard to work well
      //    (because animation takes 0.25s, and we want to wait for all animations to be over before refocusing).
      //    [Practical Check]: if thottle is at 100ms, then if you are uploading a file,
      //    and click 'ADD MORE FILES', - focus won't activate in Firefox.
      //    - We must throttle at around >500ms to avoid performance lags.
      //    [Practical Check] Firefox, try to upload a big file for a prolonged period of time. Laptop will start to heat up.

      this.calculateProgress = lodash_throttle(this.calculateProgress.bind(this), 500, {
        leading: true,
        trailing: true
      });
      this.updateOnlineStatus = this.updateOnlineStatus.bind(this);
      this.resetProgress = this.resetProgress.bind(this);
      this.pauseAll = this.pauseAll.bind(this);
      this.resumeAll = this.resumeAll.bind(this);
      this.retryAll = this.retryAll.bind(this);
      this.cancelAll = this.cancelAll.bind(this);
      this.retryUpload = this.retryUpload.bind(this);
      this.upload = this.upload.bind(this);
      this.emitter = namespaceEmitter();
      this.on = this.on.bind(this);
      this.off = this.off.bind(this);
      this.once = this.emitter.once.bind(this.emitter);
      this.emit = this.emitter.emit.bind(this.emitter);
      this.preProcessors = [];
      this.uploaders = [];
      this.postProcessors = [];
      this.store = this.opts.store;
      this.setState({
        plugins: {},
        files: {},
        currentUploads: {},
        allowNewUpload: true,
        capabilities: {
          uploadProgress: supportsUploadProgress(),
          individualCancellation: true,
          resumableUploads: false
        },
        totalProgress: 0,
        meta: _extends$3({}, this.opts.meta),
        info: {
          isHidden: true,
          type: 'info',
          message: ''
        },
        recoveredState: null
      });
      this.storeUnsubscribe = this.store.subscribe(function (prevState, nextState, patch) {
        _this2.emit('state-update', prevState, nextState, patch);

        _this2.updateAll(nextState);
      }); // Exposing uppy object on window for debugging and testing

      if (this.opts.debug && typeof window !== 'undefined') {
        window[this.opts.id] = this;
      }

      this.addListeners(); // Re-enable if we’ll need some capabilities on boot, like isMobileDevice
      // this._setCapabilities()
    } // _setCapabilities = () => {
    //   const capabilities = {
    //     isMobileDevice: isMobileDevice()
    //   }
    //   this.setState({
    //     ...this.getState().capabilities,
    //     capabilities
    //   })
    // }


    var _proto = Uppy.prototype;

    _proto.on = function on(event, callback) {
      this.emitter.on(event, callback);
      return this;
    };

    _proto.off = function off(event, callback) {
      this.emitter.off(event, callback);
      return this;
    }
    /**
     * Iterate on all plugins and run `update` on them.
     * Called each time state changes.
     *
     */
    ;

    _proto.updateAll = function updateAll(state) {
      this.iteratePlugins(function (plugin) {
        plugin.update(state);
      });
    }
    /**
     * Updates state with a patch
     *
     * @param {object} patch {foo: 'bar'}
     */
    ;

    _proto.setState = function setState(patch) {
      this.store.setState(patch);
    }
    /**
     * Returns current state.
     *
     * @returns {object}
     */
    ;

    _proto.getState = function getState() {
      return this.store.getState();
    }
    /**
     * Back compat for when uppy.state is used instead of uppy.getState().
     */
    ;

    /**
     * Shorthand to set state for a specific file.
     */
    _proto.setFileState = function setFileState(fileID, state) {
      var _extends2;

      if (!this.getState().files[fileID]) {
        throw new Error("Can\u2019t set state for " + fileID + " (the file could have been removed)");
      }

      this.setState({
        files: _extends$3({}, this.getState().files, (_extends2 = {}, _extends2[fileID] = _extends$3({}, this.getState().files[fileID], state), _extends2))
      });
    };

    _proto.i18nInit = function i18nInit() {
      this.translator = new Translator([this.defaultLocale, this.opts.locale]);
      this.locale = this.translator.locale;
      this.i18n = this.translator.translate.bind(this.translator);
      this.i18nArray = this.translator.translateArray.bind(this.translator);
    };

    _proto.setOptions = function setOptions(newOpts) {
      this.opts = _extends$3({}, this.opts, newOpts, {
        restrictions: _extends$3({}, this.opts.restrictions, newOpts && newOpts.restrictions)
      });

      if (newOpts.meta) {
        this.setMeta(newOpts.meta);
      }

      this.i18nInit();

      if (newOpts.locale) {
        this.iteratePlugins(function (plugin) {
          plugin.setOptions();
        });
      } // Note: this is not the preact `setState`, it's an internal function that has the same name.


      this.setState(); // so that UI re-renders with new options
    };

    _proto.resetProgress = function resetProgress() {
      var defaultProgress = {
        percentage: 0,
        bytesUploaded: 0,
        uploadComplete: false,
        uploadStarted: null
      };

      var files = _extends$3({}, this.getState().files);

      var updatedFiles = {};
      Object.keys(files).forEach(function (fileID) {
        var updatedFile = _extends$3({}, files[fileID]);

        updatedFile.progress = _extends$3({}, updatedFile.progress, defaultProgress);
        updatedFiles[fileID] = updatedFile;
      });
      this.setState({
        files: updatedFiles,
        totalProgress: 0
      });
      this.emit('reset-progress');
    };

    _proto.addPreProcessor = function addPreProcessor(fn) {
      this.preProcessors.push(fn);
    };

    _proto.removePreProcessor = function removePreProcessor(fn) {
      var i = this.preProcessors.indexOf(fn);

      if (i !== -1) {
        this.preProcessors.splice(i, 1);
      }
    };

    _proto.addPostProcessor = function addPostProcessor(fn) {
      this.postProcessors.push(fn);
    };

    _proto.removePostProcessor = function removePostProcessor(fn) {
      var i = this.postProcessors.indexOf(fn);

      if (i !== -1) {
        this.postProcessors.splice(i, 1);
      }
    };

    _proto.addUploader = function addUploader(fn) {
      this.uploaders.push(fn);
    };

    _proto.removeUploader = function removeUploader(fn) {
      var i = this.uploaders.indexOf(fn);

      if (i !== -1) {
        this.uploaders.splice(i, 1);
      }
    };

    _proto.setMeta = function setMeta(data) {
      var updatedMeta = _extends$3({}, this.getState().meta, data);

      var updatedFiles = _extends$3({}, this.getState().files);

      Object.keys(updatedFiles).forEach(function (fileID) {
        updatedFiles[fileID] = _extends$3({}, updatedFiles[fileID], {
          meta: _extends$3({}, updatedFiles[fileID].meta, data)
        });
      });
      this.log('Adding metadata:');
      this.log(data);
      this.setState({
        meta: updatedMeta,
        files: updatedFiles
      });
    };

    _proto.setFileMeta = function setFileMeta(fileID, data) {
      var updatedFiles = _extends$3({}, this.getState().files);

      if (!updatedFiles[fileID]) {
        this.log('Was trying to set metadata for a file that has been removed: ', fileID);
        return;
      }

      var newMeta = _extends$3({}, updatedFiles[fileID].meta, data);

      updatedFiles[fileID] = _extends$3({}, updatedFiles[fileID], {
        meta: newMeta
      });
      this.setState({
        files: updatedFiles
      });
    }
    /**
     * Get a file object.
     *
     * @param {string} fileID The ID of the file object to return.
     */
    ;

    _proto.getFile = function getFile(fileID) {
      return this.getState().files[fileID];
    }
    /**
     * Get all files in an array.
     */
    ;

    _proto.getFiles = function getFiles() {
      var _this$getState = this.getState(),
          files = _this$getState.files;

      return Object.keys(files).map(function (fileID) {
        return files[fileID];
      });
    }
    /**
     * A public wrapper for _checkRestrictions — checks if a file passes a set of restrictions.
     * For use in UI pluigins (like Providers), to disallow selecting files that won’t pass restrictions.
     *
     * @param {object} file object to check
     * @param {Array} [files] array to check maxNumberOfFiles and maxTotalFileSize
     * @returns {object} { result: true/false, reason: why file didn’t pass restrictions }
     */
    ;

    _proto.validateRestrictions = function validateRestrictions(file, files) {
      try {
        this.checkRestrictions(file, files);
        return {
          result: true
        };
      } catch (err) {
        return {
          result: false,
          reason: err.message
        };
      }
    }
    /**
     * Check if file passes a set of restrictions set in options: maxFileSize, minFileSize,
     * maxNumberOfFiles and allowedFileTypes.
     *
     * @param {object} file object to check
     * @param {Array} [files] array to check maxNumberOfFiles and maxTotalFileSize
     * @private
     */
    ;

    _proto.checkRestrictions = function checkRestrictions(file, files) {
      if (files === void 0) {
        files = this.getFiles();
      }

      var _this$opts$restrictio = this.opts.restrictions,
          maxFileSize = _this$opts$restrictio.maxFileSize,
          minFileSize = _this$opts$restrictio.minFileSize,
          maxTotalFileSize = _this$opts$restrictio.maxTotalFileSize,
          maxNumberOfFiles = _this$opts$restrictio.maxNumberOfFiles,
          allowedFileTypes = _this$opts$restrictio.allowedFileTypes;

      if (maxNumberOfFiles) {
        if (files.length + 1 > maxNumberOfFiles) {
          throw new RestrictionError("" + this.i18n('youCanOnlyUploadX', {
            smart_count: maxNumberOfFiles
          }));
        }
      }

      if (allowedFileTypes) {
        var isCorrectFileType = allowedFileTypes.some(function (type) {
          // check if this is a mime-type
          if (type.indexOf('/') > -1) {
            if (!file.type) return false;
            return mimeMatch(file.type.replace(/;.*?$/, ''), type);
          } // otherwise this is likely an extension


          if (type[0] === '.' && file.extension) {
            return file.extension.toLowerCase() === type.substr(1).toLowerCase();
          }

          return false;
        });

        if (!isCorrectFileType) {
          var allowedFileTypesString = allowedFileTypes.join(', ');
          throw new RestrictionError(this.i18n('youCanOnlyUploadFileTypes', {
            types: allowedFileTypesString
          }));
        }
      } // We can't check maxTotalFileSize if the size is unknown.


      if (maxTotalFileSize && file.size != null) {
        var totalFilesSize = 0;
        totalFilesSize += file.size;
        files.forEach(function (f) {
          totalFilesSize += f.size;
        });

        if (totalFilesSize > maxTotalFileSize) {
          throw new RestrictionError(this.i18n('exceedsSize2', {
            backwardsCompat: this.i18n('exceedsSize'),
            size: prettierBytes(maxTotalFileSize),
            file: file.name
          }));
        }
      } // We can't check maxFileSize if the size is unknown.


      if (maxFileSize && file.size != null) {
        if (file.size > maxFileSize) {
          throw new RestrictionError(this.i18n('exceedsSize2', {
            backwardsCompat: this.i18n('exceedsSize'),
            size: prettierBytes(maxFileSize),
            file: file.name
          }));
        }
      } // We can't check minFileSize if the size is unknown.


      if (minFileSize && file.size != null) {
        if (file.size < minFileSize) {
          throw new RestrictionError(this.i18n('inferiorSize', {
            size: prettierBytes(minFileSize)
          }));
        }
      }
    }
    /**
     * Check if minNumberOfFiles restriction is reached before uploading.
     *
     * @private
     */
    ;

    _proto.checkMinNumberOfFiles = function checkMinNumberOfFiles(files) {
      var minNumberOfFiles = this.opts.restrictions.minNumberOfFiles;

      if (Object.keys(files).length < minNumberOfFiles) {
        throw new RestrictionError("" + this.i18n('youHaveToAtLeastSelectX', {
          smart_count: minNumberOfFiles
        }));
      }
    }
    /**
     * Logs an error, sets Informer message, then throws the error.
     * Emits a 'restriction-failed' event if it’s a restriction error
     *
     * @param {object | string} err — Error object or plain string message
     * @param {object} [options]
     * @param {boolean} [options.showInformer=true] — Sometimes developer might want to show Informer manually
     * @param {object} [options.file=null] — File object used to emit the restriction error
     * @param {boolean} [options.throwErr=true] — Errors shouldn’t be thrown, for example, in `upload-error` event
     * @private
     */
    ;

    _proto.showOrLogErrorAndThrow = function showOrLogErrorAndThrow(err, _temp) {
      var _ref = _temp === void 0 ? {} : _temp,
          _ref$showInformer = _ref.showInformer,
          showInformer = _ref$showInformer === void 0 ? true : _ref$showInformer,
          _ref$file = _ref.file,
          file = _ref$file === void 0 ? null : _ref$file,
          _ref$throwErr = _ref.throwErr,
          throwErr = _ref$throwErr === void 0 ? true : _ref$throwErr;

      var message = typeof err === 'object' ? err.message : err;
      var details = typeof err === 'object' && err.details ? err.details : ''; // Restriction errors should be logged, but not as errors,
      // as they are expected and shown in the UI.

      var logMessageWithDetails = message;

      if (details) {
        logMessageWithDetails += " " + details;
      }

      if (err.isRestriction) {
        this.log(logMessageWithDetails);
        this.emit('restriction-failed', file, err);
      } else {
        this.log(logMessageWithDetails, 'error');
      } // Sometimes informer has to be shown manually by the developer,
      // for example, in `onBeforeFileAdded`.


      if (showInformer) {
        this.info({
          message: message,
          details: details
        }, 'error', this.opts.infoTimeout);
      }

      if (throwErr) {
        throw typeof err === 'object' ? err : new Error(err);
      }
    };

    _proto.assertNewUploadAllowed = function assertNewUploadAllowed(file) {
      var _this$getState2 = this.getState(),
          allowNewUpload = _this$getState2.allowNewUpload;

      if (allowNewUpload === false) {
        this.showOrLogErrorAndThrow(new RestrictionError(this.i18n('noNewAlreadyUploading')), {
          file: file
        });
      }
    }
    /**
     * Create a file state object based on user-provided `addFile()` options.
     *
     * Note this is extremely side-effectful and should only be done when a file state object will be added to state immediately afterward!
     *
     * The `files` value is passed in because it may be updated by the caller without updating the store.
     */
    ;

    _proto.checkAndCreateFileStateObject = function checkAndCreateFileStateObject(files, f) {
      var fileType = getFileType(f);
      var file = f;
      file.type = fileType;
      var onBeforeFileAddedResult = this.opts.onBeforeFileAdded(file, files);

      if (onBeforeFileAddedResult === false) {
        // Don’t show UI info for this error, as it should be done by the developer
        this.showOrLogErrorAndThrow(new RestrictionError('Cannot add the file because onBeforeFileAdded returned false.'), {
          showInformer: false,
          file: file
        });
      }

      if (typeof onBeforeFileAddedResult === 'object' && onBeforeFileAddedResult) {
        file = onBeforeFileAddedResult;
      }

      var fileName;

      if (file.name) {
        fileName = file.name;
      } else if (fileType.split('/')[0] === 'image') {
        fileName = fileType.split('/')[0] + "." + fileType.split('/')[1];
      } else {
        fileName = 'noname';
      }

      var fileExtension = getFileNameAndExtension(fileName).extension;
      var isRemote = file.isRemote || false;
      var fileID = generateFileID(file);

      if (files[fileID] && !files[fileID].isGhost) {
        this.showOrLogErrorAndThrow(new RestrictionError(this.i18n('noDuplicates', {
          fileName: fileName
        })), {
          file: file
        });
      }

      var meta = file.meta || {};
      meta.name = fileName;
      meta.type = fileType; // `null` means the size is unknown.

      var size = Number.isFinite(file.data.size) ? file.data.size : null;
      var newFile = {
        source: file.source || '',
        id: fileID,
        name: fileName,
        extension: fileExtension || '',
        meta: _extends$3({}, this.getState().meta, meta),
        type: fileType,
        data: file.data,
        progress: {
          percentage: 0,
          bytesUploaded: 0,
          bytesTotal: size,
          uploadComplete: false,
          uploadStarted: null
        },
        size: size,
        isRemote: isRemote,
        remote: file.remote || '',
        preview: file.preview
      };

      try {
        var filesArray = Object.keys(files).map(function (i) {
          return files[i];
        });
        this.checkRestrictions(newFile, filesArray);
      } catch (err) {
        this.showOrLogErrorAndThrow(err, {
          file: newFile
        });
      }

      return newFile;
    } // Schedule an upload if `autoProceed` is enabled.
    ;

    _proto.startIfAutoProceed = function startIfAutoProceed() {
      var _this3 = this;

      if (this.opts.autoProceed && !this.scheduledAutoProceed) {
        this.scheduledAutoProceed = setTimeout(function () {
          _this3.scheduledAutoProceed = null;

          _this3.upload().catch(function (err) {
            if (!err.isRestriction) {
              _this3.log(err.stack || err.message || err);
            }
          });
        }, 4);
      }
    }
    /**
     * Add a new file to `state.files`. This will run `onBeforeFileAdded`,
     * try to guess file type in a clever way, check file against restrictions,
     * and start an upload if `autoProceed === true`.
     *
     * @param {object} file object to add
     * @returns {string} id for the added file
     */
    ;

    _proto.addFile = function addFile(file) {
      var _extends3;

      this.assertNewUploadAllowed(file);

      var _this$getState3 = this.getState(),
          files = _this$getState3.files;

      var newFile = this.checkAndCreateFileStateObject(files, file); // Users are asked to re-select recovered files without data,
      // and to keep the progress, meta and everthing else, we only replace said data

      if (files[newFile.id] && files[newFile.id].isGhost) {
        newFile = _extends$3({}, files[newFile.id], {
          data: file.data,
          isGhost: false
        });
        this.log("Replaced the blob in the restored ghost file: " + newFile.name + ", " + newFile.id);
      }

      this.setState({
        files: _extends$3({}, files, (_extends3 = {}, _extends3[newFile.id] = newFile, _extends3))
      });
      this.emit('file-added', newFile);
      this.emit('files-added', [newFile]);
      this.log("Added file: " + newFile.name + ", " + newFile.id + ", mime type: " + newFile.type);
      this.startIfAutoProceed();
      return newFile.id;
    }
    /**
     * Add multiple files to `state.files`. See the `addFile()` documentation.
     *
     * If an error occurs while adding a file, it is logged and the user is notified.
     * This is good for UI plugins, but not for programmatic use.
     * Programmatic users should usually still use `addFile()` on individual files.
     */
    ;

    _proto.addFiles = function addFiles(fileDescriptors) {
      var _this4 = this;

      this.assertNewUploadAllowed(); // create a copy of the files object only once

      var files = _extends$3({}, this.getState().files);

      var newFiles = [];
      var errors = [];

      for (var i = 0; i < fileDescriptors.length; i++) {
        try {
          var newFile = this.checkAndCreateFileStateObject(files, fileDescriptors[i]); // Users are asked to re-select recovered files without data,
          // and to keep the progress, meta and everthing else, we only replace said data

          if (files[newFile.id] && files[newFile.id].isGhost) {
            newFile = _extends$3({}, files[newFile.id], {
              data: fileDescriptors[i].data,
              isGhost: false
            });
            this.log("Replaced blob in a ghost file: " + newFile.name + ", " + newFile.id);
          }

          files[newFile.id] = newFile;
          newFiles.push(newFile);
        } catch (err) {
          if (!err.isRestriction) {
            errors.push(err);
          }
        }
      }

      this.setState({
        files: files
      });
      newFiles.forEach(function (newFile) {
        _this4.emit('file-added', newFile);
      });
      this.emit('files-added', newFiles);

      if (newFiles.length > 5) {
        this.log("Added batch of " + newFiles.length + " files");
      } else {
        Object.keys(newFiles).forEach(function (fileID) {
          _this4.log("Added file: " + newFiles[fileID].name + "\n id: " + newFiles[fileID].id + "\n type: " + newFiles[fileID].type);
        });
      }

      if (newFiles.length > 0) {
        this.startIfAutoProceed();
      }

      if (errors.length > 0) {
        var message = 'Multiple errors occurred while adding files:\n';
        errors.forEach(function (subError) {
          message += "\n * " + subError.message;
        });
        this.info({
          message: this.i18n('addBulkFilesFailed', {
            smart_count: errors.length
          }),
          details: message
        }, 'error', this.opts.infoTimeout);

        if (typeof AggregateError === 'function') {
          throw new AggregateError(errors, message);
        } else {
          var err = new Error(message);
          err.errors = errors;
          throw err;
        }
      }
    };

    _proto.removeFiles = function removeFiles(fileIDs, reason) {
      var _this5 = this;

      var _this$getState4 = this.getState(),
          files = _this$getState4.files,
          currentUploads = _this$getState4.currentUploads;

      var updatedFiles = _extends$3({}, files);

      var updatedUploads = _extends$3({}, currentUploads);

      var removedFiles = Object.create(null);
      fileIDs.forEach(function (fileID) {
        if (files[fileID]) {
          removedFiles[fileID] = files[fileID];
          delete updatedFiles[fileID];
        }
      }); // Remove files from the `fileIDs` list in each upload.

      function fileIsNotRemoved(uploadFileID) {
        return removedFiles[uploadFileID] === undefined;
      }

      Object.keys(updatedUploads).forEach(function (uploadID) {
        var newFileIDs = currentUploads[uploadID].fileIDs.filter(fileIsNotRemoved); // Remove the upload if no files are associated with it anymore.

        if (newFileIDs.length === 0) {
          delete updatedUploads[uploadID];
          return;
        }

        updatedUploads[uploadID] = _extends$3({}, currentUploads[uploadID], {
          fileIDs: newFileIDs
        });
      });
      var stateUpdate = {
        currentUploads: updatedUploads,
        files: updatedFiles
      }; // If all files were removed - allow new uploads,
      // and clear recoveredState

      if (Object.keys(updatedFiles).length === 0) {
        stateUpdate.allowNewUpload = true;
        stateUpdate.error = null;
        stateUpdate.recoveredState = null;
      }

      this.setState(stateUpdate);
      this.calculateTotalProgress();
      var removedFileIDs = Object.keys(removedFiles);
      removedFileIDs.forEach(function (fileID) {
        _this5.emit('file-removed', removedFiles[fileID], reason);
      });

      if (removedFileIDs.length > 5) {
        this.log("Removed " + removedFileIDs.length + " files");
      } else {
        this.log("Removed files: " + removedFileIDs.join(', '));
      }
    };

    _proto.removeFile = function removeFile(fileID, reason) {
      if (reason === void 0) {
        reason = null;
      }

      this.removeFiles([fileID], reason);
    };

    _proto.pauseResume = function pauseResume(fileID) {
      if (!this.getState().capabilities.resumableUploads || this.getFile(fileID).uploadComplete) {
        return undefined;
      }

      var wasPaused = this.getFile(fileID).isPaused || false;
      var isPaused = !wasPaused;
      this.setFileState(fileID, {
        isPaused: isPaused
      });
      this.emit('upload-pause', fileID, isPaused);
      return isPaused;
    };

    _proto.pauseAll = function pauseAll() {
      var updatedFiles = _extends$3({}, this.getState().files);

      var inProgressUpdatedFiles = Object.keys(updatedFiles).filter(function (file) {
        return !updatedFiles[file].progress.uploadComplete && updatedFiles[file].progress.uploadStarted;
      });
      inProgressUpdatedFiles.forEach(function (file) {
        var updatedFile = _extends$3({}, updatedFiles[file], {
          isPaused: true
        });

        updatedFiles[file] = updatedFile;
      });
      this.setState({
        files: updatedFiles
      });
      this.emit('pause-all');
    };

    _proto.resumeAll = function resumeAll() {
      var updatedFiles = _extends$3({}, this.getState().files);

      var inProgressUpdatedFiles = Object.keys(updatedFiles).filter(function (file) {
        return !updatedFiles[file].progress.uploadComplete && updatedFiles[file].progress.uploadStarted;
      });
      inProgressUpdatedFiles.forEach(function (file) {
        var updatedFile = _extends$3({}, updatedFiles[file], {
          isPaused: false,
          error: null
        });

        updatedFiles[file] = updatedFile;
      });
      this.setState({
        files: updatedFiles
      });
      this.emit('resume-all');
    };

    _proto.retryAll = function retryAll() {
      var updatedFiles = _extends$3({}, this.getState().files);

      var filesToRetry = Object.keys(updatedFiles).filter(function (file) {
        return updatedFiles[file].error;
      });
      filesToRetry.forEach(function (file) {
        var updatedFile = _extends$3({}, updatedFiles[file], {
          isPaused: false,
          error: null
        });

        updatedFiles[file] = updatedFile;
      });
      this.setState({
        files: updatedFiles,
        error: null
      });
      this.emit('retry-all', filesToRetry);

      if (filesToRetry.length === 0) {
        return Promise.resolve({
          successful: [],
          failed: []
        });
      }

      var uploadID = this.createUpload(filesToRetry, {
        forceAllowNewUpload: true // create new upload even if allowNewUpload: false

      });
      return this.runUpload(uploadID);
    };

    _proto.cancelAll = function cancelAll() {
      this.emit('cancel-all');

      var _this$getState5 = this.getState(),
          files = _this$getState5.files;

      var fileIDs = Object.keys(files);

      if (fileIDs.length) {
        this.removeFiles(fileIDs, 'cancel-all');
      }

      this.setState({
        totalProgress: 0,
        error: null,
        recoveredState: null
      });
    };

    _proto.retryUpload = function retryUpload(fileID) {
      this.setFileState(fileID, {
        error: null,
        isPaused: false
      });
      this.emit('upload-retry', fileID);
      var uploadID = this.createUpload([fileID], {
        forceAllowNewUpload: true // create new upload even if allowNewUpload: false

      });
      return this.runUpload(uploadID);
    };

    _proto.reset = function reset() {
      this.cancelAll();
    };

    _proto.logout = function logout() {
      this.iteratePlugins(function (plugin) {
        if (plugin.provider && plugin.provider.logout) {
          plugin.provider.logout();
        }
      });
    };

    _proto.calculateProgress = function calculateProgress(file, data) {
      if (!this.getFile(file.id)) {
        this.log("Not setting progress for a file that has been removed: " + file.id);
        return;
      } // bytesTotal may be null or zero; in that case we can't divide by it


      var canHavePercentage = Number.isFinite(data.bytesTotal) && data.bytesTotal > 0;
      this.setFileState(file.id, {
        progress: _extends$3({}, this.getFile(file.id).progress, {
          bytesUploaded: data.bytesUploaded,
          bytesTotal: data.bytesTotal,
          percentage: canHavePercentage // TODO(goto-bus-stop) flooring this should probably be the choice of the UI?
          // we get more accurate calculations if we don't round this at all.
          ? Math.round(data.bytesUploaded / data.bytesTotal * 100) : 0
        })
      });
      this.calculateTotalProgress();
    };

    _proto.calculateTotalProgress = function calculateTotalProgress() {
      // calculate total progress, using the number of files currently uploading,
      // multiplied by 100 and the summ of individual progress of each file
      var files = this.getFiles();
      var inProgress = files.filter(function (file) {
        return file.progress.uploadStarted || file.progress.preprocess || file.progress.postprocess;
      });

      if (inProgress.length === 0) {
        this.emit('progress', 0);
        this.setState({
          totalProgress: 0
        });
        return;
      }

      var sizedFiles = inProgress.filter(function (file) {
        return file.progress.bytesTotal != null;
      });
      var unsizedFiles = inProgress.filter(function (file) {
        return file.progress.bytesTotal == null;
      });

      if (sizedFiles.length === 0) {
        var progressMax = inProgress.length * 100;
        var currentProgress = unsizedFiles.reduce(function (acc, file) {
          return acc + file.progress.percentage;
        }, 0);

        var _totalProgress = Math.round(currentProgress / progressMax * 100);

        this.setState({
          totalProgress: _totalProgress
        });
        return;
      }

      var totalSize = sizedFiles.reduce(function (acc, file) {
        return acc + file.progress.bytesTotal;
      }, 0);
      var averageSize = totalSize / sizedFiles.length;
      totalSize += averageSize * unsizedFiles.length;
      var uploadedSize = 0;
      sizedFiles.forEach(function (file) {
        uploadedSize += file.progress.bytesUploaded;
      });
      unsizedFiles.forEach(function (file) {
        uploadedSize += averageSize * (file.progress.percentage || 0) / 100;
      });
      var totalProgress = totalSize === 0 ? 0 : Math.round(uploadedSize / totalSize * 100); // hot fix, because:
      // uploadedSize ended up larger than totalSize, resulting in 1325% total

      if (totalProgress > 100) {
        totalProgress = 100;
      }

      this.setState({
        totalProgress: totalProgress
      });
      this.emit('progress', totalProgress);
    }
    /**
     * Registers listeners for all global actions, like:
     * `error`, `file-removed`, `upload-progress`
     */
    ;

    _proto.addListeners = function addListeners() {
      var _this6 = this;

      /**
       * @param {Error} error
       * @param {object} [file]
       * @param {object} [response]
       */
      var errorHandler = function errorHandler(error, file, response) {
        var errorMsg = error.message || 'Unknown error';

        if (error.details) {
          errorMsg += " " + error.details;
        }

        _this6.setState({
          error: errorMsg
        });

        if (file != null) {
          _this6.setFileState(file.id, {
            error: errorMsg,
            response: response
          });
        }
      };

      this.on('error', errorHandler);
      this.on('upload-error', function (file, error, response) {
        errorHandler(error, file, response);

        if (typeof error === 'object' && error.message) {
          var newError = new Error(error.message);
          newError.details = error.message;

          if (error.details) {
            newError.details += " " + error.details;
          }

          newError.message = _this6.i18n('failedToUpload', {
            file: file.name
          });

          _this6.showOrLogErrorAndThrow(newError, {
            throwErr: false
          });
        } else {
          _this6.showOrLogErrorAndThrow(error, {
            throwErr: false
          });
        }
      });
      this.on('upload', function () {
        _this6.setState({
          error: null
        });
      });
      this.on('upload-started', function (file) {
        if (!_this6.getFile(file.id)) {
          _this6.log("Not setting progress for a file that has been removed: " + file.id);

          return;
        }

        _this6.setFileState(file.id, {
          progress: {
            uploadStarted: Date.now(),
            uploadComplete: false,
            percentage: 0,
            bytesUploaded: 0,
            bytesTotal: file.size
          }
        });
      });
      this.on('upload-progress', this.calculateProgress);
      this.on('upload-success', function (file, uploadResp) {
        if (!_this6.getFile(file.id)) {
          _this6.log("Not setting progress for a file that has been removed: " + file.id);

          return;
        }

        var currentProgress = _this6.getFile(file.id).progress;

        _this6.setFileState(file.id, {
          progress: _extends$3({}, currentProgress, {
            postprocess: _this6.postProcessors.length > 0 ? {
              mode: 'indeterminate'
            } : null,
            uploadComplete: true,
            percentage: 100,
            bytesUploaded: currentProgress.bytesTotal
          }),
          response: uploadResp,
          uploadURL: uploadResp.uploadURL,
          isPaused: false
        });

        _this6.calculateTotalProgress();
      });
      this.on('preprocess-progress', function (file, progress) {
        if (!_this6.getFile(file.id)) {
          _this6.log("Not setting progress for a file that has been removed: " + file.id);

          return;
        }

        _this6.setFileState(file.id, {
          progress: _extends$3({}, _this6.getFile(file.id).progress, {
            preprocess: progress
          })
        });
      });
      this.on('preprocess-complete', function (file) {
        if (!_this6.getFile(file.id)) {
          _this6.log("Not setting progress for a file that has been removed: " + file.id);

          return;
        }

        var files = _extends$3({}, _this6.getState().files);

        files[file.id] = _extends$3({}, files[file.id], {
          progress: _extends$3({}, files[file.id].progress)
        });
        delete files[file.id].progress.preprocess;

        _this6.setState({
          files: files
        });
      });
      this.on('postprocess-progress', function (file, progress) {
        if (!_this6.getFile(file.id)) {
          _this6.log("Not setting progress for a file that has been removed: " + file.id);

          return;
        }

        _this6.setFileState(file.id, {
          progress: _extends$3({}, _this6.getState().files[file.id].progress, {
            postprocess: progress
          })
        });
      });
      this.on('postprocess-complete', function (file) {
        if (!_this6.getFile(file.id)) {
          _this6.log("Not setting progress for a file that has been removed: " + file.id);

          return;
        }

        var files = _extends$3({}, _this6.getState().files);

        files[file.id] = _extends$3({}, files[file.id], {
          progress: _extends$3({}, files[file.id].progress)
        });
        delete files[file.id].progress.postprocess; // TODO should we set some kind of `fullyComplete` property on the file object
        // so it's easier to see that the file is upload…fully complete…rather than
        // what we have to do now (`uploadComplete && !postprocess`)

        _this6.setState({
          files: files
        });
      });
      this.on('restored', function () {
        // Files may have changed--ensure progress is still accurate.
        _this6.calculateTotalProgress();
      }); // show informer if offline

      if (typeof window !== 'undefined' && window.addEventListener) {
        window.addEventListener('online', function () {
          return _this6.updateOnlineStatus();
        });
        window.addEventListener('offline', function () {
          return _this6.updateOnlineStatus();
        });
        setTimeout(function () {
          return _this6.updateOnlineStatus();
        }, 3000);
      }
    };

    _proto.updateOnlineStatus = function updateOnlineStatus() {
      var online = typeof window.navigator.onLine !== 'undefined' ? window.navigator.onLine : true;

      if (!online) {
        this.emit('is-offline');
        this.info(this.i18n('noInternetConnection'), 'error', 0);
        this.wasOffline = true;
      } else {
        this.emit('is-online');

        if (this.wasOffline) {
          this.emit('back-online');
          this.info(this.i18n('connectedToInternet'), 'success', 3000);
          this.wasOffline = false;
        }
      }
    };

    _proto.getID = function getID() {
      return this.opts.id;
    }
    /**
     * Registers a plugin with Core.
     *
     * @param {object} Plugin object
     * @param {object} [opts] object with options to be passed to Plugin
     * @returns {object} self for chaining
     */
    // eslint-disable-next-line no-shadow
    ;

    _proto.use = function use(Plugin, opts) {
      if (typeof Plugin !== 'function') {
        var msg = "Expected a plugin class, but got " + (Plugin === null ? 'null' : typeof Plugin) + "." + ' Please verify that the plugin was imported and spelled correctly.';
        throw new TypeError(msg);
      } // Instantiate


      var plugin = new Plugin(this, opts);
      var pluginId = plugin.id;
      this.plugins[plugin.type] = this.plugins[plugin.type] || [];

      if (!pluginId) {
        throw new Error('Your plugin must have an id');
      }

      if (!plugin.type) {
        throw new Error('Your plugin must have a type');
      }

      var existsPluginAlready = this.getPlugin(pluginId);

      if (existsPluginAlready) {
        var _msg = "Already found a plugin named '" + existsPluginAlready.id + "'. " + ("Tried to use: '" + pluginId + "'.\n") + 'Uppy plugins must have unique `id` options. See https://uppy.io/docs/plugins/#id.';

        throw new Error(_msg);
      }

      if (Plugin.VERSION) {
        this.log("Using " + pluginId + " v" + Plugin.VERSION);
      }

      this.plugins[plugin.type].push(plugin);
      plugin.install();
      return this;
    }
    /**
     * Find one Plugin by name.
     *
     * @param {string} id plugin id
     * @returns {object|boolean}
     */
    ;

    _proto.getPlugin = function getPlugin(id) {
      var foundPlugin = null;
      this.iteratePlugins(function (plugin) {
        if (plugin.id === id) {
          foundPlugin = plugin;
          return false;
        }
      });
      return foundPlugin;
    }
    /**
     * Iterate through all `use`d plugins.
     *
     * @param {Function} method that will be run on each plugin
     */
    ;

    _proto.iteratePlugins = function iteratePlugins(method) {
      var _this7 = this;

      Object.keys(this.plugins).forEach(function (pluginType) {
        _this7.plugins[pluginType].forEach(method);
      });
    }
    /**
     * Uninstall and remove a plugin.
     *
     * @param {object} instance The plugin instance to remove.
     */
    ;

    _proto.removePlugin = function removePlugin(instance) {
      var _extends4;

      this.log("Removing plugin " + instance.id);
      this.emit('plugin-remove', instance);

      if (instance.uninstall) {
        instance.uninstall();
      }

      var list = this.plugins[instance.type].slice(); // list.indexOf failed here, because Vue3 converted the plugin instance
      // to a Proxy object, which failed the strict comparison test:
      // obj !== objProxy

      var index = findIndex(list, function (item) {
        return item.id === instance.id;
      });

      if (index !== -1) {
        list.splice(index, 1);
        this.plugins[instance.type] = list;
      }

      var state = this.getState();
      var updatedState = {
        plugins: _extends$3({}, state.plugins, (_extends4 = {}, _extends4[instance.id] = undefined, _extends4))
      };
      this.setState(updatedState);
    }
    /**
     * Uninstall all plugins and close down this Uppy instance.
     */
    ;

    _proto.close = function close() {
      var _this8 = this;

      this.log("Closing Uppy instance " + this.opts.id + ": removing all files and uninstalling plugins");
      this.reset();
      this.storeUnsubscribe();
      this.iteratePlugins(function (plugin) {
        _this8.removePlugin(plugin);
      });
    }
    /**
     * Set info message in `state.info`, so that UI plugins like `Informer`
     * can display the message.
     *
     * @param {string | object} message Message to be displayed by the informer
     * @param {string} [type]
     * @param {number} [duration]
     */
    ;

    _proto.info = function info(message, type, duration) {
      if (type === void 0) {
        type = 'info';
      }

      if (duration === void 0) {
        duration = 3000;
      }

      var isComplexMessage = typeof message === 'object';
      this.setState({
        info: {
          isHidden: false,
          type: type,
          message: isComplexMessage ? message.message : message,
          details: isComplexMessage ? message.details : null
        }
      });
      this.emit('info-visible');
      clearTimeout(this.infoTimeoutID);

      if (duration === 0) {
        this.infoTimeoutID = undefined;
        return;
      } // hide the informer after `duration` milliseconds


      this.infoTimeoutID = setTimeout(this.hideInfo, duration);
    };

    _proto.hideInfo = function hideInfo() {
      var newInfo = _extends$3({}, this.getState().info, {
        isHidden: true
      });

      this.setState({
        info: newInfo
      });
      this.emit('info-hidden');
    }
    /**
     * Passes messages to a function, provided in `opts.logger`.
     * If `opts.logger: Uppy.debugLogger` or `opts.debug: true`, logs to the browser console.
     *
     * @param {string|object} message to log
     * @param {string} [type] optional `error` or `warning`
     */
    ;

    _proto.log = function log(message, type) {
      var logger = this.opts.logger;

      switch (type) {
        case 'error':
          logger.error(message);
          break;

        case 'warning':
          logger.warn(message);
          break;

        default:
          logger.debug(message);
          break;
      }
    }
    /**
     * Obsolete, event listeners are now added in the constructor.
     */
    ;

    _proto.run = function run() {
      this.log('Calling run() is no longer necessary.', 'warning');
      return this;
    }
    /**
     * Restore an upload by its ID.
     */
    ;

    _proto.restore = function restore(uploadID) {
      this.log("Core: attempting to restore upload \"" + uploadID + "\"");

      if (!this.getState().currentUploads[uploadID]) {
        this.removeUpload(uploadID);
        return Promise.reject(new Error('Nonexistent upload'));
      }

      return this.runUpload(uploadID);
    }
    /**
     * Create an upload for a bunch of files.
     *
     * @param {Array<string>} fileIDs File IDs to include in this upload.
     * @returns {string} ID of this upload.
     */
    ;

    _proto.createUpload = function createUpload(fileIDs, opts) {
      var _extends5;

      if (opts === void 0) {
        opts = {};
      }

      // uppy.retryAll sets this to true — when retrying we want to ignore `allowNewUpload: false`
      var _opts = opts,
          _opts$forceAllowNewUp = _opts.forceAllowNewUpload,
          forceAllowNewUpload = _opts$forceAllowNewUp === void 0 ? false : _opts$forceAllowNewUp;

      var _this$getState6 = this.getState(),
          allowNewUpload = _this$getState6.allowNewUpload,
          currentUploads = _this$getState6.currentUploads;

      if (!allowNewUpload && !forceAllowNewUpload) {
        throw new Error('Cannot create a new upload: already uploading.');
      }

      var uploadID = cuid_1();
      this.emit('upload', {
        id: uploadID,
        fileIDs: fileIDs
      });
      this.setState({
        allowNewUpload: this.opts.allowMultipleUploads !== false,
        currentUploads: _extends$3({}, currentUploads, (_extends5 = {}, _extends5[uploadID] = {
          fileIDs: fileIDs,
          step: 0,
          result: {}
        }, _extends5))
      });
      return uploadID;
    };

    _proto.getUpload = function getUpload(uploadID) {
      var _this$getState7 = this.getState(),
          currentUploads = _this$getState7.currentUploads;

      return currentUploads[uploadID];
    }
    /**
     * Add data to an upload's result object.
     *
     * @param {string} uploadID The ID of the upload.
     * @param {object} data Data properties to add to the result object.
     */
    ;

    _proto.addResultData = function addResultData(uploadID, data) {
      var _extends6;

      if (!this.getUpload(uploadID)) {
        this.log("Not setting result for an upload that has been removed: " + uploadID);
        return;
      }

      var _this$getState8 = this.getState(),
          currentUploads = _this$getState8.currentUploads;

      var currentUpload = _extends$3({}, currentUploads[uploadID], {
        result: _extends$3({}, currentUploads[uploadID].result, data)
      });

      this.setState({
        currentUploads: _extends$3({}, currentUploads, (_extends6 = {}, _extends6[uploadID] = currentUpload, _extends6))
      });
    }
    /**
     * Remove an upload, eg. if it has been canceled or completed.
     *
     * @param {string} uploadID The ID of the upload.
     */
    ;

    _proto.removeUpload = function removeUpload(uploadID) {
      var currentUploads = _extends$3({}, this.getState().currentUploads);

      delete currentUploads[uploadID];
      this.setState({
        currentUploads: currentUploads
      });
    }
    /**
     * Run an upload. This picks up where it left off in case the upload is being restored.
     *
     * @private
     */
    ;

    _proto.runUpload = function runUpload(uploadID) {
      var _this9 = this;

      var uploadData = this.getState().currentUploads[uploadID];
      var restoreStep = uploadData.step;
      var steps = [].concat(this.preProcessors, this.uploaders, this.postProcessors);
      var lastStep = Promise.resolve();
      steps.forEach(function (fn, step) {
        // Skip this step if we are restoring and have already completed this step before.
        if (step < restoreStep) {
          return;
        }

        lastStep = lastStep.then(function () {
          var _extends7;

          var _this9$getState = _this9.getState(),
              currentUploads = _this9$getState.currentUploads;

          var currentUpload = currentUploads[uploadID];

          if (!currentUpload) {
            return;
          }

          var updatedUpload = _extends$3({}, currentUpload, {
            step: step
          });

          _this9.setState({
            currentUploads: _extends$3({}, currentUploads, (_extends7 = {}, _extends7[uploadID] = updatedUpload, _extends7))
          }); // TODO give this the `updatedUpload` object as its only parameter maybe?
          // Otherwise when more metadata may be added to the upload this would keep getting more parameters
          // eslint-disable-next-line consistent-return


          return fn(updatedUpload.fileIDs, uploadID);
        }).then(function () {
          return null;
        });
      }); // Not returning the `catch`ed promise, because we still want to return a rejected
      // promise from this method if the upload failed.

      lastStep.catch(function (err) {
        _this9.emit('error', err, uploadID);

        _this9.removeUpload(uploadID);
      });
      return lastStep.then(function () {
        // Set result data.
        var _this9$getState2 = _this9.getState(),
            currentUploads = _this9$getState2.currentUploads;

        var currentUpload = currentUploads[uploadID];

        if (!currentUpload) {
          return;
        } // Mark postprocessing step as complete if necessary; this addresses a case where we might get
        // stuck in the postprocessing UI while the upload is fully complete.
        // If the postprocessing steps do not do any work, they may not emit postprocessing events at
        // all, and never mark the postprocessing as complete. This is fine on its own but we
        // introduced code in the @uppy/core upload-success handler to prepare postprocessing progress
        // state if any postprocessors are registered. That is to avoid a "flash of completed state"
        // before the postprocessing plugins can emit events.
        //
        // So, just in case an upload with postprocessing plugins *has* completed *without* emitting
        // postprocessing completion, we do it instead.


        currentUpload.fileIDs.forEach(function (fileID) {
          var file = _this9.getFile(fileID);

          if (file && file.progress.postprocess) {
            _this9.emit('postprocess-complete', file);
          }
        });
        var files = currentUpload.fileIDs.map(function (fileID) {
          return _this9.getFile(fileID);
        });
        var successful = files.filter(function (file) {
          return !file.error;
        });
        var failed = files.filter(function (file) {
          return file.error;
        });

        _this9.addResultData(uploadID, {
          successful: successful,
          failed: failed,
          uploadID: uploadID
        });
      }).then(function () {
        // Emit completion events.
        // This is in a separate function so that the `currentUploads` variable
        // always refers to the latest state. In the handler right above it refers
        // to an outdated object without the `.result` property.
        var _this9$getState3 = _this9.getState(),
            currentUploads = _this9$getState3.currentUploads;

        if (!currentUploads[uploadID]) {
          return;
        }

        var currentUpload = currentUploads[uploadID];
        var result = currentUpload.result;

        _this9.emit('complete', result);

        _this9.removeUpload(uploadID); // eslint-disable-next-line consistent-return


        return result;
      }).then(function (result) {
        if (result == null) {
          _this9.log("Not setting result for an upload that has been removed: " + uploadID);
        }

        return result;
      });
    }
    /**
     * Start an upload for all the files that are not currently being uploaded.
     *
     * @returns {Promise}
     */
    ;

    _proto.upload = function upload() {
      var _this10 = this;

      if (!this.plugins.uploader) {
        this.log('No uploader type plugins are used', 'warning');
      }

      var _this$getState9 = this.getState(),
          files = _this$getState9.files;

      var onBeforeUploadResult = this.opts.onBeforeUpload(files);

      if (onBeforeUploadResult === false) {
        return Promise.reject(new Error('Not starting the upload because onBeforeUpload returned false'));
      }

      if (onBeforeUploadResult && typeof onBeforeUploadResult === 'object') {
        files = onBeforeUploadResult; // Updating files in state, because uploader plugins receive file IDs,
        // and then fetch the actual file object from state

        this.setState({
          files: files
        });
      }

      return Promise.resolve().then(function () {
        return _this10.checkMinNumberOfFiles(files);
      }).catch(function (err) {
        _this10.showOrLogErrorAndThrow(err);
      }).then(function () {
        var _this10$getState = _this10.getState(),
            currentUploads = _this10$getState.currentUploads; // get a list of files that are currently assigned to uploads


        var currentlyUploadingFiles = Object.keys(currentUploads).reduce(function (prev, curr) {
          return prev.concat(currentUploads[curr].fileIDs);
        }, []);
        var waitingFileIDs = [];
        Object.keys(files).forEach(function (fileID) {
          var file = _this10.getFile(fileID); // if the file hasn't started uploading and hasn't already been assigned to an upload..


          if (!file.progress.uploadStarted && currentlyUploadingFiles.indexOf(fileID) === -1) {
            waitingFileIDs.push(file.id);
          }
        });

        var uploadID = _this10.createUpload(waitingFileIDs);

        return _this10.runUpload(uploadID);
      }).catch(function (err) {
        _this10.showOrLogErrorAndThrow(err, {
          showInformer: false
        });
      });
    };

    _createClass$1(Uppy, [{
      key: "state",
      get: function get() {
        return this.getState();
      }
    }]);

    return Uppy;
  }();

  Uppy.VERSION = version;

  var lib$2 = function core(opts) {
    return new Uppy(opts);
  }; // Expose class constructor.


  var Uppy_1 = Uppy;
  var Plugin_1 = Plugin$1;
  var debugLogger_1 = debugLogger;
  lib$2.Uppy = Uppy_1;
  lib$2.Plugin = Plugin_1;
  lib$2.debugLogger = debugLogger_1;

  function _inheritsLoose$4(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf$4(subClass, superClass); }

  function _wrapNativeSuper$1(Class) { var _cache = typeof Map === "function" ? new Map() : undefined; _wrapNativeSuper$1 = function _wrapNativeSuper(Class) { if (Class === null || !_isNativeFunction$1(Class)) return Class; if (typeof Class !== "function") { throw new TypeError("Super expression must either be null or a function"); } if (typeof _cache !== "undefined") { if (_cache.has(Class)) return _cache.get(Class); _cache.set(Class, Wrapper); } function Wrapper() { return _construct$1(Class, arguments, _getPrototypeOf$1(this).constructor); } Wrapper.prototype = Object.create(Class.prototype, { constructor: { value: Wrapper, enumerable: false, writable: true, configurable: true } }); return _setPrototypeOf$4(Wrapper, Class); }; return _wrapNativeSuper$1(Class); }

  function _construct$1(Parent, args, Class) { if (_isNativeReflectConstruct$1()) { _construct$1 = Reflect.construct; } else { _construct$1 = function _construct(Parent, args, Class) { var a = [null]; a.push.apply(a, args); var Constructor = Function.bind.apply(Parent, a); var instance = new Constructor(); if (Class) _setPrototypeOf$4(instance, Class.prototype); return instance; }; } return _construct$1.apply(null, arguments); }

  function _isNativeReflectConstruct$1() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

  function _isNativeFunction$1(fn) { return Function.toString.call(fn).indexOf("[native code]") !== -1; }

  function _setPrototypeOf$4(o, p) { _setPrototypeOf$4 = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf$4(o, p); }

  function _getPrototypeOf$1(o) { _getPrototypeOf$1 = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf$1(o); }

  var AuthError = /*#__PURE__*/function (_Error) {
    _inheritsLoose$4(AuthError, _Error);

    function AuthError() {
      var _this;

      _this = _Error.call(this, 'Authorization required') || this;
      _this.name = 'AuthError';
      _this.isAuthError = true;
      return _this;
    }

    return AuthError;
  }( /*#__PURE__*/_wrapNativeSuper$1(Error));

  var AuthError_1 = AuthError;

  function _inheritsLoose$3(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf$3(subClass, superClass); }

  function _wrapNativeSuper(Class) { var _cache = typeof Map === "function" ? new Map() : undefined; _wrapNativeSuper = function _wrapNativeSuper(Class) { if (Class === null || !_isNativeFunction(Class)) return Class; if (typeof Class !== "function") { throw new TypeError("Super expression must either be null or a function"); } if (typeof _cache !== "undefined") { if (_cache.has(Class)) return _cache.get(Class); _cache.set(Class, Wrapper); } function Wrapper() { return _construct(Class, arguments, _getPrototypeOf(this).constructor); } Wrapper.prototype = Object.create(Class.prototype, { constructor: { value: Wrapper, enumerable: false, writable: true, configurable: true } }); return _setPrototypeOf$3(Wrapper, Class); }; return _wrapNativeSuper(Class); }

  function _construct(Parent, args, Class) { if (_isNativeReflectConstruct()) { _construct = Reflect.construct; } else { _construct = function _construct(Parent, args, Class) { var a = [null]; a.push.apply(a, args); var Constructor = Function.bind.apply(Parent, a); var instance = new Constructor(); if (Class) _setPrototypeOf$3(instance, Class.prototype); return instance; }; } return _construct.apply(null, arguments); }

  function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

  function _isNativeFunction(fn) { return Function.toString.call(fn).indexOf("[native code]") !== -1; }

  function _setPrototypeOf$3(o, p) { _setPrototypeOf$3 = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf$3(o, p); }

  function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

  var NetworkError = /*#__PURE__*/function (_Error) {
    _inheritsLoose$3(NetworkError, _Error);

    function NetworkError(error, xhr) {
      var _this;

      if (xhr === void 0) {
        xhr = null;
      }

      _this = _Error.call(this, "This looks like a network error, the endpoint might be blocked by an internet provider or a firewall.\n\nSource error: [" + error + "]") || this;
      _this.isNetworkError = true;
      _this.request = xhr;
      return _this;
    }

    return NetworkError;
  }( /*#__PURE__*/_wrapNativeSuper(Error));

  var NetworkError_1 = NetworkError;

  /**
   * Wrapper around window.fetch that throws a NetworkError when appropriate
   */


  var fetchWithNetworkError = function fetchWithNetworkError() {
    return fetch.apply(void 0, arguments).catch(function (err) {
      if (err.name === 'AbortError') {
        throw err;
      } else {
        throw new NetworkError_1(err);
      }
    });
  };

  var _class$1, _temp$1;

  function _extends$2() { _extends$2 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$2.apply(this, arguments); }

  function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

  function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }



   // Remove the trailing slash so we can always safely append /xyz.


  function stripSlash(url) {
    return url.replace(/\/$/, '');
  }

  var RequestClient$1 = (_temp$1 = _class$1 = /*#__PURE__*/function () {
    function RequestClient(uppy, opts) {
      this.uppy = uppy;
      this.opts = opts;
      this.onReceiveResponse = this.onReceiveResponse.bind(this);
      this.allowedHeaders = ['accept', 'content-type', 'uppy-auth-token'];
      this.preflightDone = false;
    }

    var _proto = RequestClient.prototype;

    _proto.headers = function headers() {
      var userHeaders = this.opts.companionHeaders || this.opts.serverHeaders || {};
      return Promise.resolve(_extends$2({}, this.defaultHeaders, userHeaders));
    };

    _proto._getPostResponseFunc = function _getPostResponseFunc(skip) {
      var _this = this;

      return function (response) {
        if (!skip) {
          return _this.onReceiveResponse(response);
        }

        return response;
      };
    };

    _proto.onReceiveResponse = function onReceiveResponse(response) {
      var state = this.uppy.getState();
      var companion = state.companion || {};
      var host = this.opts.companionUrl;
      var headers = response.headers; // Store the self-identified domain name for the Companion instance we just hit.

      if (headers.has('i-am') && headers.get('i-am') !== companion[host]) {
        var _extends2;

        this.uppy.setState({
          companion: _extends$2({}, companion, (_extends2 = {}, _extends2[host] = headers.get('i-am'), _extends2))
        });
      }

      return response;
    };

    _proto._getUrl = function _getUrl(url) {
      if (/^(https?:|)\/\//.test(url)) {
        return url;
      }

      return this.hostname + "/" + url;
    };

    _proto._json = function _json(res) {
      if (res.status === 401) {
        throw new AuthError_1();
      }

      if (res.status < 200 || res.status > 300) {
        var errMsg = "Failed request with status: " + res.status + ". " + res.statusText;
        return res.json().then(function (errData) {
          errMsg = errData.message ? errMsg + " message: " + errData.message : errMsg;
          errMsg = errData.requestId ? errMsg + " request-Id: " + errData.requestId : errMsg;
          throw new Error(errMsg);
        }).catch(function () {
          throw new Error(errMsg);
        });
      }

      return res.json();
    };

    _proto.preflight = function preflight(path) {
      var _this2 = this;

      if (this.preflightDone) {
        return Promise.resolve(this.allowedHeaders.slice());
      }

      return fetch(this._getUrl(path), {
        method: 'OPTIONS'
      }).then(function (response) {
        if (response.headers.has('access-control-allow-headers')) {
          _this2.allowedHeaders = response.headers.get('access-control-allow-headers').split(',').map(function (headerName) {
            return headerName.trim().toLowerCase();
          });
        }

        _this2.preflightDone = true;
        return _this2.allowedHeaders.slice();
      }).catch(function (err) {
        _this2.uppy.log("[CompanionClient] unable to make preflight request " + err, 'warning');

        _this2.preflightDone = true;
        return _this2.allowedHeaders.slice();
      });
    };

    _proto.preflightAndHeaders = function preflightAndHeaders(path) {
      var _this3 = this;

      return Promise.all([this.preflight(path), this.headers()]).then(function (_ref) {
        var allowedHeaders = _ref[0],
            headers = _ref[1];
        // filter to keep only allowed Headers
        Object.keys(headers).forEach(function (header) {
          if (allowedHeaders.indexOf(header.toLowerCase()) === -1) {
            _this3.uppy.log("[CompanionClient] excluding unallowed header " + header);

            delete headers[header];
          }
        });
        return headers;
      });
    };

    _proto.get = function get(path, skipPostResponse) {
      var _this4 = this;

      return this.preflightAndHeaders(path).then(function (headers) {
        return fetchWithNetworkError(_this4._getUrl(path), {
          method: 'get',
          headers: headers,
          credentials: _this4.opts.companionCookiesRule || 'same-origin'
        });
      }).then(this._getPostResponseFunc(skipPostResponse)).then(function (res) {
        return _this4._json(res);
      }).catch(function (err) {
        if (!err.isAuthError) {
          err.message = "Could not get " + _this4._getUrl(path) + ". " + err.message;
        }

        return Promise.reject(err);
      });
    };

    _proto.post = function post(path, data, skipPostResponse) {
      var _this5 = this;

      return this.preflightAndHeaders(path).then(function (headers) {
        return fetchWithNetworkError(_this5._getUrl(path), {
          method: 'post',
          headers: headers,
          credentials: _this5.opts.companionCookiesRule || 'same-origin',
          body: JSON.stringify(data)
        });
      }).then(this._getPostResponseFunc(skipPostResponse)).then(function (res) {
        return _this5._json(res);
      }).catch(function (err) {
        if (!err.isAuthError) {
          err.message = "Could not post " + _this5._getUrl(path) + ". " + err.message;
        }

        return Promise.reject(err);
      });
    };

    _proto.delete = function _delete(path, data, skipPostResponse) {
      var _this6 = this;

      return this.preflightAndHeaders(path).then(function (headers) {
        return fetchWithNetworkError(_this6.hostname + "/" + path, {
          method: 'delete',
          headers: headers,
          credentials: _this6.opts.companionCookiesRule || 'same-origin',
          body: data ? JSON.stringify(data) : null
        });
      }).then(this._getPostResponseFunc(skipPostResponse)).then(function (res) {
        return _this6._json(res);
      }).catch(function (err) {
        if (!err.isAuthError) {
          err.message = "Could not delete " + _this6._getUrl(path) + ". " + err.message;
        }

        return Promise.reject(err);
      });
    };

    _createClass(RequestClient, [{
      key: "hostname",
      get: function get() {
        var _this$uppy$getState = this.uppy.getState(),
            companion = _this$uppy$getState.companion;

        var host = this.opts.companionUrl;
        return stripSlash(companion && companion[host] ? companion[host] : host);
      }
    }, {
      key: "defaultHeaders",
      get: function get() {
        return {
          Accept: 'application/json',
          'Content-Type': 'application/json',
          'Uppy-Versions': "@uppy/companion-client=" + RequestClient.VERSION
        };
      }
    }]);

    return RequestClient;
  }(), _class$1.VERSION = "1.10.2", _temp$1);

  var has$1 = Object.prototype.hasOwnProperty;

  /**
   * Stringify an object for use in a query string.
   *
   * @param {Object} obj - The object.
   * @param {string} prefix - When nesting, the parent key.
   *     keys in `obj` will be stringified as `prefix[key]`.
   * @returns {string}
   */

  var qsStringify = function queryStringify (obj, prefix) {
    var pairs = [];
    for (var key in obj) {
      if (!has$1.call(obj, key)) {
        continue
      }

      var value = obj[key];
      var enkey = encodeURIComponent(key);
      var pair;
      if (typeof value === 'object') {
        pair = queryStringify(value, prefix ? prefix + '[' + enkey + ']' : enkey);
      } else {
        pair = (prefix ? prefix + '[' + enkey + ']' : enkey) + '=' + encodeURIComponent(value);
      }
      pairs.push(pair);
    }
    return pairs.join('&')
  };

  /**
   * Check if we're required to add a port number.
   *
   * @see https://url.spec.whatwg.org/#default-port
   * @param {Number|String} port Port number we need to check
   * @param {String} protocol Protocol we need to check against.
   * @returns {Boolean} Is it a default port for the given protocol
   * @api private
   */
  var requiresPort = function required(port, protocol) {
    protocol = protocol.split(':')[0];
    port = +port;

    if (!port) return false;

    switch (protocol) {
      case 'http':
      case 'ws':
      return port !== 80;

      case 'https':
      case 'wss':
      return port !== 443;

      case 'ftp':
      return port !== 21;

      case 'gopher':
      return port !== 70;

      case 'file':
      return false;
    }

    return port !== 0;
  };

  var has = Object.prototype.hasOwnProperty
    , undef;

  /**
   * Decode a URI encoded string.
   *
   * @param {String} input The URI encoded string.
   * @returns {String|Null} The decoded string.
   * @api private
   */
  function decode(input) {
    try {
      return decodeURIComponent(input.replace(/\+/g, ' '));
    } catch (e) {
      return null;
    }
  }

  /**
   * Attempts to encode a given input.
   *
   * @param {String} input The string that needs to be encoded.
   * @returns {String|Null} The encoded string.
   * @api private
   */
  function encode(input) {
    try {
      return encodeURIComponent(input);
    } catch (e) {
      return null;
    }
  }

  /**
   * Simple query string parser.
   *
   * @param {String} query The query string that needs to be parsed.
   * @returns {Object}
   * @api public
   */
  function querystring(query) {
    var parser = /([^=?#&]+)=?([^&]*)/g
      , result = {}
      , part;

    while (part = parser.exec(query)) {
      var key = decode(part[1])
        , value = decode(part[2]);

      //
      // Prevent overriding of existing properties. This ensures that build-in
      // methods like `toString` or __proto__ are not overriden by malicious
      // querystrings.
      //
      // In the case if failed decoding, we want to omit the key/value pairs
      // from the result.
      //
      if (key === null || value === null || key in result) continue;
      result[key] = value;
    }

    return result;
  }

  /**
   * Transform a query string to an object.
   *
   * @param {Object} obj Object that should be transformed.
   * @param {String} prefix Optional prefix.
   * @returns {String}
   * @api public
   */
  function querystringify(obj, prefix) {
    prefix = prefix || '';

    var pairs = []
      , value
      , key;

    //
    // Optionally prefix with a '?' if needed
    //
    if ('string' !== typeof prefix) prefix = '?';

    for (key in obj) {
      if (has.call(obj, key)) {
        value = obj[key];

        //
        // Edge cases where we actually want to encode the value to an empty
        // string instead of the stringified value.
        //
        if (!value && (value === null || value === undef || isNaN(value))) {
          value = '';
        }

        key = encode(key);
        value = encode(value);

        //
        // If we failed to encode the strings, we should bail out as we don't
        // want to add invalid strings to the query.
        //
        if (key === null || value === null) continue;
        pairs.push(key +'='+ value);
      }
    }

    return pairs.length ? prefix + pairs.join('&') : '';
  }

  //
  // Expose the module.
  //
  var stringify = querystringify;
  var parse = querystring;

  var querystringify_1 = {
  	stringify: stringify,
  	parse: parse
  };

  var slashes = /^[A-Za-z][A-Za-z0-9+-.]*:\/\//
    , protocolre = /^([a-z][a-z0-9.+-]*:)?(\/\/)?([\\/]+)?([\S\s]*)/i
    , windowsDriveLetter = /^[a-zA-Z]:/
    , whitespace = '[\\x09\\x0A\\x0B\\x0C\\x0D\\x20\\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028\\u2029\\uFEFF]'
    , left = new RegExp('^'+ whitespace +'+');

  /**
   * Trim a given string.
   *
   * @param {String} str String to trim.
   * @public
   */
  function trimLeft(str) {
    return (str ? str : '').toString().replace(left, '');
  }

  /**
   * These are the parse rules for the URL parser, it informs the parser
   * about:
   *
   * 0. The char it Needs to parse, if it's a string it should be done using
   *    indexOf, RegExp using exec and NaN means set as current value.
   * 1. The property we should set when parsing this value.
   * 2. Indication if it's backwards or forward parsing, when set as number it's
   *    the value of extra chars that should be split off.
   * 3. Inherit from location if non existing in the parser.
   * 4. `toLowerCase` the resulting value.
   */
  var rules = [
    ['#', 'hash'],                        // Extract from the back.
    ['?', 'query'],                       // Extract from the back.
    function sanitize(address, url) {     // Sanitize what is left of the address
      return isSpecial(url.protocol) ? address.replace(/\\/g, '/') : address;
    },
    ['/', 'pathname'],                    // Extract from the back.
    ['@', 'auth', 1],                     // Extract from the front.
    [NaN, 'host', undefined, 1, 1],       // Set left over value.
    [/:(\d+)$/, 'port', undefined, 1],    // RegExp the back.
    [NaN, 'hostname', undefined, 1, 1]    // Set left over.
  ];

  /**
   * These properties should not be copied or inherited from. This is only needed
   * for all non blob URL's as a blob URL does not include a hash, only the
   * origin.
   *
   * @type {Object}
   * @private
   */
  var ignore = { hash: 1, query: 1 };

  /**
   * The location object differs when your code is loaded through a normal page,
   * Worker or through a worker using a blob. And with the blobble begins the
   * trouble as the location object will contain the URL of the blob, not the
   * location of the page where our code is loaded in. The actual origin is
   * encoded in the `pathname` so we can thankfully generate a good "default"
   * location from it so we can generate proper relative URL's again.
   *
   * @param {Object|String} loc Optional default location object.
   * @returns {Object} lolcation object.
   * @public
   */
  function lolcation(loc) {
    var globalVar;

    if (typeof window !== 'undefined') globalVar = window;
    else if (typeof commonjsGlobal !== 'undefined') globalVar = commonjsGlobal;
    else if (typeof self !== 'undefined') globalVar = self;
    else globalVar = {};

    var location = globalVar.location || {};
    loc = loc || location;

    var finaldestination = {}
      , type = typeof loc
      , key;

    if ('blob:' === loc.protocol) {
      finaldestination = new Url(unescape(loc.pathname), {});
    } else if ('string' === type) {
      finaldestination = new Url(loc, {});
      for (key in ignore) delete finaldestination[key];
    } else if ('object' === type) {
      for (key in loc) {
        if (key in ignore) continue;
        finaldestination[key] = loc[key];
      }

      if (finaldestination.slashes === undefined) {
        finaldestination.slashes = slashes.test(loc.href);
      }
    }

    return finaldestination;
  }

  /**
   * Check whether a protocol scheme is special.
   *
   * @param {String} The protocol scheme of the URL
   * @return {Boolean} `true` if the protocol scheme is special, else `false`
   * @private
   */
  function isSpecial(scheme) {
    return (
      scheme === 'file:' ||
      scheme === 'ftp:' ||
      scheme === 'http:' ||
      scheme === 'https:' ||
      scheme === 'ws:' ||
      scheme === 'wss:'
    );
  }

  /**
   * @typedef ProtocolExtract
   * @type Object
   * @property {String} protocol Protocol matched in the URL, in lowercase.
   * @property {Boolean} slashes `true` if protocol is followed by "//", else `false`.
   * @property {String} rest Rest of the URL that is not part of the protocol.
   */

  /**
   * Extract protocol information from a URL with/without double slash ("//").
   *
   * @param {String} address URL we want to extract from.
   * @param {Object} location
   * @return {ProtocolExtract} Extracted information.
   * @private
   */
  function extractProtocol(address, location) {
    address = trimLeft(address);
    location = location || {};

    var match = protocolre.exec(address);
    var protocol = match[1] ? match[1].toLowerCase() : '';
    var forwardSlashes = !!match[2];
    var otherSlashes = !!match[3];
    var slashesCount = 0;
    var rest;

    if (forwardSlashes) {
      if (otherSlashes) {
        rest = match[2] + match[3] + match[4];
        slashesCount = match[2].length + match[3].length;
      } else {
        rest = match[2] + match[4];
        slashesCount = match[2].length;
      }
    } else {
      if (otherSlashes) {
        rest = match[3] + match[4];
        slashesCount = match[3].length;
      } else {
        rest = match[4];
      }
    }

    if (protocol === 'file:') {
      if (slashesCount >= 2) {
        rest = rest.slice(2);
      }
    } else if (isSpecial(protocol)) {
      rest = match[4];
    } else if (protocol) {
      if (forwardSlashes) {
        rest = rest.slice(2);
      }
    } else if (slashesCount >= 2 && isSpecial(location.protocol)) {
      rest = match[4];
    }

    return {
      protocol: protocol,
      slashes: forwardSlashes || isSpecial(protocol),
      slashesCount: slashesCount,
      rest: rest
    };
  }

  /**
   * Resolve a relative URL pathname against a base URL pathname.
   *
   * @param {String} relative Pathname of the relative URL.
   * @param {String} base Pathname of the base URL.
   * @return {String} Resolved pathname.
   * @private
   */
  function resolve(relative, base) {
    if (relative === '') return base;

    var path = (base || '/').split('/').slice(0, -1).concat(relative.split('/'))
      , i = path.length
      , last = path[i - 1]
      , unshift = false
      , up = 0;

    while (i--) {
      if (path[i] === '.') {
        path.splice(i, 1);
      } else if (path[i] === '..') {
        path.splice(i, 1);
        up++;
      } else if (up) {
        if (i === 0) unshift = true;
        path.splice(i, 1);
        up--;
      }
    }

    if (unshift) path.unshift('');
    if (last === '.' || last === '..') path.push('');

    return path.join('/');
  }

  /**
   * The actual URL instance. Instead of returning an object we've opted-in to
   * create an actual constructor as it's much more memory efficient and
   * faster and it pleases my OCD.
   *
   * It is worth noting that we should not use `URL` as class name to prevent
   * clashes with the global URL instance that got introduced in browsers.
   *
   * @constructor
   * @param {String} address URL we want to parse.
   * @param {Object|String} [location] Location defaults for relative paths.
   * @param {Boolean|Function} [parser] Parser for the query string.
   * @private
   */
  function Url(address, location, parser) {
    address = trimLeft(address);

    if (!(this instanceof Url)) {
      return new Url(address, location, parser);
    }

    var relative, extracted, parse, instruction, index, key
      , instructions = rules.slice()
      , type = typeof location
      , url = this
      , i = 0;

    //
    // The following if statements allows this module two have compatibility with
    // 2 different API:
    //
    // 1. Node.js's `url.parse` api which accepts a URL, boolean as arguments
    //    where the boolean indicates that the query string should also be parsed.
    //
    // 2. The `URL` interface of the browser which accepts a URL, object as
    //    arguments. The supplied object will be used as default values / fall-back
    //    for relative paths.
    //
    if ('object' !== type && 'string' !== type) {
      parser = location;
      location = null;
    }

    if (parser && 'function' !== typeof parser) parser = querystringify_1.parse;

    location = lolcation(location);

    //
    // Extract protocol information before running the instructions.
    //
    extracted = extractProtocol(address || '', location);
    relative = !extracted.protocol && !extracted.slashes;
    url.slashes = extracted.slashes || relative && location.slashes;
    url.protocol = extracted.protocol || location.protocol || '';
    address = extracted.rest;

    //
    // When the authority component is absent the URL starts with a path
    // component.
    //
    if (
      extracted.protocol === 'file:' && (
        extracted.slashesCount !== 2 || windowsDriveLetter.test(address)) ||
      (!extracted.slashes &&
        (extracted.protocol ||
          extracted.slashesCount < 2 ||
          !isSpecial(url.protocol)))
    ) {
      instructions[3] = [/(.*)/, 'pathname'];
    }

    for (; i < instructions.length; i++) {
      instruction = instructions[i];

      if (typeof instruction === 'function') {
        address = instruction(address, url);
        continue;
      }

      parse = instruction[0];
      key = instruction[1];

      if (parse !== parse) {
        url[key] = address;
      } else if ('string' === typeof parse) {
        if (~(index = address.indexOf(parse))) {
          if ('number' === typeof instruction[2]) {
            url[key] = address.slice(0, index);
            address = address.slice(index + instruction[2]);
          } else {
            url[key] = address.slice(index);
            address = address.slice(0, index);
          }
        }
      } else if ((index = parse.exec(address))) {
        url[key] = index[1];
        address = address.slice(0, index.index);
      }

      url[key] = url[key] || (
        relative && instruction[3] ? location[key] || '' : ''
      );

      //
      // Hostname, host and protocol should be lowercased so they can be used to
      // create a proper `origin`.
      //
      if (instruction[4]) url[key] = url[key].toLowerCase();
    }

    //
    // Also parse the supplied query string in to an object. If we're supplied
    // with a custom parser as function use that instead of the default build-in
    // parser.
    //
    if (parser) url.query = parser(url.query);

    //
    // If the URL is relative, resolve the pathname against the base URL.
    //
    if (
        relative
      && location.slashes
      && url.pathname.charAt(0) !== '/'
      && (url.pathname !== '' || location.pathname !== '')
    ) {
      url.pathname = resolve(url.pathname, location.pathname);
    }

    //
    // Default to a / for pathname if none exists. This normalizes the URL
    // to always have a /
    //
    if (url.pathname.charAt(0) !== '/' && isSpecial(url.protocol)) {
      url.pathname = '/' + url.pathname;
    }

    //
    // We should not add port numbers if they are already the default port number
    // for a given protocol. As the host also contains the port number we're going
    // override it with the hostname which contains no port number.
    //
    if (!requiresPort(url.port, url.protocol)) {
      url.host = url.hostname;
      url.port = '';
    }

    //
    // Parse down the `auth` for the username and password.
    //
    url.username = url.password = '';
    if (url.auth) {
      instruction = url.auth.split(':');
      url.username = instruction[0] || '';
      url.password = instruction[1] || '';
    }

    url.origin = url.protocol !== 'file:' && isSpecial(url.protocol) && url.host
      ? url.protocol +'//'+ url.host
      : 'null';

    //
    // The href is just the compiled result.
    //
    url.href = url.toString();
  }

  /**
   * This is convenience method for changing properties in the URL instance to
   * insure that they all propagate correctly.
   *
   * @param {String} part          Property we need to adjust.
   * @param {Mixed} value          The newly assigned value.
   * @param {Boolean|Function} fn  When setting the query, it will be the function
   *                               used to parse the query.
   *                               When setting the protocol, double slash will be
   *                               removed from the final url if it is true.
   * @returns {URL} URL instance for chaining.
   * @public
   */
  function set(part, value, fn) {
    var url = this;

    switch (part) {
      case 'query':
        if ('string' === typeof value && value.length) {
          value = (fn || querystringify_1.parse)(value);
        }

        url[part] = value;
        break;

      case 'port':
        url[part] = value;

        if (!requiresPort(value, url.protocol)) {
          url.host = url.hostname;
          url[part] = '';
        } else if (value) {
          url.host = url.hostname +':'+ value;
        }

        break;

      case 'hostname':
        url[part] = value;

        if (url.port) value += ':'+ url.port;
        url.host = value;
        break;

      case 'host':
        url[part] = value;

        if (/:\d+$/.test(value)) {
          value = value.split(':');
          url.port = value.pop();
          url.hostname = value.join(':');
        } else {
          url.hostname = value;
          url.port = '';
        }

        break;

      case 'protocol':
        url.protocol = value.toLowerCase();
        url.slashes = !fn;
        break;

      case 'pathname':
      case 'hash':
        if (value) {
          var char = part === 'pathname' ? '/' : '#';
          url[part] = value.charAt(0) !== char ? char + value : value;
        } else {
          url[part] = value;
        }
        break;

      default:
        url[part] = value;
    }

    for (var i = 0; i < rules.length; i++) {
      var ins = rules[i];

      if (ins[4]) url[ins[1]] = url[ins[1]].toLowerCase();
    }

    url.origin = url.protocol !== 'file:' && isSpecial(url.protocol) && url.host
      ? url.protocol +'//'+ url.host
      : 'null';

    url.href = url.toString();

    return url;
  }

  /**
   * Transform the properties back in to a valid and full URL string.
   *
   * @param {Function} stringify Optional query stringify function.
   * @returns {String} Compiled version of the URL.
   * @public
   */
  function toString(stringify) {
    if (!stringify || 'function' !== typeof stringify) stringify = querystringify_1.stringify;

    var query
      , url = this
      , protocol = url.protocol;

    if (protocol && protocol.charAt(protocol.length - 1) !== ':') protocol += ':';

    var result = protocol + (url.slashes || isSpecial(url.protocol) ? '//' : '');

    if (url.username) {
      result += url.username;
      if (url.password) result += ':'+ url.password;
      result += '@';
    }

    result += url.host + url.pathname;

    query = 'object' === typeof url.query ? stringify(url.query) : url.query;
    if (query) result += '?' !== query.charAt(0) ? '?'+ query : query;

    if (url.hash) result += url.hash;

    return result;
  }

  Url.prototype = { set: set, toString: toString };

  //
  // Expose the URL parser and some additional properties that might be useful for
  // others or testing.
  //
  Url.extractProtocol = extractProtocol;
  Url.location = lolcation;
  Url.trimLeft = trimLeft;
  Url.qs = querystringify_1;

  var urlParse = Url;

  /**
   * This module serves as an Async wrapper for LocalStorage
   */

  var setItem = function (key, value) {
    return new Promise(function (resolve) {
      localStorage.setItem(key, value);
      resolve();
    });
  };

  var getItem = function (key) {
    return Promise.resolve(localStorage.getItem(key));
  };

  var removeItem = function (key) {
    return new Promise(function (resolve) {
      localStorage.removeItem(key);
      resolve();
    });
  };

  var tokenStorage = {
  	setItem: setItem,
  	getItem: getItem,
  	removeItem: removeItem
  };

  function _extends$1() { _extends$1 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$1.apply(this, arguments); }

  function _inheritsLoose$2(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf$2(subClass, superClass); }

  function _setPrototypeOf$2(o, p) { _setPrototypeOf$2 = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf$2(o, p); }









  var _getName$1 = function _getName(id) {
    return id.split('-').map(function (s) {
      return s.charAt(0).toUpperCase() + s.slice(1);
    }).join(' ');
  };

  var Provider$1 = /*#__PURE__*/function (_RequestClient) {
    _inheritsLoose$2(Provider, _RequestClient);

    function Provider(uppy, opts) {
      var _this;

      _this = _RequestClient.call(this, uppy, opts) || this;
      _this.provider = opts.provider;
      _this.id = _this.provider;
      _this.name = _this.opts.name || _getName$1(_this.id);
      _this.pluginId = _this.opts.pluginId;
      _this.tokenKey = "companion-" + _this.pluginId + "-auth-token";
      _this.companionKeysParams = _this.opts.companionKeysParams;
      _this.preAuthToken = null;
      return _this;
    }

    var _proto = Provider.prototype;

    _proto.headers = function headers() {
      var _this2 = this;

      return Promise.all([_RequestClient.prototype.headers.call(this), this.getAuthToken()]).then(function (_ref) {
        var headers = _ref[0],
            token = _ref[1];
        var authHeaders = {};

        if (token) {
          authHeaders['uppy-auth-token'] = token;
        }

        if (_this2.companionKeysParams) {
          authHeaders['uppy-credentials-params'] = btoa(JSON.stringify({
            params: _this2.companionKeysParams
          }));
        }

        return _extends$1({}, headers, authHeaders);
      });
    };

    _proto.onReceiveResponse = function onReceiveResponse(response) {
      response = _RequestClient.prototype.onReceiveResponse.call(this, response);
      var plugin = this.uppy.getPlugin(this.pluginId);
      var oldAuthenticated = plugin.getPluginState().authenticated;
      var authenticated = oldAuthenticated ? response.status !== 401 : response.status < 400;
      plugin.setPluginState({
        authenticated: authenticated
      });
      return response;
    } // @todo(i.olarewaju) consider whether or not this method should be exposed
    ;

    _proto.setAuthToken = function setAuthToken(token) {
      return this.uppy.getPlugin(this.pluginId).storage.setItem(this.tokenKey, token);
    };

    _proto.getAuthToken = function getAuthToken() {
      return this.uppy.getPlugin(this.pluginId).storage.getItem(this.tokenKey);
    };

    _proto.authUrl = function authUrl(queries) {
      if (queries === void 0) {
        queries = {};
      }

      if (this.preAuthToken) {
        queries.uppyPreAuthToken = this.preAuthToken;
      }

      var strigifiedQueries = qsStringify(queries);
      strigifiedQueries = strigifiedQueries ? "?" + strigifiedQueries : strigifiedQueries;
      return this.hostname + "/" + this.id + "/connect" + strigifiedQueries;
    };

    _proto.fileUrl = function fileUrl(id) {
      return this.hostname + "/" + this.id + "/get/" + id;
    };

    _proto.fetchPreAuthToken = function fetchPreAuthToken() {
      var _this3 = this;

      if (!this.companionKeysParams) {
        return Promise.resolve();
      }

      return this.post(this.id + "/preauth/", {
        params: this.companionKeysParams
      }).then(function (res) {
        _this3.preAuthToken = res.token;
      }).catch(function (err) {
        _this3.uppy.log("[CompanionClient] unable to fetch preAuthToken " + err, 'warning');
      });
    };

    _proto.list = function list(directory) {
      return this.get(this.id + "/list/" + (directory || ''));
    };

    _proto.logout = function logout() {
      var _this4 = this;

      return this.get(this.id + "/logout").then(function (response) {
        return Promise.all([response, _this4.uppy.getPlugin(_this4.pluginId).storage.removeItem(_this4.tokenKey)]);
      }).then(function (_ref2) {
        var response = _ref2[0];
        return response;
      });
    };

    Provider.initPlugin = function initPlugin(plugin, opts, defaultOpts) {
      plugin.type = 'acquirer';
      plugin.files = [];

      if (defaultOpts) {
        plugin.opts = _extends$1({}, defaultOpts, opts);
      }

      if (opts.serverUrl || opts.serverPattern) {
        throw new Error('`serverUrl` and `serverPattern` have been renamed to `companionUrl` and `companionAllowedHosts` respectively in the 0.30.5 release. Please consult the docs (for example, https://uppy.io/docs/instagram/ for the Instagram plugin) and use the updated options.`');
      }

      if (opts.companionAllowedHosts) {
        var pattern = opts.companionAllowedHosts; // validate companionAllowedHosts param

        if (typeof pattern !== 'string' && !Array.isArray(pattern) && !(pattern instanceof RegExp)) {
          throw new TypeError(plugin.id + ": the option \"companionAllowedHosts\" must be one of string, Array, RegExp");
        }

        plugin.opts.companionAllowedHosts = pattern;
      } else {
        // does not start with https://
        if (/^(?!https?:\/\/).*$/i.test(opts.companionUrl)) {
          plugin.opts.companionAllowedHosts = "https://" + opts.companionUrl.replace(/^\/\//, '');
        } else {
          plugin.opts.companionAllowedHosts = new urlParse(opts.companionUrl).origin;
        }
      }

      plugin.storage = plugin.opts.storage || tokenStorage;
    };

    return Provider;
  }(RequestClient$1);

  function _inheritsLoose$1(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf$1(subClass, superClass); }

  function _setPrototypeOf$1(o, p) { _setPrototypeOf$1 = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf$1(o, p); }



  var _getName = function _getName(id) {
    return id.split('-').map(function (s) {
      return s.charAt(0).toUpperCase() + s.slice(1);
    }).join(' ');
  };

  var SearchProvider = /*#__PURE__*/function (_RequestClient) {
    _inheritsLoose$1(SearchProvider, _RequestClient);

    function SearchProvider(uppy, opts) {
      var _this;

      _this = _RequestClient.call(this, uppy, opts) || this;
      _this.provider = opts.provider;
      _this.id = _this.provider;
      _this.name = _this.opts.name || _getName(_this.id);
      _this.pluginId = _this.opts.pluginId;
      return _this;
    }

    var _proto = SearchProvider.prototype;

    _proto.fileUrl = function fileUrl(id) {
      return this.hostname + "/search/" + this.id + "/get/" + id;
    };

    _proto.search = function search(text, queries) {
      queries = queries ? "&" + queries : '';
      return this.get("search/" + this.id + "/list?q=" + encodeURIComponent(text) + queries);
    };

    return SearchProvider;
  }(RequestClient$1);

  var Socket$1 = /*#__PURE__*/function () {
    function UppySocket(opts) {
      this.opts = opts;
      this._queued = [];
      this.isOpen = false;
      this.emitter = namespaceEmitter();
      this._handleMessage = this._handleMessage.bind(this);
      this.close = this.close.bind(this);
      this.emit = this.emit.bind(this);
      this.on = this.on.bind(this);
      this.once = this.once.bind(this);
      this.send = this.send.bind(this);

      if (!opts || opts.autoOpen !== false) {
        this.open();
      }
    }

    var _proto = UppySocket.prototype;

    _proto.open = function open() {
      var _this = this;

      this.socket = new WebSocket(this.opts.target);

      this.socket.onopen = function (e) {
        _this.isOpen = true;

        while (_this._queued.length > 0 && _this.isOpen) {
          var first = _this._queued[0];

          _this.send(first.action, first.payload);

          _this._queued = _this._queued.slice(1);
        }
      };

      this.socket.onclose = function (e) {
        _this.isOpen = false;
      };

      this.socket.onmessage = this._handleMessage;
    };

    _proto.close = function close() {
      if (this.socket) {
        this.socket.close();
      }
    };

    _proto.send = function send(action, payload) {
      // attach uuid
      if (!this.isOpen) {
        this._queued.push({
          action: action,
          payload: payload
        });

        return;
      }

      this.socket.send(JSON.stringify({
        action: action,
        payload: payload
      }));
    };

    _proto.on = function on(action, handler) {
      this.emitter.on(action, handler);
    };

    _proto.emit = function emit(action, payload) {
      this.emitter.emit(action, payload);
    };

    _proto.once = function once(action, handler) {
      this.emitter.once(action, handler);
    };

    _proto._handleMessage = function _handleMessage(e) {
      try {
        var message = JSON.parse(e.data);
        this.emit(message.action, message.payload);
      } catch (err) {
        console.log(err);
      }
    };

    return UppySocket;
  }();

  /**
   * Manages communications with Companion
   */









  var lib$1 = {
    RequestClient: RequestClient$1,
    Provider: Provider$1,
    SearchProvider: SearchProvider,
    Socket: Socket$1
  };

  function _emitSocketProgress(uploader, progressData, file) {
    var progress = progressData.progress,
        bytesUploaded = progressData.bytesUploaded,
        bytesTotal = progressData.bytesTotal;

    if (progress) {
      uploader.uppy.log("Upload progress: " + progress);
      uploader.uppy.emit('upload-progress', file, {
        uploader: uploader,
        bytesUploaded: bytesUploaded,
        bytesTotal: bytesTotal
      });
    }
  }

  var emitSocketProgress = lodash_throttle(_emitSocketProgress, 300, {
    leading: true,
    trailing: true
  });

  var getSocketHost = function getSocketHost(url) {
    // get the host domain
    var regex = /^(?:https?:\/\/|\/\/)?(?:[^@\n]+@)?(?:www\.)?([^\n]+)/i;
    var host = regex.exec(url)[1];
    var socketProtocol = /^http:\/\//i.test(url) ? 'ws' : 'wss';
    return socketProtocol + "://" + host;
  };

  var settle = function settle(promises) {
    var resolutions = [];
    var rejections = [];

    function resolved(value) {
      resolutions.push(value);
    }

    function rejected(error) {
      rejections.push(error);
    }

    var wait = Promise.all(promises.map(function (promise) {
      return promise.then(resolved, rejected);
    }));
    return wait.then(function () {
      return {
        successful: resolutions,
        failed: rejections
      };
    });
  };

  /**
   * Create a wrapper around an event emitter with a `remove` method to remove
   * all events that were added using the wrapped emitter.
   */
  var EventTracker = /*#__PURE__*/function () {
    function EventTracker(emitter) {
      this._events = [];
      this._emitter = emitter;
    }

    var _proto = EventTracker.prototype;

    _proto.on = function on(event, fn) {
      this._events.push([event, fn]);

      return this._emitter.on(event, fn);
    };

    _proto.remove = function remove() {
      var _this = this;

      this._events.forEach(function (_ref) {
        var event = _ref[0],
            fn = _ref[1];

        _this._emitter.off(event, fn);
      });
    };

    return EventTracker;
  }();

  /**
   * Helper to abort upload requests if there has not been any progress for `timeout` ms.
   * Create an instance using `timer = new ProgressTimeout(10000, onTimeout)`
   * Call `timer.progress()` to signal that there has been progress of any kind.
   * Call `timer.done()` when the upload has completed.
   */
  var ProgressTimeout = /*#__PURE__*/function () {
    function ProgressTimeout(timeout, timeoutHandler) {
      this._timeout = timeout;
      this._onTimedOut = timeoutHandler;
      this._isDone = false;
      this._aliveTimer = null;
      this._onTimedOut = this._onTimedOut.bind(this);
    }

    var _proto = ProgressTimeout.prototype;

    _proto.progress = function progress() {
      // Some browsers fire another progress event when the upload is
      // cancelled, so we have to ignore progress after the timer was
      // told to stop.
      if (this._isDone) return;

      if (this._timeout > 0) {
        if (this._aliveTimer) clearTimeout(this._aliveTimer);
        this._aliveTimer = setTimeout(this._onTimedOut, this._timeout);
      }
    };

    _proto.done = function done() {
      if (this._aliveTimer) {
        clearTimeout(this._aliveTimer);
        this._aliveTimer = null;
      }

      this._isDone = true;
    };

    return ProgressTimeout;
  }();

  var ProgressTimeout_1 = ProgressTimeout;

  function createCancelError() {
    return new Error('Cancelled');
  }

  var RateLimitedQueue = /*#__PURE__*/function () {
    function RateLimitedQueue(limit) {
      if (typeof limit !== 'number' || limit === 0) {
        this.limit = Infinity;
      } else {
        this.limit = limit;
      }

      this.activeRequests = 0;
      this.queuedHandlers = [];
    }

    var _proto = RateLimitedQueue.prototype;

    _proto._call = function _call(fn) {
      var _this = this;

      this.activeRequests += 1;
      var _done = false;
      var cancelActive;

      try {
        cancelActive = fn();
      } catch (err) {
        this.activeRequests -= 1;
        throw err;
      }

      return {
        abort: function abort() {
          if (_done) return;
          _done = true;
          _this.activeRequests -= 1;
          cancelActive();

          _this._queueNext();
        },
        done: function done() {
          if (_done) return;
          _done = true;
          _this.activeRequests -= 1;

          _this._queueNext();
        }
      };
    };

    _proto._queueNext = function _queueNext() {
      var _this2 = this;

      // Do it soon but not immediately, this allows clearing out the entire queue synchronously
      // one by one without continuously _advancing_ it (and starting new tasks before immediately
      // aborting them)
      Promise.resolve().then(function () {
        _this2._next();
      });
    };

    _proto._next = function _next() {
      if (this.activeRequests >= this.limit) {
        return;
      }

      if (this.queuedHandlers.length === 0) {
        return;
      } // Dispatch the next request, and update the abort/done handlers
      // so that cancelling it does the Right Thing (and doesn't just try
      // to dequeue an already-running request).


      var next = this.queuedHandlers.shift();

      var handler = this._call(next.fn);

      next.abort = handler.abort;
      next.done = handler.done;
    };

    _proto._queue = function _queue(fn, options) {
      var _this3 = this;

      if (options === void 0) {
        options = {};
      }

      var handler = {
        fn: fn,
        priority: options.priority || 0,
        abort: function abort() {
          _this3._dequeue(handler);
        },
        done: function done() {
          throw new Error('Cannot mark a queued request as done: this indicates a bug');
        }
      };
      var index = findIndex(this.queuedHandlers, function (other) {
        return handler.priority > other.priority;
      });

      if (index === -1) {
        this.queuedHandlers.push(handler);
      } else {
        this.queuedHandlers.splice(index, 0, handler);
      }

      return handler;
    };

    _proto._dequeue = function _dequeue(handler) {
      var index = this.queuedHandlers.indexOf(handler);

      if (index !== -1) {
        this.queuedHandlers.splice(index, 1);
      }
    };

    _proto.run = function run(fn, queueOptions) {
      if (this.activeRequests < this.limit) {
        return this._call(fn);
      }

      return this._queue(fn, queueOptions);
    };

    _proto.wrapPromiseFunction = function wrapPromiseFunction(fn, queueOptions) {
      var _this4 = this;

      return function () {
        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }

        var queuedRequest;
        var outerPromise = new Promise(function (resolve, reject) {
          queuedRequest = _this4.run(function () {
            var cancelError;
            var innerPromise;

            try {
              innerPromise = Promise.resolve(fn.apply(void 0, args));
            } catch (err) {
              innerPromise = Promise.reject(err);
            }

            innerPromise.then(function (result) {
              if (cancelError) {
                reject(cancelError);
              } else {
                queuedRequest.done();
                resolve(result);
              }
            }, function (err) {
              if (cancelError) {
                reject(cancelError);
              } else {
                queuedRequest.done();
                reject(err);
              }
            });
            return function () {
              cancelError = createCancelError();
            };
          }, queueOptions);
        });

        outerPromise.abort = function () {
          queuedRequest.abort();
        };

        return outerPromise;
      };
    };

    return RateLimitedQueue;
  }();

  function isNetworkError(xhr) {
    if (!xhr) {
      return false;
    }

    return xhr.readyState !== 0 && xhr.readyState !== 4 || xhr.status === 0;
  }

  var isNetworkError_1 = isNetworkError;

  var _class, _temp;

  function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

  function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }

  function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

  function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

  var Plugin = lib$2.Plugin;





  var Provider = lib$1.Provider,
      RequestClient = lib$1.RequestClient,
      Socket = lib$1.Socket;

















  function buildResponseError(xhr, error) {
    // No error message
    if (!error) error = new Error('Upload error'); // Got an error message string

    if (typeof error === 'string') error = new Error(error); // Got something else

    if (!(error instanceof Error)) {
      error = _extends(new Error('Upload error'), {
        data: error
      });
    }

    if (isNetworkError_1(xhr)) {
      error = new NetworkError_1(error, xhr);
      return error;
    }

    error.request = xhr;
    return error;
  }
  /**
   * Set `data.type` in the blob to `file.meta.type`,
   * because we might have detected a more accurate file type in Uppy
   * https://stackoverflow.com/a/50875615
   *
   * @param {object} file File object with `data`, `size` and `meta` properties
   * @returns {object} blob updated with the new `type` set from `file.meta.type`
   */


  function setTypeInBlob(file) {
    var dataWithUpdatedType = file.data.slice(0, file.data.size, file.meta.type);
    return dataWithUpdatedType;
  }

  var lib = (_temp = _class = /*#__PURE__*/function (_Plugin) {
    _inheritsLoose(XHRUpload, _Plugin);

    function XHRUpload(uppy, opts) {
      var _this;

      _this = _Plugin.call(this, uppy, opts) || this;
      _this.type = 'uploader';
      _this.id = _this.opts.id || 'XHRUpload';
      _this.title = 'XHRUpload';
      _this.defaultLocale = {
        strings: {
          timedOut: 'Upload stalled for %{seconds} seconds, aborting.'
        }
      }; // Default options

      var defaultOptions = {
        formData: true,
        fieldName: 'files[]',
        method: 'post',
        metaFields: null,
        responseUrlFieldName: 'url',
        bundle: false,
        headers: {},
        timeout: 30 * 1000,
        limit: 0,
        withCredentials: false,
        responseType: '',

        /**
         * @typedef respObj
         * @property {string} responseText
         * @property {number} status
         * @property {string} statusText
         * @property {object.<string, string>} headers
         *
         * @param {string} responseText the response body string
         * @param {XMLHttpRequest | respObj} response the response object (XHR or similar)
         */
        getResponseData: function getResponseData(responseText, response) {
          var parsedResponse = {};

          try {
            parsedResponse = JSON.parse(responseText);
          } catch (err) {
            console.log(err);
          }

          return parsedResponse;
        },

        /**
         *
         * @param {string} responseText the response body string
         * @param {XMLHttpRequest | respObj} response the response object (XHR or similar)
         */
        getResponseError: function getResponseError(responseText, response) {
          var error = new Error('Upload error');

          if (isNetworkError_1(response)) {
            error = new NetworkError_1(error, response);
          }

          return error;
        },

        /**
         * Check if the response from the upload endpoint indicates that the upload was successful.
         *
         * @param {number} status the response status code
         * @param {string} responseText the response body string
         * @param {XMLHttpRequest | respObj} response the response object (XHR or similar)
         */
        validateStatus: function validateStatus(status, responseText, response) {
          return status >= 200 && status < 300;
        }
      };
      _this.opts = _extends({}, defaultOptions, opts);

      _this.i18nInit();

      _this.handleUpload = _this.handleUpload.bind(_assertThisInitialized(_this)); // Simultaneous upload limiting is shared across all uploads with this plugin.
      // __queue is for internal Uppy use only!

      if (_this.opts.__queue instanceof RateLimitedQueue) {
        _this.requests = _this.opts.__queue;
      } else {
        _this.requests = new RateLimitedQueue(_this.opts.limit);
      }

      if (_this.opts.bundle && !_this.opts.formData) {
        throw new Error('`opts.formData` must be true when `opts.bundle` is enabled.');
      }

      _this.uploaderEvents = Object.create(null);
      return _this;
    }

    var _proto = XHRUpload.prototype;

    _proto.setOptions = function setOptions(newOpts) {
      _Plugin.prototype.setOptions.call(this, newOpts);

      this.i18nInit();
    };

    _proto.i18nInit = function i18nInit() {
      this.translator = new Translator([this.defaultLocale, this.uppy.locale, this.opts.locale]);
      this.i18n = this.translator.translate.bind(this.translator);
      this.setPluginState(); // so that UI re-renders and we see the updated locale
    };

    _proto.getOptions = function getOptions(file) {
      var overrides = this.uppy.getState().xhrUpload;
      var headers = this.opts.headers;

      var opts = _extends({}, this.opts, overrides || {}, file.xhrUpload || {}, {
        headers: {}
      }); // Support for `headers` as a function, only in the XHRUpload settings.
      // Options set by other plugins in Uppy state or on the files themselves are still merged in afterward.
      //
      // ```js
      // headers: (file) => ({ expires: file.meta.expires })
      // ```


      if (typeof headers === 'function') {
        opts.headers = headers(file);
      } else {
        _extends(opts.headers, this.opts.headers);
      }

      if (overrides) {
        _extends(opts.headers, overrides.headers);
      }

      if (file.xhrUpload) {
        _extends(opts.headers, file.xhrUpload.headers);
      }

      return opts;
    };

    _proto.addMetadata = function addMetadata(formData, meta, opts) {
      var metaFields = Array.isArray(opts.metaFields) ? opts.metaFields // Send along all fields by default.
      : Object.keys(meta);
      metaFields.forEach(function (item) {
        formData.append(item, meta[item]);
      });
    };

    _proto.createFormDataUpload = function createFormDataUpload(file, opts) {
      var formPost = new FormData();
      this.addMetadata(formPost, file.meta, opts);
      var dataWithUpdatedType = setTypeInBlob(file);

      if (file.name) {
        formPost.append(opts.fieldName, dataWithUpdatedType, file.meta.name);
      } else {
        formPost.append(opts.fieldName, dataWithUpdatedType);
      }

      return formPost;
    };

    _proto.createBundledUpload = function createBundledUpload(files, opts) {
      var _this2 = this;

      var formPost = new FormData();

      var _this$uppy$getState = this.uppy.getState(),
          meta = _this$uppy$getState.meta;

      this.addMetadata(formPost, meta, opts);
      files.forEach(function (file) {
        var opts = _this2.getOptions(file);

        var dataWithUpdatedType = setTypeInBlob(file);

        if (file.name) {
          formPost.append(opts.fieldName, dataWithUpdatedType, file.name);
        } else {
          formPost.append(opts.fieldName, dataWithUpdatedType);
        }
      });
      return formPost;
    };

    _proto.createBareUpload = function createBareUpload(file, opts) {
      return file.data;
    };

    _proto.upload = function upload(file, current, total) {
      var _this3 = this;

      var opts = this.getOptions(file);
      this.uppy.log("uploading " + current + " of " + total);
      return new Promise(function (resolve, reject) {
        _this3.uppy.emit('upload-started', file);

        var data = opts.formData ? _this3.createFormDataUpload(file, opts) : _this3.createBareUpload(file, opts);
        var xhr = new XMLHttpRequest();
        _this3.uploaderEvents[file.id] = new EventTracker(_this3.uppy);
        var timer = new ProgressTimeout_1(opts.timeout, function () {
          xhr.abort();
          queuedRequest.done();
          var error = new Error(_this3.i18n('timedOut', {
            seconds: Math.ceil(opts.timeout / 1000)
          }));

          _this3.uppy.emit('upload-error', file, error);

          reject(error);
        });
        var id = cuid_1();
        xhr.upload.addEventListener('loadstart', function (ev) {
          _this3.uppy.log("[XHRUpload] " + id + " started");
        });
        xhr.upload.addEventListener('progress', function (ev) {
          _this3.uppy.log("[XHRUpload] " + id + " progress: " + ev.loaded + " / " + ev.total); // Begin checking for timeouts when progress starts, instead of loading,
          // to avoid timing out requests on browser concurrency queue


          timer.progress();

          if (ev.lengthComputable) {
            _this3.uppy.emit('upload-progress', file, {
              uploader: _this3,
              bytesUploaded: ev.loaded,
              bytesTotal: ev.total
            });
          }
        });
        xhr.addEventListener('load', function (ev) {
          _this3.uppy.log("[XHRUpload] " + id + " finished");

          timer.done();
          queuedRequest.done();

          if (_this3.uploaderEvents[file.id]) {
            _this3.uploaderEvents[file.id].remove();

            _this3.uploaderEvents[file.id] = null;
          }

          if (opts.validateStatus(ev.target.status, xhr.responseText, xhr)) {
            var _body = opts.getResponseData(xhr.responseText, xhr);

            var uploadURL = _body[opts.responseUrlFieldName];
            var uploadResp = {
              status: ev.target.status,
              body: _body,
              uploadURL: uploadURL
            };

            _this3.uppy.emit('upload-success', file, uploadResp);

            if (uploadURL) {
              _this3.uppy.log("Download " + file.name + " from " + uploadURL);
            }

            return resolve(file);
          }

          var body = opts.getResponseData(xhr.responseText, xhr);
          var error = buildResponseError(xhr, opts.getResponseError(xhr.responseText, xhr));
          var response = {
            status: ev.target.status,
            body: body
          };

          _this3.uppy.emit('upload-error', file, error, response);

          return reject(error);
        });
        xhr.addEventListener('error', function (ev) {
          _this3.uppy.log("[XHRUpload] " + id + " errored");

          timer.done();
          queuedRequest.done();

          if (_this3.uploaderEvents[file.id]) {
            _this3.uploaderEvents[file.id].remove();

            _this3.uploaderEvents[file.id] = null;
          }

          var error = buildResponseError(xhr, opts.getResponseError(xhr.responseText, xhr));

          _this3.uppy.emit('upload-error', file, error);

          return reject(error);
        });
        xhr.open(opts.method.toUpperCase(), opts.endpoint, true); // IE10 does not allow setting `withCredentials` and `responseType`
        // before `open()` is called.

        xhr.withCredentials = opts.withCredentials;

        if (opts.responseType !== '') {
          xhr.responseType = opts.responseType;
        }

        var queuedRequest = _this3.requests.run(function () {
          // When using an authentication system like JWT, the bearer token goes as a header. This
          // header needs to be fresh each time the token is refreshed so computing and setting the
          // headers just before the upload starts enables this kind of authentication to work properly.
          // Otherwise, half-way through the list of uploads the token could be stale and the upload would fail.
          var currentOpts = _this3.getOptions(file);

          Object.keys(currentOpts.headers).forEach(function (header) {
            xhr.setRequestHeader(header, currentOpts.headers[header]);
          });
          xhr.send(data);
          return function () {
            timer.done();
            xhr.abort();
          };
        });

        _this3.onFileRemove(file.id, function () {
          queuedRequest.abort();
          reject(new Error('File removed'));
        });

        _this3.onCancelAll(file.id, function () {
          queuedRequest.abort();
          reject(new Error('Upload cancelled'));
        });
      });
    };

    _proto.uploadRemote = function uploadRemote(file, current, total) {
      var _this4 = this;

      var opts = this.getOptions(file);
      return new Promise(function (resolve, reject) {
        _this4.uppy.emit('upload-started', file);

        var fields = {};
        var metaFields = Array.isArray(opts.metaFields) ? opts.metaFields // Send along all fields by default.
        : Object.keys(file.meta);
        metaFields.forEach(function (name) {
          fields[name] = file.meta[name];
        });
        var Client = file.remote.providerOptions.provider ? Provider : RequestClient;
        var client = new Client(_this4.uppy, file.remote.providerOptions);
        client.post(file.remote.url, _extends({}, file.remote.body, {
          endpoint: opts.endpoint,
          size: file.data.size,
          fieldname: opts.fieldName,
          metadata: fields,
          httpMethod: opts.method,
          useFormData: opts.formData,
          headers: opts.headers
        })).then(function (res) {
          var token = res.token;
          var host = getSocketHost(file.remote.companionUrl);
          var socket = new Socket({
            target: host + "/api/" + token,
            autoOpen: false
          });
          _this4.uploaderEvents[file.id] = new EventTracker(_this4.uppy);

          _this4.onFileRemove(file.id, function () {
            socket.send('pause', {});
            queuedRequest.abort();
            resolve("upload " + file.id + " was removed");
          });

          _this4.onCancelAll(file.id, function () {
            socket.send('pause', {});
            queuedRequest.abort();
            resolve("upload " + file.id + " was canceled");
          });

          _this4.onRetry(file.id, function () {
            socket.send('pause', {});
            socket.send('resume', {});
          });

          _this4.onRetryAll(file.id, function () {
            socket.send('pause', {});
            socket.send('resume', {});
          });

          socket.on('progress', function (progressData) {
            return emitSocketProgress(_this4, progressData, file);
          });
          socket.on('success', function (data) {
            var body = opts.getResponseData(data.response.responseText, data.response);
            var uploadURL = body[opts.responseUrlFieldName];
            var uploadResp = {
              status: data.response.status,
              body: body,
              uploadURL: uploadURL
            };

            _this4.uppy.emit('upload-success', file, uploadResp);

            queuedRequest.done();

            if (_this4.uploaderEvents[file.id]) {
              _this4.uploaderEvents[file.id].remove();

              _this4.uploaderEvents[file.id] = null;
            }

            return resolve();
          });
          socket.on('error', function (errData) {
            var resp = errData.response;
            var error = resp ? opts.getResponseError(resp.responseText, resp) : _extends(new Error(errData.error.message), {
              cause: errData.error
            });

            _this4.uppy.emit('upload-error', file, error);

            queuedRequest.done();

            if (_this4.uploaderEvents[file.id]) {
              _this4.uploaderEvents[file.id].remove();

              _this4.uploaderEvents[file.id] = null;
            }

            reject(error);
          });

          var queuedRequest = _this4.requests.run(function () {
            socket.open();

            if (file.isPaused) {
              socket.send('pause', {});
            }

            return function () {
              return socket.close();
            };
          });
        }).catch(function (err) {
          _this4.uppy.emit('upload-error', file, err);

          reject(err);
        });
      });
    };

    _proto.uploadBundle = function uploadBundle(files) {
      var _this5 = this;

      return new Promise(function (resolve, reject) {
        var endpoint = _this5.opts.endpoint;
        var method = _this5.opts.method;

        var optsFromState = _this5.uppy.getState().xhrUpload;

        var formData = _this5.createBundledUpload(files, _extends({}, _this5.opts, optsFromState || {}));

        var xhr = new XMLHttpRequest();
        var timer = new ProgressTimeout_1(_this5.opts.timeout, function () {
          xhr.abort();
          var error = new Error(_this5.i18n('timedOut', {
            seconds: Math.ceil(_this5.opts.timeout / 1000)
          }));
          emitError(error);
          reject(error);
        });

        var emitError = function emitError(error) {
          files.forEach(function (file) {
            _this5.uppy.emit('upload-error', file, error);
          });
        };

        xhr.upload.addEventListener('loadstart', function (ev) {
          _this5.uppy.log('[XHRUpload] started uploading bundle');

          timer.progress();
        });
        xhr.upload.addEventListener('progress', function (ev) {
          timer.progress();
          if (!ev.lengthComputable) return;
          files.forEach(function (file) {
            _this5.uppy.emit('upload-progress', file, {
              uploader: _this5,
              bytesUploaded: ev.loaded / ev.total * file.size,
              bytesTotal: file.size
            });
          });
        });
        xhr.addEventListener('load', function (ev) {
          timer.done();

          if (_this5.opts.validateStatus(ev.target.status, xhr.responseText, xhr)) {
            var body = _this5.opts.getResponseData(xhr.responseText, xhr);

            var uploadResp = {
              status: ev.target.status,
              body: body
            };
            files.forEach(function (file) {
              _this5.uppy.emit('upload-success', file, uploadResp);
            });
            return resolve();
          }

          var error = _this5.opts.getResponseError(xhr.responseText, xhr) || new Error('Upload error');
          error.request = xhr;
          emitError(error);
          return reject(error);
        });
        xhr.addEventListener('error', function (ev) {
          timer.done();
          var error = _this5.opts.getResponseError(xhr.responseText, xhr) || new Error('Upload error');
          emitError(error);
          return reject(error);
        });

        _this5.uppy.on('cancel-all', function () {
          timer.done();
          xhr.abort();
        });

        xhr.open(method.toUpperCase(), endpoint, true); // IE10 does not allow setting `withCredentials` and `responseType`
        // before `open()` is called.

        xhr.withCredentials = _this5.opts.withCredentials;

        if (_this5.opts.responseType !== '') {
          xhr.responseType = _this5.opts.responseType;
        }

        Object.keys(_this5.opts.headers).forEach(function (header) {
          xhr.setRequestHeader(header, _this5.opts.headers[header]);
        });
        xhr.send(formData);
        files.forEach(function (file) {
          _this5.uppy.emit('upload-started', file);
        });
      });
    };

    _proto.uploadFiles = function uploadFiles(files) {
      var _this6 = this;

      var promises = files.map(function (file, i) {
        var current = parseInt(i, 10) + 1;
        var total = files.length;

        if (file.error) {
          return Promise.reject(new Error(file.error));
        }

        if (file.isRemote) {
          return _this6.uploadRemote(file, current, total);
        }

        return _this6.upload(file, current, total);
      });
      return settle(promises);
    };

    _proto.onFileRemove = function onFileRemove(fileID, cb) {
      this.uploaderEvents[fileID].on('file-removed', function (file) {
        if (fileID === file.id) cb(file.id);
      });
    };

    _proto.onRetry = function onRetry(fileID, cb) {
      this.uploaderEvents[fileID].on('upload-retry', function (targetFileID) {
        if (fileID === targetFileID) {
          cb();
        }
      });
    };

    _proto.onRetryAll = function onRetryAll(fileID, cb) {
      var _this7 = this;

      this.uploaderEvents[fileID].on('retry-all', function (filesToRetry) {
        if (!_this7.uppy.getFile(fileID)) return;
        cb();
      });
    };

    _proto.onCancelAll = function onCancelAll(fileID, cb) {
      var _this8 = this;

      this.uploaderEvents[fileID].on('cancel-all', function () {
        if (!_this8.uppy.getFile(fileID)) return;
        cb();
      });
    };

    _proto.handleUpload = function handleUpload(fileIDs) {
      var _this9 = this;

      if (fileIDs.length === 0) {
        this.uppy.log('[XHRUpload] No files to upload!');
        return Promise.resolve();
      } // no limit configured by the user, and no RateLimitedQueue passed in by a "parent" plugin (basically just AwsS3) using the top secret `__queue` option


      if (this.opts.limit === 0 && !this.opts.__queue) {
        this.uppy.log('[XHRUpload] When uploading multiple files at once, consider setting the `limit` option (to `10` for example), to limit the number of concurrent uploads, which helps prevent memory and network issues: https://uppy.io/docs/xhr-upload/#limit-0', 'warning');
      }

      this.uppy.log('[XHRUpload] Uploading...');
      var files = fileIDs.map(function (fileID) {
        return _this9.uppy.getFile(fileID);
      });

      if (this.opts.bundle) {
        // if bundle: true, we don’t support remote uploads
        var isSomeFileRemote = files.some(function (file) {
          return file.isRemote;
        });

        if (isSomeFileRemote) {
          throw new Error('Can’t upload remote files when the `bundle: true` option is set');
        }

        if (typeof this.opts.headers === 'function') {
          throw new TypeError('`headers` may not be a function when the `bundle: true` option is set');
        }

        return this.uploadBundle(files);
      }

      return this.uploadFiles(files).then(function () {
        return null;
      });
    };

    _proto.install = function install() {
      if (this.opts.bundle) {
        var _this$uppy$getState2 = this.uppy.getState(),
            capabilities = _this$uppy$getState2.capabilities;

        this.uppy.setState({
          capabilities: _extends({}, capabilities, {
            individualCancellation: false
          })
        });
      }

      this.uppy.addUploader(this.handleUpload);
    };

    _proto.uninstall = function uninstall() {
      if (this.opts.bundle) {
        var _this$uppy$getState3 = this.uppy.getState(),
            capabilities = _this$uppy$getState3.capabilities;

        this.uppy.setState({
          capabilities: _extends({}, capabilities, {
            individualCancellation: true
          })
        });
      }

      this.uppy.removeUploader(this.handleUpload);
    };

    return XHRUpload;
  }(Plugin), _class.VERSION = "1.7.5", _temp);

  var ee$6="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:{};function te$6(e){var t={exports:{}};return e(t,t.exports),t.exports}var ne$6,re$6,oe$6=function(e){return e&&e.Math==Math&&e},ie$6=oe$6("object"==typeof globalThis&&globalThis)||oe$6("object"==typeof window&&window)||oe$6("object"==typeof self&&self)||oe$6("object"==typeof ee$6&&ee$6)||function(){return this}()||Function("return this")(),ae$6={CSSRuleList:0,CSSStyleDeclaration:0,CSSValueList:0,ClientRectList:0,DOMRectList:0,DOMStringList:0,DOMTokenList:1,DataTransferItemList:0,FileList:0,HTMLAllCollection:0,HTMLCollection:0,HTMLFormElement:0,HTMLSelectElement:0,MediaList:0,MimeTypeArray:0,NamedNodeMap:0,NodeList:1,PaintRequestList:0,Plugin:0,PluginArray:0,SVGLengthList:0,SVGNumberList:0,SVGPathSegList:0,SVGPointList:0,SVGStringList:0,SVGTransformList:0,SourceBufferList:0,StyleSheetList:0,TextTrackCueList:0,TextTrackList:0,TouchList:0},se$6=function(e){if("function"!=typeof e)throw TypeError(String(e)+" is not a function");return e},le$6=function(e,t,n){if(se$6(e),void 0===t)return e;switch(n){case 0:return function(){return e.call(t)};case 1:return function(n){return e.call(t,n)};case 2:return function(n,r){return e.call(t,n,r)};case 3:return function(n,r,o){return e.call(t,n,r,o)}}return function(){return e.apply(t,arguments)}},ue$6=function(e){try{return !!e()}catch(e){return !0}},ce$6={}.toString,fe$6=function(e){return ce$6.call(e).slice(8,-1)},de$6="".split,he$6=ue$6((function(){return !Object("z").propertyIsEnumerable(0)}))?function(e){return "String"==fe$6(e)?de$6.call(e,""):Object(e)}:Object,pe$6=function(e){if(null==e)throw TypeError("Can't call method on "+e);return e},ge$6=function(e){return Object(pe$6(e))},ve$6=Math.ceil,ye$6=Math.floor,me$6=function(e){return isNaN(e=+e)?0:(e>0?ye$6:ve$6)(e)},we$6=Math.min,be$6=function(e){return e>0?we$6(me$6(e),9007199254740991):0},xe$6=function(e){return "object"==typeof e?null!==e:"function"==typeof e},Se$6=Array.isArray||function(e){return "Array"==fe$6(e)},ke$6=!ue$6((function(){return 7!=Object.defineProperty({},1,{get:function(){return 7}})[1]})),Ee$6=ie$6.document,Oe$6=xe$6(Ee$6)&&xe$6(Ee$6.createElement),Ce$5=function(e){return Oe$6?Ee$6.createElement(e):{}},Ne$6=!ke$6&&!ue$6((function(){return 7!=Object.defineProperty(Ce$5("div"),"a",{get:function(){return 7}}).a})),Me$6=function(e){if(!xe$6(e))throw TypeError(String(e)+" is not an object");return e},Le$6=function(e,t){if(!xe$6(e))return e;var n,r;if(t&&"function"==typeof(n=e.toString)&&!xe$6(r=n.call(e)))return r;if("function"==typeof(n=e.valueOf)&&!xe$6(r=n.call(e)))return r;if(!t&&"function"==typeof(n=e.toString)&&!xe$6(r=n.call(e)))return r;throw TypeError("Can't convert object to primitive value")},Pe$6=Object.defineProperty,Te$6={f:ke$6?Pe$6:function(e,t,n){if(Me$6(e),t=Le$6(t,!0),Me$6(n),Ne$6)try{return Pe$6(e,t,n)}catch(e){}if("get"in n||"set"in n)throw TypeError("Accessors not supported");return "value"in n&&(e[t]=n.value),e}},De$5=function(e,t){return {enumerable:!(1&e),configurable:!(2&e),writable:!(4&e),value:t}},je$6=ke$6?function(e,t,n){return Te$6.f(e,t,De$5(1,n))}:function(e,t,n){return e[t]=n,e},Re$6=function(e,t){try{je$6(ie$6,e,t);}catch(n){ie$6[e]=t;}return t},Ae$5=ie$6["__core-js_shared__"]||Re$6("__core-js_shared__",{}),Fe$5=te$6((function(e){(e.exports=function(e,t){return Ae$5[e]||(Ae$5[e]=void 0!==t?t:{})})("versions",[]).push({version:"3.13.1",mode:"global",copyright:"© 2021 Denis Pushkarev (zloirock.ru)"});})),Ie$6={}.hasOwnProperty,Be$5=Object.hasOwn||function(e,t){return Ie$6.call(ge$6(e),t)},_e$6=0,$e$5=Math.random(),We$5=function(e){return "Symbol("+String(void 0===e?"":e)+")_"+(++_e$6+$e$5).toString(36)},ze$6=ie$6,Ve$5=function(e){return "function"==typeof e?e:void 0},Ue$5=function(e,t){return arguments.length<2?Ve$5(ze$6[e])||Ve$5(ie$6[e]):ze$6[e]&&ze$6[e][t]||ie$6[e]&&ie$6[e][t]},Ke$5=Ue$5("navigator","userAgent")||"",He$6=ie$6.process,qe$5=He$6&&He$6.versions,Je$5=qe$5&&qe$5.v8;Je$5?re$6=(ne$6=Je$5.split("."))[0]<4?1:ne$6[0]+ne$6[1]:Ke$5&&(!(ne$6=Ke$5.match(/Edge\/(\d+)/))||ne$6[1]>=74)&&(ne$6=Ke$5.match(/Chrome\/(\d+)/))&&(re$6=ne$6[1]);var Ge$5=re$6&&+re$6,Ye$5=!!Object.getOwnPropertySymbols&&!ue$6((function(){var e=Symbol();return !String(e)||!(Object(e)instanceof Symbol)||!Symbol.sham&&Ge$5&&Ge$5<41})),Xe$5=Ye$5&&!Symbol.sham&&"symbol"==typeof Symbol.iterator,Qe$5=Fe$5("wks"),Ze$5=ie$6.Symbol,et$6=Xe$5?Ze$5:Ze$5&&Ze$5.withoutSetter||We$5,tt$6=function(e){return Be$5(Qe$5,e)&&(Ye$5||"string"==typeof Qe$5[e])||(Ye$5&&Be$5(Ze$5,e)?Qe$5[e]=Ze$5[e]:Qe$5[e]=et$6("Symbol."+e)),Qe$5[e]},nt$6=tt$6("species"),rt$6=function(e,t){var n;return Se$6(e)&&("function"!=typeof(n=e.constructor)||n!==Array&&!Se$6(n.prototype)?xe$6(n)&&null===(n=n[nt$6])&&(n=void 0):n=void 0),new(void 0===n?Array:n)(0===t?0:t)},ot$6=[].push,it$6=function(e){var t=1==e,n=2==e,r=3==e,o=4==e,i=6==e,a=7==e,s=5==e||i;return function(l,u,c,f){for(var d,h,p=ge$6(l),g=he$6(p),v=le$6(u,c,3),y=be$6(g.length),m=0,w=f||rt$6,b=t?w(l,y):n||a?w(l,0):void 0;y>m;m++)if((s||m in g)&&(h=v(d=g[m],m,p),e))if(t)b[m]=h;else if(h)switch(e){case 3:return !0;case 5:return d;case 6:return m;case 2:ot$6.call(b,d);}else switch(e){case 4:return !1;case 7:ot$6.call(b,d);}return i?-1:r||o?o:b}},at$6={forEach:it$6(0),map:it$6(1),filter:it$6(2),some:it$6(3),every:it$6(4),find:it$6(5),findIndex:it$6(6),filterOut:it$6(7)},st$6=function(e,t){var n=[][e];return !!n&&ue$6((function(){n.call(null,t||function(){throw 1},1);}))},lt$6=at$6.forEach,ut$6=st$6("forEach")?[].forEach:function(e){return lt$6(this,e,arguments.length>1?arguments[1]:void 0)};for(var ct$6 in ae$6){var ft$6=ie$6[ct$6],dt$6=ft$6&&ft$6.prototype;if(dt$6&&dt$6.forEach!==ut$6)try{je$6(dt$6,"forEach",ut$6);}catch(e){dt$6.forEach=ut$6;}}
  /*!
   * isobject <https://github.com/jonschlinkert/isobject>
   *
   * Copyright (c) 2014-2017, Jon Schlinkert.
   * Released under the MIT License.
   */
  /*!
   * is-plain-object <https://github.com/jonschlinkert/is-plain-object>
   *
   * Copyright (c) 2014-2017, Jon Schlinkert.
   * Released under the MIT License.
   */
  function ht$6(e){return !0===function(e){return null!=e&&"object"==typeof e&&!1===Array.isArray(e)}(e)&&"[object Object]"===Object.prototype.toString.call(e)}var pt$6={isHistory(e){return !1!==ht$6(n=e)&&"function"==typeof(r=n.constructor)&&!1!==ht$6(o=r.prototype)&&!1!==o.hasOwnProperty("isPrototypeOf")&&Array.isArray(e.redos)&&Array.isArray(e.undos)&&(0===e.redos.length||Operation.isOperationList(e.redos[0]))&&(0===e.undos.length||Operation.isOperationList(e.undos[0]));var n,r,o;}},gt$6=new WeakMap,vt$6=new WeakMap,yt$6={isHistoryEditor:t=>pt$6.isHistory(t.history)&&Editor.isEditor(t),isMerging:e=>vt$6.get(e),isSaving:e=>gt$6.get(e),redo(e){e.redo();},undo(e){e.undo();},withoutMerging(e,t){var n=yt$6.isMerging(e);vt$6.set(e,!1),t(),vt$6.set(e,n);},withoutSaving(e,t){var n=yt$6.isSaving(e);gt$6.set(e,!1),t(),gt$6.set(e,n);}},mt$6=(e,t)=>"set_selection"===e.type||(!(!t||"insert_text"!==e.type||"insert_text"!==t.type||e.offset!==t.offset+t.text.length||!Path.equals(e.path,t.path))||!(!t||"remove_text"!==e.type||"remove_text"!==t.type||e.offset+e.text.length!==t.offset||!Path.equals(e.path,t.path))),wt$6=(e,t)=>"set_selection"!==e.type||null!=e.properties&&null!=e.newProperties,bt$6=(e,t)=>!(!t||"set_selection"!==e.type||"set_selection"!==t.type),xt$6=e=>"set_selection"!==e.type,St$6={};St$6[tt$6("toStringTag")]="z";var kt$6="[object z]"===String(St$6),Et$6=Function.toString;"function"!=typeof Ae$5.inspectSource&&(Ae$5.inspectSource=function(e){return Et$6.call(e)});var Ot$6,Ct$6,Nt$6,Mt$6=Ae$5.inspectSource,Lt$6=ie$6.WeakMap,Pt$6="function"==typeof Lt$6&&/native code/.test(Mt$6(Lt$6)),Tt$6=Fe$5("keys"),Dt$6=function(e){return Tt$6[e]||(Tt$6[e]=We$5(e))},jt$5={},Rt$6=ie$6.WeakMap;if(Pt$6||Ae$5.state){var At$6=Ae$5.state||(Ae$5.state=new Rt$6),Ft$6=At$6.get,It$6=At$6.has,Bt$5=At$6.set;Ot$6=function(e,t){if(It$6.call(At$6,e))throw new TypeError("Object already initialized");return t.facade=e,Bt$5.call(At$6,e,t),t},Ct$6=function(e){return Ft$6.call(At$6,e)||{}},Nt$6=function(e){return It$6.call(At$6,e)};}else {var _t$6=Dt$6("state");jt$5[_t$6]=!0,Ot$6=function(e,t){if(Be$5(e,_t$6))throw new TypeError("Object already initialized");return t.facade=e,je$6(e,_t$6,t),t},Ct$6=function(e){return Be$5(e,_t$6)?e[_t$6]:{}},Nt$6=function(e){return Be$5(e,_t$6)};}var $t$5={set:Ot$6,get:Ct$6,has:Nt$6,enforce:function(e){return Nt$6(e)?Ct$6(e):Ot$6(e,{})},getterFor:function(e){return function(t){var n;if(!xe$6(t)||(n=Ct$6(t)).type!==e)throw TypeError("Incompatible receiver, "+e+" required");return n}}},Wt$5=te$6((function(e){var t=$t$5.get,n=$t$5.enforce,r=String(String).split("String");(e.exports=function(e,t,o,i){var a,s=!!i&&!!i.unsafe,l=!!i&&!!i.enumerable,u=!!i&&!!i.noTargetGet;"function"==typeof o&&("string"!=typeof t||Be$5(o,"name")||je$6(o,"name",t),(a=n(o)).source||(a.source=r.join("string"==typeof t?t:""))),e!==ie$6?(s?!u&&e[t]&&(l=!0):delete e[t],l?e[t]=o:je$6(e,t,o)):l?e[t]=o:Re$6(t,o);})(Function.prototype,"toString",(function(){return "function"==typeof this&&t(this).source||Mt$6(this)}));})),zt$5=tt$6("toStringTag"),Vt$5="Arguments"==fe$6(function(){return arguments}()),Ut$5=kt$6?fe$6:function(e){var t,n,r;return void 0===e?"Undefined":null===e?"Null":"string"==typeof(n=function(e,t){try{return e[t]}catch(e){}}(t=Object(e),zt$5))?n:Vt$5?fe$6(t):"Object"==(r=fe$6(t))&&"function"==typeof t.callee?"Arguments":r},Kt$5=kt$6?{}.toString:function(){return "[object "+Ut$5(this)+"]"};kt$6||Wt$5(Object.prototype,"toString",Kt$5,{unsafe:!0});var Ht$5=function(){var e=Me$6(this),t="";return e.global&&(t+="g"),e.ignoreCase&&(t+="i"),e.multiline&&(t+="m"),e.dotAll&&(t+="s"),e.unicode&&(t+="u"),e.sticky&&(t+="y"),t},qt$5=RegExp.prototype,Jt$5=qt$5.toString,Gt$5=ue$6((function(){return "/a/b"!=Jt$5.call({source:"a",flags:"b"})})),Yt$5="toString"!=Jt$5.name;(Gt$5||Yt$5)&&Wt$5(RegExp.prototype,"toString",(function(){var e=Me$6(this),t=String(e.source),n=e.flags;return "/"+t+"/"+String(void 0===n&&e instanceof RegExp&&!("flags"in qt$5)?Ht$5.call(e):n)}),{unsafe:!0});var Xt$5,Qt$5={}.propertyIsEnumerable,Zt$5=Object.getOwnPropertyDescriptor,en$3={f:Zt$5&&!Qt$5.call({1:2},1)?function(e){var t=Zt$5(this,e);return !!t&&t.enumerable}:Qt$5},tn$3=function(e){return he$6(pe$6(e))},nn$3=Object.getOwnPropertyDescriptor,rn$3={f:ke$6?nn$3:function(e,t){if(e=tn$3(e),t=Le$6(t,!0),Ne$6)try{return nn$3(e,t)}catch(e){}if(Be$5(e,t))return De$5(!en$3.f.call(e,t),e[t])}},on$3=Math.max,an$3=Math.min,sn$3=function(e,t){var n=me$6(e);return n<0?on$3(n+t,0):an$3(n,t)},ln$3=function(e){return function(t,n,r){var o,i=tn$3(t),a=be$6(i.length),s=sn$3(r,a);if(e&&n!=n){for(;a>s;)if((o=i[s++])!=o)return !0}else for(;a>s;s++)if((e||s in i)&&i[s]===n)return e||s||0;return !e&&-1}},un$3={includes:ln$3(!0),indexOf:ln$3(!1)},cn$3=un$3.indexOf,fn$3=function(e,t){var n,r=tn$3(e),o=0,i=[];for(n in r)!Be$5(jt$5,n)&&Be$5(r,n)&&i.push(n);for(;t.length>o;)Be$5(r,n=t[o++])&&(~cn$3(i,n)||i.push(n));return i},dn$3=["constructor","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","toLocaleString","toString","valueOf"],hn$3=dn$3.concat("length","prototype"),pn$3={f:Object.getOwnPropertyNames||function(e){return fn$3(e,hn$3)}},gn$3={f:Object.getOwnPropertySymbols},vn$3=Ue$5("Reflect","ownKeys")||function(e){var t=pn$3.f(Me$6(e)),n=gn$3.f;return n?t.concat(n(e)):t},yn$3=function(e,t){for(var n=vn$3(t),r=Te$6.f,o=rn$3.f,i=0;i<n.length;i++){var a=n[i];Be$5(e,a)||r(e,a,o(t,a));}},mn$3=/#|\.prototype\./,wn$3=function(e,t){var n=xn$3[bn$3(e)];return n==kn$3||n!=Sn$3&&("function"==typeof t?ue$6(t):!!t)},bn$3=wn$3.normalize=function(e){return String(e).replace(mn$3,".").toLowerCase()},xn$3=wn$3.data={},Sn$3=wn$3.NATIVE="N",kn$3=wn$3.POLYFILL="P",En$3=wn$3,On$3=rn$3.f,Cn$3=function(e,t){var n,r,o,i,a,s=e.target,l=e.global,u=e.stat;if(n=l?ie$6:u?ie$6[s]||Re$6(s,{}):(ie$6[s]||{}).prototype)for(r in t){if(i=t[r],o=e.noTargetGet?(a=On$3(n,r))&&a.value:n[r],!En$3(l?r:s+(u?".":"#")+r,e.forced)&&void 0!==o){if(typeof i==typeof o)continue;yn$3(i,o);}(e.sham||o&&o.sham)&&je$6(i,"sham",!0),Wt$5(n,r,i,e);}},Nn$3=Object.keys||function(e){return fn$3(e,dn$3)},Mn$3=ke$6?Object.defineProperties:function(e,t){Me$6(e);for(var n,r=Nn$3(t),o=r.length,i=0;o>i;)Te$6.f(e,n=r[i++],t[n]);return e},Ln$3=Ue$5("document","documentElement"),Pn$3=Dt$6("IE_PROTO"),Tn$3=function(){},Dn$3=function(e){return "<script>"+e+"<\/script>"},jn$3=function(){try{Xt$5=document.domain&&new ActiveXObject("htmlfile");}catch(e){}var e,t;jn$3=Xt$5?function(e){e.write(Dn$3("")),e.close();var t=e.parentWindow.Object;return e=null,t}(Xt$5):((t=Ce$5("iframe")).style.display="none",Ln$3.appendChild(t),t.src=String("javascript:"),(e=t.contentWindow.document).open(),e.write(Dn$3("document.F=Object")),e.close(),e.F);for(var n=dn$3.length;n--;)delete jn$3.prototype[dn$3[n]];return jn$3()};jt$5[Pn$3]=!0;var Rn$3=Object.create||function(e,t){var n;return null!==e?(Tn$3.prototype=Me$6(e),n=new Tn$3,Tn$3.prototype=null,n[Pn$3]=e):n=jn$3(),void 0===t?n:Mn$3(n,t)},An$3=tt$6("unscopables"),Fn$3=Array.prototype;null==Fn$3[An$3]&&Te$6.f(Fn$3,An$3,{configurable:!0,value:Rn$3(null)});var In$3=function(e){Fn$3[An$3][e]=!0;},Bn$3=un$3.includes;Cn$3({target:"Array",proto:!0},{includes:function(e){return Bn$3(this,e,arguments.length>1?arguments[1]:void 0)}}),In$3("includes");var _n$3=tt$6("match"),$n$3=function(e){var t;return xe$6(e)&&(void 0!==(t=e[_n$3])?!!t:"RegExp"==fe$6(e))},Wn$3=function(e){if($n$3(e))throw TypeError("The method doesn't accept regular expressions");return e},zn$3=tt$6("match"),Vn$3=function(e){var t=/./;try{"/./"[e](t);}catch(n){try{return t[zn$3]=!1,"/./"[e](t)}catch(e){}}return !1};Cn$3({target:"String",proto:!0,forced:!Vn$3("includes")},{includes:function(e){return !!~String(pe$6(this)).indexOf(Wn$3(e),arguments.length>1?arguments[1]:void 0)}});var Un$3=/"/g;Cn$3({target:"String",proto:!0,forced:function(e){return ue$6((function(){var t=""[e]('"');return t!==t.toLowerCase()||t.split('"').length>3}))}("anchor")},{anchor:function(e){return t="a",n="name",r=e,o=String(pe$6(this)),i="<"+t,""!==n&&(i+=" "+n+'="'+String(r).replace(Un$3,"&quot;")+'"'),i+">"+o+"</"+t+">";var t,n,r,o,i;}});var Kn$3=function(e){var t=e.return;if(void 0!==t)return Me$6(t.call(e)).value},Hn$3=function(e,t,n,r){try{return r?t(Me$6(n)[0],n[1]):t(n)}catch(t){throw Kn$3(e),t}},qn$3={},Jn$2=tt$6("iterator"),Gn$3=Array.prototype,Yn$2=function(e){return void 0!==e&&(qn$3.Array===e||Gn$3[Jn$2]===e)},Xn$2=function(e,t,n){var r=Le$6(t);r in e?Te$6.f(e,r,De$5(0,n)):e[r]=n;},Qn$2=tt$6("iterator"),Zn$2=function(e){if(null!=e)return e[Qn$2]||e["@@iterator"]||qn$3[Ut$5(e)]},er$3=tt$6("iterator"),tr$3=!1;try{var nr$3=0,rr$3={next:function(){return {done:!!nr$3++}},return:function(){tr$3=!0;}};rr$3[er$3]=function(){return this},Array.from(rr$3,(function(){throw 2}));}catch(e){}var or$3=function(e,t){if(!t&&!tr$3)return !1;var n=!1;try{var r={};r[er$3]=function(){return {next:function(){return {done:n=!0}}}},e(r);}catch(e){}return n},ir$3=!or$3((function(e){Array.from(e);}));Cn$3({target:"Array",stat:!0,forced:ir$3},{from:function(e){var t,n,r,o,i,a,s=ge$6(e),l="function"==typeof this?this:Array,u=arguments.length,c=u>1?arguments[1]:void 0,f=void 0!==c,d=Zn$2(s),h=0;if(f&&(c=le$6(c,u>2?arguments[2]:void 0,2)),null==d||l==Array&&Yn$2(d))for(n=new l(t=be$6(s.length));t>h;h++)a=f?c(s[h],h):s[h],Xn$2(n,h,a);else for(i=(o=d.call(s)).next,n=new l;!(r=i.call(o)).done;h++)a=f?Hn$3(o,c,[r.value,h],!0):r.value,Xn$2(n,h,a);return n.length=h,n}});var ar$3,sr$3,lr$3,ur$3=function(e){return function(t,n){var r,o,i=String(pe$6(t)),a=me$6(n),s=i.length;return a<0||a>=s?e?"":void 0:(r=i.charCodeAt(a))<55296||r>56319||a+1===s||(o=i.charCodeAt(a+1))<56320||o>57343?e?i.charAt(a):r:e?i.slice(a,a+2):o-56320+(r-55296<<10)+65536}},cr$3={codeAt:ur$3(!1),charAt:ur$3(!0)},fr$3=!ue$6((function(){function e(){}return e.prototype.constructor=null,Object.getPrototypeOf(new e)!==e.prototype})),dr$3=Dt$6("IE_PROTO"),hr$3=Object.prototype,pr$3=fr$3?Object.getPrototypeOf:function(e){return e=ge$6(e),Be$5(e,dr$3)?e[dr$3]:"function"==typeof e.constructor&&e instanceof e.constructor?e.constructor.prototype:e instanceof Object?hr$3:null},gr$3=tt$6("iterator"),vr$3=!1;[].keys&&("next"in(lr$3=[].keys())?(sr$3=pr$3(pr$3(lr$3)))!==Object.prototype&&(ar$3=sr$3):vr$3=!0),(null==ar$3||ue$6((function(){var e={};return ar$3[gr$3].call(e)!==e})))&&(ar$3={}),Be$5(ar$3,gr$3)||je$6(ar$3,gr$3,(function(){return this}));var yr$3={IteratorPrototype:ar$3,BUGGY_SAFARI_ITERATORS:vr$3},mr$3=Te$6.f,wr$2=tt$6("toStringTag"),br$2=function(e,t,n){e&&!Be$5(e=n?e:e.prototype,wr$2)&&mr$3(e,wr$2,{configurable:!0,value:t});},xr$2=yr$3.IteratorPrototype,Sr$2=function(){return this},kr$2=Object.setPrototypeOf||("__proto__"in{}?function(){var e,t=!1,n={};try{(e=Object.getOwnPropertyDescriptor(Object.prototype,"__proto__").set).call(n,[]),t=n instanceof Array;}catch(e){}return function(n,r){return Me$6(n),function(e){if(!xe$6(e)&&null!==e)throw TypeError("Can't set "+String(e)+" as a prototype")}(r),t?e.call(n,r):n.__proto__=r,n}}():void 0),Er$2=yr$3.IteratorPrototype,Or$2=yr$3.BUGGY_SAFARI_ITERATORS,Cr$2=tt$6("iterator"),Nr$2=function(){return this},Mr$2=function(e,t,n,r,o,i,a){!function(e,t,n){var r=t+" Iterator";e.prototype=Rn$3(xr$2,{next:De$5(1,n)}),br$2(e,r,!1),qn$3[r]=Sr$2;}(n,t,r);var s,l,u,c=function(e){if(e===o&&g)return g;if(!Or$2&&e in h)return h[e];switch(e){case"keys":case"values":case"entries":return function(){return new n(this,e)}}return function(){return new n(this)}},f=t+" Iterator",d=!1,h=e.prototype,p=h[Cr$2]||h["@@iterator"]||o&&h[o],g=!Or$2&&p||c(o),v="Array"==t&&h.entries||p;if(v&&(s=pr$3(v.call(new e)),Er$2!==Object.prototype&&s.next&&(pr$3(s)!==Er$2&&(kr$2?kr$2(s,Er$2):"function"!=typeof s[Cr$2]&&je$6(s,Cr$2,Nr$2)),br$2(s,f,!0))),"values"==o&&p&&"values"!==p.name&&(d=!0,g=function(){return p.call(this)}),h[Cr$2]!==g&&je$6(h,Cr$2,g),qn$3[t]=g,o)if(l={values:c("values"),keys:i?g:c("keys"),entries:c("entries")},a)for(u in l)(Or$2||d||!(u in h))&&Wt$5(h,u,l[u]);else Cn$3({target:t,proto:!0,forced:Or$2||d},l);return l},Lr$2=cr$3.charAt,Pr$2=$t$5.set,Tr$2=$t$5.getterFor("String Iterator");Mr$2(String,"String",(function(e){Pr$2(this,{type:"String Iterator",string:String(e),index:0});}),(function(){var e,t=Tr$2(this),n=t.string,r=t.index;return r>=n.length?{value:void 0,done:!0}:(e=Lr$2(n,r),t.index+=e.length,{value:e,done:!1})}));var Dr$2=[].join,jr$2=he$6!=Object,Rr$2=st$6("join",",");Cn$3({target:"Array",proto:!0,forced:jr$2||!Rr$2},{join:function(e){return Dr$2.call(tn$3(this),void 0===e?",":e)}});var Ar$2=tt$6("species"),Fr$2=function(e){return Ge$5>=51||!ue$6((function(){var t=[];return (t.constructor={})[Ar$2]=function(){return {foo:1}},1!==t[e](Boolean).foo}))},Ir$2=at$6.map,Br$2=Fr$2("map");Cn$3({target:"Array",proto:!0,forced:!Br$2},{map:function(e){return Ir$2(this,e,arguments.length>1?arguments[1]:void 0)}});
  /*! *****************************************************************************
  Copyright (c) Microsoft Corporation.

  Permission to use, copy, modify, and/or distribute this software for any
  purpose with or without fee is hereby granted.

  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
  PERFORMANCE OF THIS SOFTWARE.
  ***************************************************************************** */
  var _r$2=function(e,t){return (_r$2=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t;}||function(e,t){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n]);})(e,t)};function $r$2(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Class extends value "+String(t)+" is not a constructor or null");function n(){this.constructor=e;}_r$2(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n);}var Wr$2=function(){return (Wr$2=Object.assign||function(e){for(var t,n=1,r=arguments.length;n<r;n++)for(var o in t=arguments[n])Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o]);return e}).apply(this,arguments)};function zr$2(e){var t="function"==typeof Symbol&&Symbol.iterator,n=t&&e[t],r=0;if(n)return n.call(e);if(e&&"number"==typeof e.length)return {next:function(){return e&&r>=e.length&&(e=void 0),{value:e&&e[r++],done:!e}}};throw new TypeError(t?"Object is not iterable.":"Symbol.iterator is not defined.")}function Vr$2(e,t){var n="function"==typeof Symbol&&e[Symbol.iterator];if(!n)return e;var r,o,i=n.call(e),a=[];try{for(;(void 0===t||t-- >0)&&!(r=i.next()).done;)a.push(r.value);}catch(e){o={error:e};}finally{try{r&&!r.done&&(n=i.return)&&n.call(i);}finally{if(o)throw o.error}}return a}function Ur$2(e,t){for(var n=0,r=t.length,o=e.length;n<r;n++,o++)e[o]=t[n];return e}var Kr$2=0,Hr$2=function(){this.id=""+Kr$2++;},qr$1=$t$5.set,Jr$1=$t$5.getterFor("Array Iterator"),Gr$2=Mr$2(Array,"Array",(function(e,t){qr$1(this,{type:"Array Iterator",target:tn$3(e),index:0,kind:t});}),(function(){var e=Jr$1(this),t=e.target,n=e.kind,r=e.index++;return !t||r>=t.length?(e.target=void 0,{value:void 0,done:!0}):"keys"==n?{value:r,done:!1}:"values"==n?{value:t[r],done:!1}:{value:[r,t[r]],done:!1}}),"values");qn$3.Arguments=qn$3.Array,In$3("keys"),In$3("values"),In$3("entries");var Yr$2=function(e,t,n){for(var r in t)Wt$5(e,r,t[r],n);return e},Xr$2=!ue$6((function(){return Object.isExtensible(Object.preventExtensions({}))})),Qr$2=te$6((function(e){var t=Te$6.f,n=We$5("meta"),r=0,o=Object.isExtensible||function(){return !0},i=function(e){t(e,n,{value:{objectID:"O"+ ++r,weakData:{}}});},a=e.exports={REQUIRED:!1,fastKey:function(e,t){if(!xe$6(e))return "symbol"==typeof e?e:("string"==typeof e?"S":"P")+e;if(!Be$5(e,n)){if(!o(e))return "F";if(!t)return "E";i(e);}return e[n].objectID},getWeakData:function(e,t){if(!Be$5(e,n)){if(!o(e))return !0;if(!t)return !1;i(e);}return e[n].weakData},onFreeze:function(e){return Xr$2&&a.REQUIRED&&o(e)&&!Be$5(e,n)&&i(e),e}};jt$5[n]=!0;})),Zr$1=function(e,t){this.stopped=e,this.result=t;},eo$1=function(e,t,n){var r,o,i,a,s,l,u,c=n&&n.that,f=!(!n||!n.AS_ENTRIES),d=!(!n||!n.IS_ITERATOR),h=!(!n||!n.INTERRUPTED),p=le$6(t,c,1+f+h),g=function(e){return r&&Kn$3(r),new Zr$1(!0,e)},v=function(e){return f?(Me$6(e),h?p(e[0],e[1],g):p(e[0],e[1])):h?p(e,g):p(e)};if(d)r=e;else {if("function"!=typeof(o=Zn$2(e)))throw TypeError("Target is not iterable");if(Yn$2(o)){for(i=0,a=be$6(e.length);a>i;i++)if((s=v(e[i]))&&s instanceof Zr$1)return s;return new Zr$1(!1)}r=o.call(e);}for(l=r.next;!(u=l.call(r)).done;){try{s=v(u.value);}catch(e){throw Kn$3(r),e}if("object"==typeof s&&s&&s instanceof Zr$1)return s}return new Zr$1(!1)},to$1=function(e,t,n){if(!(e instanceof t))throw TypeError("Incorrect "+(n?n+" ":"")+"invocation");return e},no$1=function(e,t,n){var r=-1!==e.indexOf("Map"),o=-1!==e.indexOf("Weak"),i=r?"set":"add",a=ie$6[e],s=a&&a.prototype,l=a,u={},c=function(e){var t=s[e];Wt$5(s,e,"add"==e?function(e){return t.call(this,0===e?0:e),this}:"delete"==e?function(e){return !(o&&!xe$6(e))&&t.call(this,0===e?0:e)}:"get"==e?function(e){return o&&!xe$6(e)?void 0:t.call(this,0===e?0:e)}:"has"==e?function(e){return !(o&&!xe$6(e))&&t.call(this,0===e?0:e)}:function(e,n){return t.call(this,0===e?0:e,n),this});};if(En$3(e,"function"!=typeof a||!(o||s.forEach&&!ue$6((function(){(new a).entries().next();})))))l=n.getConstructor(t,e,r,i),Qr$2.REQUIRED=!0;else if(En$3(e,!0)){var f=new l,d=f[i](o?{}:-0,1)!=f,h=ue$6((function(){f.has(1);})),p=or$3((function(e){new a(e);})),g=!o&&ue$6((function(){for(var e=new a,t=5;t--;)e[i](t,t);return !e.has(-0)}));p||((l=t((function(t,n){to$1(t,l,e);var o=function(e,t,n){var r,o;return kr$2&&"function"==typeof(r=t.constructor)&&r!==n&&xe$6(o=r.prototype)&&o!==n.prototype&&kr$2(e,o),e}(new a,t,l);return null!=n&&eo$1(n,o[i],{that:o,AS_ENTRIES:r}),o}))).prototype=s,s.constructor=l),(h||g)&&(c("delete"),c("has"),r&&c("get")),(g||d)&&c(i),o&&s.clear&&delete s.clear;}return u[e]=l,Cn$3({global:!0,forced:l!=a},u),br$2(l,e),o||n.setStrong(l,e,r),l},ro$1=Qr$2.getWeakData,oo$1=$t$5.set,io$1=$t$5.getterFor,ao$1=at$6.find,so$1=at$6.findIndex,lo$1=0,uo$1=function(e){return e.frozen||(e.frozen=new co$1)},co$1=function(){this.entries=[];},fo$1=function(e,t){return ao$1(e.entries,(function(e){return e[0]===t}))};co$1.prototype={get:function(e){var t=fo$1(this,e);if(t)return t[1]},has:function(e){return !!fo$1(this,e)},set:function(e,t){var n=fo$1(this,e);n?n[1]=t:this.entries.push([e,t]);},delete:function(e){var t=so$1(this.entries,(function(t){return t[0]===e}));return ~t&&this.entries.splice(t,1),!!~t}};var ho$1={getConstructor:function(e,t,n,r){var o=e((function(e,i){to$1(e,o,t),oo$1(e,{type:t,id:lo$1++,frozen:void 0}),null!=i&&eo$1(i,e[r],{that:e,AS_ENTRIES:n});})),i=io$1(t),a=function(e,t,n){var r=i(e),o=ro$1(Me$6(t),!0);return !0===o?uo$1(r).set(t,n):o[r.id]=n,e};return Yr$2(o.prototype,{delete:function(e){var t=i(this);if(!xe$6(e))return !1;var n=ro$1(e);return !0===n?uo$1(t).delete(e):n&&Be$5(n,t.id)&&delete n[t.id]},has:function(e){var t=i(this);if(!xe$6(e))return !1;var n=ro$1(e);return !0===n?uo$1(t).has(e):n&&Be$5(n,t.id)}}),Yr$2(o.prototype,n?{get:function(e){var t=i(this);if(xe$6(e)){var n=ro$1(e);return !0===n?uo$1(t).get(e):n?n[t.id]:void 0}},set:function(e,t){return a(this,e,t)}}:{add:function(e){return a(this,e,!0)}}),o}};te$6((function(e){var t,n=$t$5.enforce,r=!ie$6.ActiveXObject&&"ActiveXObject"in ie$6,o=Object.isExtensible,i=function(e){return function(){return e(this,arguments.length?arguments[0]:void 0)}},a=e.exports=no$1("WeakMap",i,ho$1);if(Pt$6&&r){t=ho$1.getConstructor(i,"WeakMap",!0),Qr$2.REQUIRED=!0;var s=a.prototype,l=s.delete,u=s.has,c=s.get,f=s.set;Yr$2(s,{delete:function(e){if(xe$6(e)&&!o(e)){var r=n(this);return r.frozen||(r.frozen=new t),l.call(this,e)||r.frozen.delete(e)}return l.call(this,e)},has:function(e){if(xe$6(e)&&!o(e)){var r=n(this);return r.frozen||(r.frozen=new t),u.call(this,e)||r.frozen.has(e)}return u.call(this,e)},get:function(e){if(xe$6(e)&&!o(e)){var r=n(this);return r.frozen||(r.frozen=new t),u.call(this,e)?c.call(this,e):r.frozen.get(e)}return c.call(this,e)},set:function(e,r){if(xe$6(e)&&!o(e)){var i=n(this);i.frozen||(i.frozen=new t),u.call(this,e)?f.call(this,e,r):i.frozen.set(e,r);}else f.call(this,e,r);return this}});}}));var po$1=tt$6("iterator"),go$1=tt$6("toStringTag"),vo$1=Gr$2.values;for(var yo$1 in ae$6){var mo$1=ie$6[yo$1],wo$1=mo$1&&mo$1.prototype;if(wo$1){if(wo$1[po$1]!==vo$1)try{je$6(wo$1,po$1,vo$1);}catch(e){wo$1[po$1]=vo$1;}if(wo$1[go$1]||je$6(wo$1,go$1,yo$1),ae$6[yo$1])for(var bo$1 in Gr$2)if(wo$1[bo$1]!==Gr$2[bo$1])try{je$6(wo$1,bo$1,Gr$2[bo$1]);}catch(e){wo$1[bo$1]=Gr$2[bo$1];}}}var xo$1=new WeakMap,So$1=new WeakMap,ko$1=new WeakMap,Eo$1=new WeakMap,Oo$1=new WeakMap,Co$1=new WeakMap,No$1=new WeakMap,Mo$1=new WeakMap,Lo$1=new WeakMap,Po$1=new WeakMap,To$1=new WeakMap,Do$1=new WeakMap,jo$1=new WeakMap,Ro$1=new WeakMap,Ao$1=new WeakMap,Fo$1=new WeakMap,Io$1=new WeakMap,Bo$1=new WeakMap,_o$1=new WeakMap,$o$1=new WeakMap,Wo$1=new WeakMap,zo$1=new WeakMap,Vo$1=new WeakMap,Uo$1=new WeakMap,Ko$1=new WeakMap,Ho$1=at$6.find,qo$1=!0;"find"in[]&&Array(1).find((function(){qo$1=!1;})),Cn$3({target:"Array",proto:!0,forced:qo$1},{find:function(e){return Ho$1(this,e,arguments.length>1?arguments[1]:void 0)}}),In$3("find");var Jo$1=["area","base","basefont","bgsound","br","col","command","embed","frame","hr","image","img","input","isindex","keygen","link","menuitem","meta","nextid","param","source","track","wbr"];$$6.fn.css=css,$$6.fn.append=append,$$6.fn.addClass=addClass,$$6.fn.removeClass=removeClass,$$6.fn.hasClass=hasClass,$$6.fn.on=on$4,$$6.fn.focus=focus,$$6.fn.attr=attr,$$6.fn.removeAttr=removeAttr,$$6.fn.hide=hide,$$6.fn.show=show,$$6.fn.offset=offset,$$6.fn.width=width,$$6.fn.height=height,$$6.fn.parent=parent,$$6.fn.parents=parents,$$6.fn.is=is$1,$$6.fn.dataset=dataset,$$6.fn.val=val,$$6.fn.text=text,$$6.fn.html=html,$$6.fn.children=children,$$6.fn.remove=remove,$$6.fn.find=find,$$6.fn.each=each;var Go$1=function(e){return e&&e.ownerDocument&&e.ownerDocument.defaultView||null},Yo$1=function(e){return Xo$1(e)&&1===e.nodeType},Xo$1=function(e){var t=Go$1(e);return !!t&&e instanceof t.Node},Qo$1=function(e){var t=e&&e.anchorNode&&Go$1(e.anchorNode);return !!t&&e instanceof t.Selection},Zo$1=function(e){return Xo$1(e)&&3===e.nodeType},ei$1=function(e,t,n){for(var r,o=e.childNodes,i=o[t],a=t,s=!1,l=!1;(Xo$1(r=i)&&8===r.nodeType||Yo$1(i)&&0===i.childNodes.length||Yo$1(i)&&"false"===i.getAttribute("contenteditable"))&&(!s||!l);)a>=o.length?(s=!0,a=t-1,n="backward"):a<0?(l=!0,a=t+1,n="forward"):(i=o[a],t=a,a+="forward"===n?1:-1);return [i,t]},ti$1=function(e,t,n){return Vr$2(ei$1(e,t,n),1)[0]},ni$1=function e(t){var n,r,o="";if(Zo$1(t)&&t.nodeValue)return t.nodeValue;if(Yo$1(t)){try{for(var i=zr$2(Array.from(t.childNodes)),a=i.next();!a.done;a=i.next()){o+=e(a.value);}}catch(e){n={error:e};}finally{try{a&&!a.done&&(r=i.return)&&r.call(i);}finally{if(n)throw n.error}}var s=getComputedStyle(t).getPropertyValue("display");"block"!==s&&"list"!==s&&"BR"!==t.tagName||(o+="\n");}return o};function ri$1(e,t){for(var n=e.childNodes,r=n.length;r--;){var o=n[r],i=o.nodeType;3==i?t(o,e):1!=i&&9!=i&&11!=i||ri$1(o,t);}}void 0!==globalThis.navigator&&void 0!==globalThis.window&&/iPad|iPhone|iPod/.test(navigator.userAgent)&&globalThis.window.MSStream;var oi$1="undefined"!=typeof navigator&&/Mac OS X/.test(navigator.userAgent),ii$1="undefined"!=typeof navigator&&/^(?!.*Seamonkey)(?=.*Firefox).*/i.test(navigator.userAgent);"undefined"!=typeof navigator&&/^(?!.*Seamonkey)(?=.*Firefox\/(?:[0-7][0-9]|[0-8][0-6])).*/i.test(navigator.userAgent);var ai$1="undefined"!=typeof navigator&&/Version\/[\d\.]+.*Safari/.test(navigator.userAgent),si$1="undefined"!=typeof navigator&&/Edge?\/(?:[0-6][0-9]|[0-7][0-8])/i.test(navigator.userAgent),li$1="undefined"!=typeof navigator&&/Chrome?\/(?:[0-7][0-5]|[0-6][0-9])/i.test(navigator.userAgent),ui$1="undefined"!=typeof navigator&&/Chrome/i.test(navigator.userAgent),ci$1=!li$1&&!si$1&&"undefined"!=typeof globalThis&&globalThis.InputEvent&&"function"==typeof globalThis.InputEvent.prototype.getTargetRanges,fi$1={getWindow:function(e){var t=$o$1.get(e);if(!t)throw new Error("Unable to find a host window element for this editor");return t},findKey:function(e,t){var n=_o$1.get(t);return n||(n=new Hr$2,_o$1.set(t,n)),n},setNewKey:function(e){var t=new Hr$2;_o$1.set(e,t);},findPath:function(t,n){for(var r=[],o=n;;){var i=Ro$1.get(o);if(null==i){if(Editor.isEditor(o))return r;break}var a=jo$1.get(o);if(null==a)break;r.unshift(a),o=i;}throw new Error("Unable to find the path for Slate node: "+JSON.stringify(n))},findDocumentOrShadowRoot:function(e){if(e.isDestroyed)return window.document;var t=fi$1.toDOMNode(e,e),n=t.getRootNode();if(t.ownerDocument!==document)return t.ownerDocument;if(!(n instanceof Document||n instanceof ShadowRoot))throw new Error("Unable to find DocumentOrShadowRoot for editor element: "+t);return void 0===n.getSelection&&null!==t.ownerDocument?t.ownerDocument:n},getParentNode:function(e,t){return Ro$1.get(t)||null},getParentsNodes:function(e,t){for(var n=[],r=t;r!==e&&null!=r;){var o=fi$1.getParentNode(e,r);null!=o&&(n.push(o),r=o);}return n},getTopNode:function(e,t){var n=[fi$1.findPath(e,t)[0]];return Node$1.get(e,n)},toDOMNode:function(t,n){var r;if(Editor.isEditor(n))r=Ao$1.get(t);else {var o=fi$1.findKey(t,n);r=Io$1.get(o);}if(!r)throw new Error("Cannot resolve a DOM node from Slate node: "+JSON.stringify(n));return r},hasDOMNode:function(e,t,n){void 0===n&&(n={});var r,o=n.editable,i=void 0!==o&&o,a=fi$1.toDOMNode(e,e);try{r=Yo$1(t)?t:t.parentElement;}catch(e){if(!e.message.includes('Permission denied to access property "nodeType"'))throw e}return !!r&&(r.closest("[data-slate-editor]")===a&&(!i||r.isContentEditable||!!r.getAttribute("data-slate-zero-width")))},toDOMRange:function(e,t){var n=t.anchor,r=t.focus,i=Range.isBackward(t),a=fi$1.toDOMPoint(e,n),s=Range.isCollapsed(t)?a:fi$1.toDOMPoint(e,r),l=fi$1.getWindow(e).document.createRange(),u=Vr$2(i?s:a,2),c=u[0],f=u[1],d=Vr$2(i?a:s,2),h=d[0],p=d[1],g=!!(Yo$1(c)?c:c.parentElement).getAttribute("data-slate-zero-width"),v=!!(Yo$1(h)?h:h.parentElement).getAttribute("data-slate-zero-width");return l.setStart(c,g?1:f),l.setEnd(h,v?1:p),l},toDOMPoint:function(t,n){var r,o,i,a=Vr$2(Editor.node(t,n.path),1)[0],s=fi$1.toDOMNode(t,a);Editor.void(t,{at:n})&&(n={path:n.path,offset:0});var l=Array.from(s.querySelectorAll("[data-slate-string], [data-slate-zero-width]")),u=0;try{for(var c=zr$2(l),f=c.next();!f.done;f=c.next()){var d=f.value,h=d.childNodes[0];if(null!=h&&null!=h.textContent){var p=h.textContent.length,g=d.getAttribute("data-slate-length"),v=u+(null==g?p:parseInt(g,10));if(n.offset<=v){i=[h,Math.min(p,Math.max(0,n.offset-u))];break}u=v;}}}catch(e){r={error:e};}finally{try{f&&!f.done&&(o=c.return)&&o.call(c);}finally{if(r)throw r.error}}if(!i)throw new Error("Cannot resolve a DOM point from Slate point: "+JSON.stringify(n));return i},toSlateNode:function(e,t){var n=Yo$1(t)?t:t.parentElement;n&&!n.hasAttribute("data-slate-node")&&(n=n.closest("[data-slate-node]"));var r=n?Fo$1.get(n):null;if(!r)throw new Error("Cannot resolve a Slate node from DOM node: "+n);return r},findEventRange:function(t,n){"nativeEvent"in n&&(n=n.nativeEvent);var r=n.clientX,o=n.clientY,i=n.target;if(null==r||null==o)throw new Error("Cannot resolve a Slate range from a DOM event: "+n);var a,s=fi$1.toSlateNode(t,n.target),l=fi$1.findPath(t,s);if(Editor.isVoid(t,s)){var u=i.getBoundingClientRect(),c=t.isInline(s)?r-u.left<u.left+u.width-r:o-u.top<u.top+u.height-o,f=Editor.point(t,l,{edge:c?"start":"end"}),d=c?Editor.before(t,f):Editor.after(t,f);if(d)return Editor.range(t,d)}var h=window.document;if(h.caretRangeFromPoint)a=h.caretRangeFromPoint(r,o);else {var p=h.caretPositionFromPoint(r,o);p&&((a=h.createRange()).setStart(p.offsetNode,p.offset),a.setEnd(p.offsetNode,p.offset));}if(!a)throw new Error("Cannot resolve a Slate range from a DOM event: "+n);return fi$1.toSlateRange(t,a,{exactMatch:!1})},toSlateRange:function(e,t,n){var r,o,i,a,s,l=n.exactMatch;if((Qo$1(t)?t.anchorNode:t.startContainer)&&(Qo$1(t)?(r=t.anchorNode,o=t.anchorOffset,i=t.focusNode,a=t.focusOffset,s=ui$1&&window.document.activeElement&&window.document.activeElement.shadowRoot?t.anchorNode===t.focusNode&&t.anchorOffset===t.focusOffset:t.isCollapsed):(r=t.startContainer,o=t.startOffset,i=t.endContainer,a=t.endOffset,s=t.collapsed)),null==r||null==i||null==o||null==a)throw new Error("Cannot resolve a Slate range from DOM range: "+t);var u=fi$1.toSlatePoint(e,[r,o],l);if(!u)return null;var c=s?u:fi$1.toSlatePoint(e,[i,a],l);return c?{anchor:u,focus:c}:null},toSlatePoint:function(e,t,n){var r=Vr$2(n?t:function(e){var t,n=Vr$2(e,2),r=n[0],o=n[1];if(Yo$1(r)&&r.childNodes.length){var i=o===r.childNodes.length,a=i?o-1:o;for(r=(t=Vr$2(ei$1(r,a,i?"backward":"forward"),2))[0],i=(a=t[1])<o;Yo$1(r)&&r.childNodes.length;){var s=i?r.childNodes.length-1:0;r=ti$1(r,s,i?"backward":"forward");}o=i&&null!=r.textContent?r.textContent.length:0;}return [r,o]}(t),2),o=r[0],i=r[1],a=o.parentNode,s=null,l=0;if(a){var u=a.closest('[data-slate-void="true"]'),f=a.closest("[data-slate-leaf]"),d=null;if(f){s=f.closest('[data-slate-node="text"]');var h=fi$1.getWindow(e).document.createRange();h.setStart(s,0),h.setEnd(o,i);var p=h.cloneContents();Ur$2(Ur$2([],Vr$2(lodash_toarray(p.querySelectorAll("[data-slate-zero-width]")))),Vr$2(lodash_toarray(p.querySelectorAll("[contenteditable=false]")))).forEach((function(e){e.parentNode.removeChild(e);})),l=p.textContent.length,d=s;}else u&&((f=u.querySelector("[data-slate-leaf]"))?(s=f.closest('[data-slate-node="text"]'),l=(d=f).textContent.length,d.querySelectorAll("[data-slate-zero-width]").forEach((function(e){l-=e.textContent.length;}))):l=1);d&&l===d.textContent.length&&a.hasAttribute("data-slate-zero-width")&&l--;}if(!s){if(n)return null;throw new Error("Cannot resolve a Slate point from DOM point: "+t)}var g=fi$1.toSlateNode(e,s);return {path:fi$1.findPath(e,g),offset:l}},hasRange:function(t,n){var r=n.anchor,o=n.focus;return Editor.hasPath(t,r.path)&&Editor.hasPath(t,o.path)},getNodeType:function(e){return Element$1.isElement(e)?e.type:""},checkNodeType:function(e,t){return this.getNodeType(e)===t},getNodesStr:function(e){return e.map((function(e){return Node$1.string(e)})).join("")},getSelectedElems:function(t){var n,r,o=[],a=Editor.nodes(t,{universal:!0});try{for(var s=zr$2(a),l=s.next();!l.done;l=s.next()){var u=Vr$2(l.value,1)[0];Element$1.isElement(u)&&o.push(u);}}catch(e){n={error:e};}finally{try{l&&!l.done&&(r=s.return)&&r.call(s);}finally{if(n)throw n.error}}return o},getSelectedNodeByType:function(t,n){var r=this,o=Vr$2(Editor.nodes(t,{match:function(e){return r.checkNodeType(e,n)},universal:!0}),1)[0];return null==o?null:o[0]},getSelectedTextNode:function(t){var n=Vr$2(Editor.nodes(t,{match:function(e){return Text.isText(e)},universal:!0}),1)[0];return null==n?null:n[0]},isNodeSelected:function(t,n){var r=Vr$2(Editor.nodes(t,{match:function(e){return e===n},universal:!0}),1)[0];return null!=r&&Vr$2(r,1)[0]===n},isSelectionAtLineEnd:function(t,n){var r=t.selection;return !!r&&(Editor.isEnd(t,r.anchor,n)||Editor.isEnd(t,r.focus,n))},recordChangingPath:function(e,t){zo$1.set(e,t);},deleteChangingPath:function(e){zo$1.delete(e);},isChangingPath:function(e,t){var n=zo$1.get(e)||[];return lodash_isequal(n,t)},getTextarea:function(e){var t=xo$1.get(e);if(null==t)throw new Error("Cannot find textarea instance by editor");return t},getToolbar:function(e){return Eo$1.get(e)||null},getHoverbar:function(e){return Co$1.get(e)||null},normalizeContent:function(e){e.children.forEach((function(t,n){e.normalizeNode([t,[n]]);}));},checkMaxLength:function(e,t){void 0===t&&(t="");var n=e.getConfig(),r=n.maxLength,o=n.onMaxLength;if("number"==typeof r&&r>0&&(t||(t=" "),e.getText().length+t.length>r))return o&&o(e),!0;return !1},cleanExposedTexNodeInSelectionBlock:function(t){var n,r,o=Editor.nodes(t,{match:function(e){return !(!Element$1.isElement(e)||t.isInline(e))},universal:!0});try{for(var a=zr$2(o),s=a.next();!s.done;s=a.next()){var l=s.value;if(null!=l){var u=l[0];ri$1(fi$1.toDOMNode(t,u),(function(e,t){var n=$$6(t);n.attr("data-slate-string")||n.attr("data-slate-zero-width")||(console.log({parent:t,textNode:e}),t.removeChild(e));}));}}}catch(e){n={error:e};}finally{try{s&&!s.done&&(r=a.return)&&r.call(a);}finally{if(n)throw n.error}}}},di$1=1,hi$1={};var pi$1={};function gi$1(e,t){var n=e.key,r=e.factory,o=e.config,i=Wr$2(Wr$2({},o),t||{});if(null!=pi$1[n])throw new Error("Duplicated key '"+n+"' in menu items");pi$1[n]=r,function(e,t){null!=t&&(hi$1[e]=t);}(n,i);}var vi$1=function(e,t={}){function n(){return i()||function(){const e=u(/^([^<]+)/);if(e){const n={type:"Text",content:e[1]};return {excluded:!1===t.filter(n),node:n}}}()||a()||function(){if(e.startsWith("<![CDATA[")){const n=e.indexOf("]]>");if(n>-1){const r=n+3,o={type:"CDATA",content:e.substring(0,r)};return e=e.slice(r),{excluded:!1===t.filter(o),node:o}}}}()}function r(){return u(/\s*/),i(!0)||a()||function(){const e=u(/^<!DOCTYPE\s+[^>]*>/);if(e){const n={type:"DocumentType",content:e[0]};return {excluded:!1===t.filter(n),node:n}}}()||o(!1)}function o(e){const n=u(e?/^<\?(xml)\s*/:/^<\?([\w-:.]+)\s*/);if(!n)return;const r={name:n[1],type:"ProcessingInstruction",attributes:{}};for(;!c()&&!f("?>");){const e=s();if(!e)return r;r.attributes[e.name]=e.value;}return u(/\?>/),{excluded:!e&&!1===t.filter(r),node:r}}function i(e){const r=u(/^<([\w-:.]+)\s*/);if(!r)return;const o={type:"Element",name:r[1],attributes:{},children:[]};for(;!(c()||f(">")||f("?>")||f("/>"));){const e=s();if(!e)return o;o.attributes[e.name]=e.value;}const i=!e&&!1===t.filter(o);if(u(/^\s*\/>/))return o.children=null,{excluded:i,node:o};if(u(/\??>/),!i){let e=n();for(;e;)e.excluded||o.children.push(e.node),e=n();}return u(/^<\/[\w-:.]+>/),{excluded:i,node:o}}function a(){const e=u(/^<!--[\s\S]*?-->/);if(e){const n={type:"Comment",content:e[0]};return {excluded:!1===t.filter(n),node:n}}}function s(){const e=u(/([\w:-]+)\s*=\s*("[^"]*"|'[^']*'|\w+)\s*/);if(e)return {name:e[1],value:l(e[2])}}function l(e){return e.replace(/^['"]|['"]$/g,"")}function u(t){const n=e.match(t);if(n)return e=e.slice(n[0].length),n}function c(){return 0===e.length}function f(t){return 0===e.indexOf(t)}return t.filter=t.filter||(()=>!0),e=e.trim(),function(){const e=o(!0),t=[];let n,i=r();for(;i;){if("Element"===i.node.type){if(n)throw new Error("Found multiple root nodes");n=i.node;}i.excluded||t.push(i.node),i=r();}if(!n)throw new Error("Failed to parse XML");return {declaration:e?e.node:null,root:n,children:t}}()};function yi$1(e){if(!e.options.indentation&&!e.options.lineSeparator)return;let t;for(e.content+=e.options.lineSeparator,t=0;t<e.level;t++)e.content+=e.options.indentation;}function mi$1(e,t){e.content+=t;}function wi$1(e,t,n){if("string"==typeof e.content)!function(e,t,n){n||(e.content=e.content.trim());e.content.length>0&&(!n&&t.content.length>0&&yi$1(t),mi$1(t,e.content));}(e,t,n);else if("Element"===e.type)!function(e,t,n){!n&&t.content.length>0&&yi$1(t);if(mi$1(t,"<"+e.name),bi$1(t,e.attributes),null===e.children){const e=t.options.whiteSpaceAtEndOfSelfclosingTag?" />":"/>";mi$1(t,e);}else if(0===e.children.length)mi$1(t,"></"+e.name+">");else {mi$1(t,">"),t.level++;let r="preserve"===e.attributes["xml:space"];if(!r&&t.options.collapseContent){e.children.some((function(e){return "Text"===e.type&&""!==e.content.trim()}))&&(r=!0);}e.children.forEach((function(e){wi$1(e,t,n||r,t.options);})),t.level--,n||r||yi$1(t),mi$1(t,"</"+e.name+">");}}(e,t,n);else {if("ProcessingInstruction"!==e.type)throw new Error("Unknown node type: "+e.type);xi$1(e,t);}}function bi$1(e,t){Object.keys(t).forEach((function(n){const r=t[n].replace(/"/g,"&quot;");mi$1(e," "+n+'="'+r+'"');}));}function xi$1(e,t){t.content.length>0&&yi$1(t),mi$1(t,"<?"+e.name),bi$1(t,e.attributes),mi$1(t,"?>");}var Si$1=function(e,t={}){t.indentation="indentation"in t?t.indentation:"    ",t.collapseContent=!0===t.collapseContent,t.lineSeparator="lineSeparator"in t?t.lineSeparator:"\r\n",t.whiteSpaceAtEndOfSelfclosingTag=!!t.whiteSpaceAtEndOfSelfclosingTag;const n=vi$1(e,{filter:t.filter}),r={content:"",level:0,options:t};return n.declaration&&xi$1(n.declaration,r),n.children.forEach((function(e){wi$1(e,r,!1);})),r.content},ki$1=[];function Ei$1(e){ki$1.push(e);}var Oi$1=[];function Ci$1(e){Oi$1.push(e);}var Ni$1={};function Mi$1(e){var t=e.type,n=e.elemToHtml;Ni$1[t||""]=n;}function Li$1(e,t,n){var r=n.isInline(e)?"span":"div";return "<"+r+">"+t+"</"+r+">"}function Pi$1(t,n){var r=t.type,o=void 0===r?"":r,i=t.children,a=void 0===i?[]:i,s=Editor.isVoid(n,t),l="";s||(l=a.map((function(e){return aa$1(e,n)})).join(" "));var u=function(e){return Ni$1[e]||Li$1}(o)(t,l,n);return s||ki$1.forEach((function(e){return u=e(t,u)})),u}function Ti$1(e,t){return RegExp(e,t)}var Di$1,ji$1,Ri$1={UNSUPPORTED_Y:ue$6((function(){var e=Ti$1("a","y");return e.lastIndex=2,null!=e.exec("abcd")})),BROKEN_CARET:ue$6((function(){var e=Ti$1("^r","gy");return e.lastIndex=2,null!=e.exec("str")}))},Ai$1=RegExp.prototype.exec,Fi$1=Fe$5("native-string-replace",String.prototype.replace),Ii$1=Ai$1,Bi$1=(Di$1=/a/,ji$1=/b*/g,Ai$1.call(Di$1,"a"),Ai$1.call(ji$1,"a"),0!==Di$1.lastIndex||0!==ji$1.lastIndex),_i$1=Ri$1.UNSUPPORTED_Y||Ri$1.BROKEN_CARET,$i$1=void 0!==/()??/.exec("")[1];(Bi$1||$i$1||_i$1)&&(Ii$1=function(e){var t,n,r,o,i=this,a=_i$1&&i.sticky,s=Ht$5.call(i),l=i.source,u=0,c=e;return a&&(-1===(s=s.replace("y","")).indexOf("g")&&(s+="g"),c=String(e).slice(i.lastIndex),i.lastIndex>0&&(!i.multiline||i.multiline&&"\n"!==e[i.lastIndex-1])&&(l="(?: "+l+")",c=" "+c,u++),n=new RegExp("^(?:"+l+")",s)),$i$1&&(n=new RegExp("^"+l+"$(?!\\s)",s)),Bi$1&&(t=i.lastIndex),r=Ai$1.call(a?n:i,c),a?r?(r.input=r.input.slice(u),r[0]=r[0].slice(u),r.index=i.lastIndex,i.lastIndex+=r[0].length):i.lastIndex=0:Bi$1&&r&&(i.lastIndex=i.global?r.index+r[0].length:t),$i$1&&r&&r.length>1&&Fi$1.call(r[0],n,(function(){for(o=1;o<arguments.length-2;o++)void 0===arguments[o]&&(r[o]=void 0);})),r});var Wi$1=Ii$1;Cn$3({target:"RegExp",proto:!0,forced:/./.exec!==Wi$1},{exec:Wi$1});var zi$1=tt$6("species"),Vi$1=RegExp.prototype,Ui$1=!ue$6((function(){var e=/./;return e.exec=function(){var e=[];return e.groups={a:"7"},e},"7"!=="".replace(e,"$<a>")})),Ki$1="$0"==="a".replace(/./,"$0"),Hi$1=tt$6("replace"),qi$1=!!/./[Hi$1]&&""===/./[Hi$1]("a","$0"),Ji$1=!ue$6((function(){var e=/(?:)/,t=e.exec;e.exec=function(){return t.apply(this,arguments)};var n="ab".split(e);return 2!==n.length||"a"!==n[0]||"b"!==n[1]})),Gi$1=function(e,t,n,r){var o=tt$6(e),i=!ue$6((function(){var t={};return t[o]=function(){return 7},7!=""[e](t)})),a=i&&!ue$6((function(){var t=!1,n=/a/;return "split"===e&&((n={}).constructor={},n.constructor[zi$1]=function(){return n},n.flags="",n[o]=/./[o]),n.exec=function(){return t=!0,null},n[o](""),!t}));if(!i||!a||"replace"===e&&(!Ui$1||!Ki$1||qi$1)||"split"===e&&!Ji$1){var s=/./[o],l=n(o,""[e],(function(e,t,n,r,o){var a=t.exec;return a===Wi$1||a===Vi$1.exec?i&&!o?{done:!0,value:s.call(t,n,r)}:{done:!0,value:e.call(n,t,r)}:{done:!1}}),{REPLACE_KEEPS_$0:Ki$1,REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE:qi$1}),u=l[0],c=l[1];Wt$5(String.prototype,e,u),Wt$5(Vi$1,o,2==t?function(e,t){return c.call(e,this,t)}:function(e){return c.call(e,this)});}r&&je$6(Vi$1[o],"sham",!0);},Yi$1=cr$3.charAt,Xi$1=function(e,t,n){return t+(n?Yi$1(e,t).length:1)},Qi$1=Math.floor,Zi$1="".replace,ea$1=/\$([$&'`]|\d{1,2}|<[^>]*>)/g,ta$1=/\$([$&'`]|\d{1,2})/g,na$1=function(e,t,n,r,o,i){var a=n+e.length,s=r.length,l=ta$1;return void 0!==o&&(o=ge$6(o),l=ea$1),Zi$1.call(i,l,(function(i,l){var u;switch(l.charAt(0)){case"$":return "$";case"&":return e;case"`":return t.slice(0,n);case"'":return t.slice(a);case"<":u=o[l.slice(1,-1)];break;default:var c=+l;if(0===c)return i;if(c>s){var f=Qi$1(c/10);return 0===f?i:f<=s?void 0===r[f-1]?l.charAt(1):r[f-1]+l.charAt(1):i}u=r[c-1];}return void 0===u?"":u}))},ra$1=function(e,t){var n=e.exec;if("function"==typeof n){var r=n.call(e,t);if("object"!=typeof r)throw TypeError("RegExp exec method returned something other than an Object or null");return r}if("RegExp"!==fe$6(e))throw TypeError("RegExp#exec called on incompatible receiver");return Wi$1.call(e,t)},oa$1=Math.max,ia$1=Math.min;function aa$1(e,t){return Element$1.isElement(e)?Pi$1(e,t):function(e,t){var n=e.text;if(null==n)throw new Error("Current node is not slate Text "+JSON.stringify(e));var r=n;return r=function(e){return e.replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/®/g,"&reg;").replace(/©/g,"&copy;").replace(/™/g,"&trade;")}(r),fi$1.getParentsNodes(t,e).some((function(e){return "pre"===fi$1.getNodeType(e)}))||(r=r.replace(/\n|\r/g,"<br/>")),Oi$1.forEach((function(n){return r=n(e,r,t)})),ki$1.forEach((function(t){return r=t(e,r)})),r}(e,t)}function sa$1(e){return "w-e-element-"+e}Gi$1("replace",2,(function(e,t,n,r){var o=r.REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE,i=r.REPLACE_KEEPS_$0,a=o?"$":"$0";return [function(n,r){var o=pe$6(this),i=null==n?void 0:n[e];return void 0!==i?i.call(n,o,r):t.call(String(o),n,r)},function(e,r){if(!o&&i||"string"==typeof r&&-1===r.indexOf(a)){var s=n(t,e,this,r);if(s.done)return s.value}var l=Me$6(e),u=String(this),c="function"==typeof r;c||(r=String(r));var f=l.global;if(f){var d=l.unicode;l.lastIndex=0;}for(var h=[];;){var p=ra$1(l,u);if(null===p)break;if(h.push(p),!f)break;""===String(p[0])&&(l.lastIndex=Xi$1(u,be$6(l.lastIndex),d));}for(var g,v="",y=0,m=0;m<h.length;m++){p=h[m];for(var w=String(p[0]),b=oa$1(ia$1(me$6(p.index),u.length),0),x=[],S=1;S<p.length;S++)x.push(void 0===(g=p[S])?g:String(g));var k=p.groups;if(c){var E=[w].concat(x,b,u);void 0!==k&&E.push(k);var O=String(r.apply(void 0,E));}else O=na$1(w,u,b,x,k,r);b>=y&&(v+=u.slice(y,b)+O,y=b+w.length);}return v+u.slice(y)}]}));var la$1=function(e,t){var n=(t.top+t.bottom)/2;return e.top<=n&&e.bottom>=n},ua$1=function(e,t,n){var r=fi$1.toDOMRange(e,t).getBoundingClientRect(),o=fi$1.toDOMRange(e,n).getBoundingClientRect();return la$1(r,o)&&la$1(o,r)},ca$1=function(t){var l=t,u=l.onChange,c=l.insertText,f=l.apply,d=l.deleteBackward;return l.apply=function(t){var r,o,i,a,s,u,c,d,h=[];if(!l.getConfig().readOnly){switch(t.type){case"insert_text":case"remove_text":case"set_node":try{for(var p=zr$2(Editor.levels(l,{at:t.path})),g=p.next();!g.done;g=p.next()){var v=Vr$2(g.value,2),y=v[0],m=v[1],w=fi$1.findKey(l,y);h.push([m,w]);}}catch(e){r={error:e};}finally{try{g&&!g.done&&(o=p.return)&&o.call(p);}finally{if(r)throw r.error}}break;case"insert_node":case"remove_node":case"merge_node":case"split_node":try{for(var b=zr$2(Editor.levels(l,{at:Path.parent(t.path)})),x=b.next();!x.done;x=b.next()){var S=Vr$2(x.value,2);y=S[0],m=S[1],w=fi$1.findKey(l,y);h.push([m,w]);}}catch(e){i={error:e};}finally{try{x&&!x.done&&(a=b.return)&&a.call(b);}finally{if(i)throw i.error}}break;case"move_node":try{for(var k=zr$2(Editor.levels(l,{at:Path.common(Path.parent(t.path),Path.parent(t.newPath))})),E=k.next();!E.done;E=k.next()){var O=Vr$2(E.value,2);y=O[0],m=O[1],w=fi$1.findKey(l,y);h.push([m,w]);}}catch(e){s={error:e};}finally{try{E&&!E.done&&(u=k.return)&&u.call(k);}finally{if(s)throw s.error}}}f(t);try{for(var C=zr$2(h),N=C.next();!N.done;N=C.next()){var M=Vr$2(N.value,2);m=M[0],w=M[1],y=Vr$2(Editor.node(l,m),1)[0];_o$1.set(y,w);}}catch(e){c={error:e};}finally{try{N&&!N.done&&(d=C.return)&&d.call(C);}finally{if(c)throw c.error}}}},l.deleteBackward=function(n){if("line"!==n)return d(n);if(t.selection&&Range.isCollapsed(t.selection)){var r=Editor.above(t,{match:function(n){return Editor.isBlock(t,n)},at:t.selection});if(r){var i=Vr$2(r,2)[1],a=Editor.range(t,i,t.selection.anchor),u=function(t,n){var r=Editor.range(t,Range.end(n)),i=Array.from(Editor.positions(t,{at:n})),a=0,s=i.length,l=Math.floor(s/2);if(ua$1(t,Editor.range(t,i[a]),r))return Editor.range(t,i[a],r);if(i.length<2)return Editor.range(t,i[i.length-1],r);for(;l!==i.length&&l!==a;)ua$1(t,Editor.range(t,i[l]),r)?s=l:a=l,l=Math.floor((a+s)/2);return Editor.range(t,i[s],r)}(l,a);Range.isCollapsed(u)||Transforms.delete(t,{at:u});}}},l.onChange=function(){var e=l.selection;null!=e&&Vo$1.set(l,e),l.emit("change"),u();},l.insertText=function(e){fi$1.checkMaxLength(l)||c(e);},l.handleTab=function(){l.insertText("    ");},l.getHtml=function(e){void 0===e&&(e={});var t=e.withFormat,n=void 0===t||t,r=e.containerClassName,o=void 0===r?"w-e-content-container":r,i=l.children,a=(void 0===i?[]:i).map((function(e){return aa$1(e,l)})).join("");return a='<div class="'+o+'">'+a+"</div>",n&&(a=Si$1(a,{collapseContent:!0})),a},l.getText=function(){var e=l.children;return (void 0===e?[]:e).map((function(e){return Node$1.string(e)})).join("\n")},l.getSelectionText=function(){var n=l.selection;return null==n?"":Editor.string(t,n)},l.getElemsByTypePrefix=function(t){var n,r,o=[],a=Editor.nodes(l,{at:[],universal:!0});try{for(var s=zr$2(a),u=s.next();!u.done;u=s.next()){var c=Vr$2(u.value,1)[0];if(Element$1.isElement(c))if(c.type.indexOf(t)>=0){var f=sa$1(fi$1.findKey(l,c).id);o.push(Wr$2(Wr$2({},c),{id:f}));}}}catch(e){n={error:e};}finally{try{u&&!u.done&&(r=s.return)&&r.call(s);}finally{if(n)throw n.error}}return o},l.isEmpty=function(){var e=l.children,t=void 0===e?[]:e;if(t.length>1)return !1;var n=t[0];if(null==n)return !0;if(Element$1.isElement(n)&&"paragraph"===n.type){var r=n.children,o=void 0===r?[]:r;if(o.length>1)return !1;var s=o[0];if(null==s)return !0;if(Text.isText(s)&&""===s.text)return !0}return !1},l.getParentNode=function(e){return fi$1.getParentNode(l,e)},l},fa$1="\t\n\v\f\r                　\u2028\u2029\ufeff",da$1="["+fa$1+"]",ha$1=RegExp("^"+da$1+da$1+"*"),pa$1=RegExp(da$1+da$1+"*$"),ga$1=function(e){return function(t){var n=String(pe$6(t));return 1&e&&(n=n.replace(ha$1,"")),2&e&&(n=n.replace(pa$1,"")),n}},va$1={start:ga$1(1),end:ga$1(2),trim:ga$1(3)},ya$1=va$1.trim;Cn$3({target:"String",proto:!0,forced:function(e){return ue$6((function(){return !!fa$1[e]()||"​᠎"!="​᠎"[e]()||fa$1[e].name!==e}))}("trim")},{trim:function(){return ya$1(this)}});var ma$1=tt$6("species"),wa$1=function(e,t){var n,r=Me$6(e).constructor;return void 0===r||null==(n=Me$6(r)[ma$1])?t:se$6(n)},ba$1=Ri$1.UNSUPPORTED_Y,xa$1=[].push,Sa$1=Math.min;Gi$1("split",2,(function(e,t,n){var r;return r="c"=="abbc".split(/(b)*/)[1]||4!="test".split(/(?:)/,-1).length||2!="ab".split(/(?:ab)*/).length||4!=".".split(/(.?)(.?)/).length||".".split(/()()/).length>1||"".split(/.?/).length?function(e,n){var r=String(pe$6(this)),o=void 0===n?4294967295:n>>>0;if(0===o)return [];if(void 0===e)return [r];if(!$n$3(e))return t.call(r,e,o);for(var i,a,s,l=[],u=(e.ignoreCase?"i":"")+(e.multiline?"m":"")+(e.unicode?"u":"")+(e.sticky?"y":""),c=0,f=new RegExp(e.source,u+"g");(i=Wi$1.call(f,r))&&!((a=f.lastIndex)>c&&(l.push(r.slice(c,i.index)),i.length>1&&i.index<r.length&&xa$1.apply(l,i.slice(1)),s=i[0].length,c=a,l.length>=o));)f.lastIndex===i.index&&f.lastIndex++;return c===r.length?!s&&f.test("")||l.push(""):l.push(r.slice(c)),l.length>o?l.slice(0,o):l}:"0".split(void 0,0).length?function(e,n){return void 0===e&&0===n?[]:t.call(this,e,n)}:t,[function(t,n){var o=pe$6(this),i=null==t?void 0:t[e];return void 0!==i?i.call(t,o,n):r.call(String(o),t,n)},function(e,o){var i=n(r,e,this,o,r!==t);if(i.done)return i.value;var a=Me$6(e),s=String(this),l=wa$1(a,RegExp),u=a.unicode,c=(a.ignoreCase?"i":"")+(a.multiline?"m":"")+(a.unicode?"u":"")+(ba$1?"g":"y"),f=new l(ba$1?"^(?:"+a.source+")":a,c),d=void 0===o?4294967295:o>>>0;if(0===d)return [];if(0===s.length)return null===ra$1(f,s)?[s]:[];for(var h=0,p=0,g=[];p<s.length;){f.lastIndex=ba$1?0:p;var v,y=ra$1(f,ba$1?s.slice(p):s);if(null===y||(v=Sa$1(be$6(f.lastIndex+(ba$1?p:0)),s.length))===h)p=Xi$1(s,p,u);else {if(g.push(s.slice(h,p)),g.length===d)return g;for(var m=1;m<=y.length-1;m++)if(g.push(y[m]),g.length===d)return g;p=h=v;}}return g.push(s.slice(h)),g}]}),ba$1);var ka$1=function(t){var n=t,r=n.insertText,i=n.insertFragment;return n.setFragmentData=function(t){var r=n.selection;if(r){var i=Vr$2(Range.edges(r),2),a=i[0],s=i[1],l=Editor.void(n,{at:a.path}),u=Editor.void(n,{at:s.path});if(!Range.isCollapsed(r)||l){var c=fi$1.toDOMRange(n,r),f=c.cloneContents(),d=f.childNodes[0];if(f.childNodes.forEach((function(e){e.textContent&&""!==e.textContent.trim()&&(d=e);})),u){var h=Vr$2(u,1)[0],p=c.cloneRange(),g=fi$1.toDOMNode(n,h);p.setEndAfter(g),f=p.cloneContents();}if(l&&(d=f.querySelector("[data-slate-spacer]")),Array.from(f.querySelectorAll("[data-slate-zero-width]")).forEach((function(e){var t="n"===e.getAttribute("data-slate-zero-width");e.textContent=t?"\n":"";})),Zo$1(d)){var v=document.createElement("span");v.style.whiteSpace="pre",v.appendChild(d),f.appendChild(v),d=v;}var y=n.getFragment(),m=JSON.stringify(y),w=window.btoa(encodeURIComponent(m));d.setAttribute("data-slate-fragment",w),t.setData("application/x-slate-fragment",w);var b=document.createElement("div");b.appendChild(f),b.setAttribute("hidden","true"),document.body.appendChild(b),t.setData("text/html",b.innerHTML),t.setData("text/plain",ni$1(b)),document.body.removeChild(b);}}},n.insertData=function(e){var t,o,i=e.getData("application/x-slate-fragment");if(i){var a=decodeURIComponent(window.atob(i)),l=JSON.parse(a);n.insertFragment(l);}else {var u=e.getData("text/plain");if(u){var c=u.split(/\r\n|\r|\n/),f=!1;try{for(var d=zr$2(c),h=d.next();!h.done;h=d.next()){var p=h.value;if(fi$1.checkMaxLength(n,p))return;f&&Transforms.splitNodes(n,{always:!0}),r(p),f=!0;}}catch(e){t={error:e};}finally{try{h&&!h.done&&(o=d.return)&&o.call(d);}finally{if(t)throw t.error}}}}},n.insertFragment=function(e){var t=fi$1.getNodesStr(e);fi$1.checkMaxLength(n,t)||i(e);},n},Ea$1=tt$6("species"),Oa$1=function(e){var t=Ue$5(e),n=Te$6.f;ke$6&&t&&!t[Ea$1]&&n(t,Ea$1,{configurable:!0,get:function(){return this}});},Ca$1=Te$6.f,Na$1=Qr$2.fastKey,Ma$1=$t$5.set,La$1=$t$5.getterFor;no$1("Set",(function(e){return function(){return e(this,arguments.length?arguments[0]:void 0)}}),{getConstructor:function(e,t,n,r){var o=e((function(e,i){to$1(e,o,t),Ma$1(e,{type:t,index:Rn$3(null),first:void 0,last:void 0,size:0}),ke$6||(e.size=0),null!=i&&eo$1(i,e[r],{that:e,AS_ENTRIES:n});})),i=La$1(t),a=function(e,t,n){var r,o,a=i(e),l=s(e,t);return l?l.value=n:(a.last=l={index:o=Na$1(t,!0),key:t,value:n,previous:r=a.last,next:void 0,removed:!1},a.first||(a.first=l),r&&(r.next=l),ke$6?a.size++:e.size++,"F"!==o&&(a.index[o]=l)),e},s=function(e,t){var n,r=i(e),o=Na$1(t);if("F"!==o)return r.index[o];for(n=r.first;n;n=n.next)if(n.key==t)return n};return Yr$2(o.prototype,{clear:function(){for(var e=i(this),t=e.index,n=e.first;n;)n.removed=!0,n.previous&&(n.previous=n.previous.next=void 0),delete t[n.index],n=n.next;e.first=e.last=void 0,ke$6?e.size=0:this.size=0;},delete:function(e){var t=this,n=i(t),r=s(t,e);if(r){var o=r.next,a=r.previous;delete n.index[r.index],r.removed=!0,a&&(a.next=o),o&&(o.previous=a),n.first==r&&(n.first=o),n.last==r&&(n.last=a),ke$6?n.size--:t.size--;}return !!r},forEach:function(e){for(var t,n=i(this),r=le$6(e,arguments.length>1?arguments[1]:void 0,3);t=t?t.next:n.first;)for(r(t.value,t.key,this);t&&t.removed;)t=t.previous;},has:function(e){return !!s(this,e)}}),Yr$2(o.prototype,n?{get:function(e){var t=s(this,e);return t&&t.value},set:function(e,t){return a(this,0===e?0:e,t)}}:{add:function(e){return a(this,e=0===e?0:e,e)}}),ke$6&&Ca$1(o.prototype,"size",{get:function(){return i(this).size}}),o},setStrong:function(e,t,n){var r=t+" Iterator",o=La$1(t),i=La$1(r);Mr$2(e,t,(function(e,t){Ma$1(this,{type:r,target:e,state:o(e),kind:t,last:void 0});}),(function(){for(var e=i(this),t=e.kind,n=e.last;n&&n.removed;)n=n.previous;return e.target&&(e.last=n=n?n.next:e.state.first)?"keys"==t?{value:n.key,done:!1}:"values"==t?{value:n.value,done:!1}:{value:[n.key,n.value],done:!1}:(e.target=void 0,{value:void 0,done:!0})}),n?"entries":"values",!n,!0),Oa$1(t);}});var Pa$1=function(e){return null!=e},Ta$1={object:!0,function:!0,undefined:!0},Da$1=function(e){if(!function(e){return !!Pa$1(e)&&hasOwnProperty.call(Ta$1,typeof e)}(e))return !1;try{return !!e.constructor&&e.constructor.prototype===e}catch(e){return !1}},ja$1=/^\s*class[\s{/}]/,Ra$1=Function.prototype.toString,Aa$1=function(e){return !!function(e){if("function"!=typeof e)return !1;if(!hasOwnProperty.call(e,"length"))return !1;try{if("number"!=typeof e.length)return !1;if("function"!=typeof e.call)return !1;if("function"!=typeof e.apply)return !1}catch(e){return !1}return !Da$1(e)}(e)&&!ja$1.test(Ra$1.call(e))},Fa$1=function(e){return null!=e},Ia$1=Object.keys,Ba$1=function(){try{return Object.keys("primitive"),!0}catch(e){return !1}}()?Object.keys:function(e){return Ia$1(Fa$1(e)?Object(e):e)},_a$1=function(e){if(!Fa$1(e))throw new TypeError("Cannot use null or undefined");return e},$a$1=Math.max,Wa$1=function(){var e,t=Object.assign;return "function"==typeof t&&(t(e={foo:"raz"},{bar:"dwa"},{trzy:"trzy"}),e.foo+e.bar+e.trzy==="razdwatrzy")}()?Object.assign:function(e,t){var n,r,o,i=$a$1(arguments.length,2);for(e=Object(_a$1(e)),o=function(r){try{e[r]=t[r];}catch(e){n||(n=e);}},r=1;r<i;++r)Ba$1(t=arguments[r]).forEach(o);if(void 0!==n)throw n;return e},za$1=Array.prototype.forEach,Va$1=Object.create,Ua$1=function(e,t){var n;for(n in e)t[n]=e[n];},Ka$1=function(e){var t=Va$1(null);return za$1.call(arguments,(function(e){Fa$1(e)&&Ua$1(Object(e),t);})),t},Ha$1="razdwatrzy",qa$1=String.prototype.indexOf,Ja$1="function"==typeof Ha$1.contains&&!0===Ha$1.contains("dwa")&&!1===Ha$1.contains("foo")?String.prototype.contains:function(e){return qa$1.call(this,e,arguments[1])>-1},Ga$1=te$6((function(e){(e.exports=function(e,t){var n,r,o,i,a;return arguments.length<2||"string"!=typeof e?(i=t,t=e,e=null):i=arguments[2],Pa$1(e)?(n=Ja$1.call(e,"c"),r=Ja$1.call(e,"e"),o=Ja$1.call(e,"w")):(n=o=!0,r=!1),a={value:t,configurable:n,enumerable:r,writable:o},i?Wa$1(Ka$1(i),a):a}).gs=function(e,t,n){var r,o,i,a;return "string"!=typeof e?(i=n,n=t,t=e,e=null):i=arguments[3],Pa$1(t)?Aa$1(t)?Pa$1(n)?Aa$1(n)||(i=n,n=void 0):n=void 0:(i=t,t=n=void 0):t=void 0,Pa$1(e)?(r=Ja$1.call(e,"c"),o=Ja$1.call(e,"e")):(r=!0,o=!1),a={get:t,set:n,configurable:r,enumerable:o},i?Wa$1(Ka$1(i),a):a};})),Ya$1=function(e){if("function"!=typeof e)throw new TypeError(e+" is not a function");return e},Xa$1=te$6((function(e,t){var n,r,o,i,a,s,l,u=Function.prototype.apply,c=Function.prototype.call,f=Object.create,d=Object.defineProperty,h=Object.defineProperties,p=Object.prototype.hasOwnProperty,g={configurable:!0,enumerable:!1,writable:!0};r=function(e,t){var r,i;return Ya$1(t),i=this,n.call(this,e,r=function(){o.call(i,e,r),u.call(t,this,arguments);}),r.__eeOnceListener__=t,this},a={on:n=function(e,t){var n;return Ya$1(t),p.call(this,"__ee__")?n=this.__ee__:(n=g.value=f(null),d(this,"__ee__",g),g.value=null),n[e]?"object"==typeof n[e]?n[e].push(t):n[e]=[n[e],t]:n[e]=t,this},once:r,off:o=function(e,t){var n,r,o,i;if(Ya$1(t),!p.call(this,"__ee__"))return this;if(!(n=this.__ee__)[e])return this;if("object"==typeof(r=n[e]))for(i=0;o=r[i];++i)o!==t&&o.__eeOnceListener__!==t||(2===r.length?n[e]=r[i?0:1]:r.splice(i,1));else r!==t&&r.__eeOnceListener__!==t||delete n[e];return this},emit:i=function(e){var t,n,r,o,i;if(p.call(this,"__ee__")&&(o=this.__ee__[e]))if("object"==typeof o){for(n=arguments.length,i=new Array(n-1),t=1;t<n;++t)i[t-1]=arguments[t];for(o=o.slice(),t=0;r=o[t];++t)u.call(r,this,i);}else switch(arguments.length){case 1:c.call(o,this);break;case 2:c.call(o,this,arguments[1]);break;case 3:c.call(o,this,arguments[1],arguments[2]);break;default:for(n=arguments.length,i=new Array(n-1),t=1;t<n;++t)i[t-1]=arguments[t];u.call(o,this,i);}}},s={on:Ga$1(n),once:Ga$1(r),off:Ga$1(o),emit:Ga$1(i)},l=h({},s),e.exports=t=function(e){return null==e?f(l):h(Object(e),s)},t.methods=a;}));function Qa$1(e){var t=Uo$1.get(e);return null==t&&(t=Xa$1(),Uo$1.set(e,t)),t}var Za$1=new WeakMap;function es(e,t){var n=Za$1.get(e);null==n&&(n=new Set,Za$1.set(e,n)),n.add(t);}var ts=function(e){var t=e;return t.on=function(e,n){var r=Qa$1(t);if(r.on(e,n),"destroyed"===e&&es(t,n),"destroyed"!==e){var o=function(){return r.off(e,n)};r.on("destroyed",o),es(t,o);}},t.once=function(e,n){Qa$1(t).once(e,n);},t.off=function(e,n){Qa$1(t).off(e,n);},t.emit=function(e){var n=Qa$1(t);(n.emit(e),"destroyed"===e)&&(function(e){return Za$1.get(e)||new Set}(t).forEach((function(e){return n.off("destroyed",e)})),function(e){Za$1.set(e,new Set);}(t));},t},ns=Fr$2("slice"),rs=tt$6("species"),os=[].slice,is=Math.max;Cn$3({target:"Array",proto:!0,forced:!ns},{slice:function(e,t){var n,r,o,i=tn$3(this),a=be$6(i.length),s=sn$3(e,a),l=sn$3(void 0===t?a:t,a);if(Se$6(i)&&("function"!=typeof(n=i.constructor)||n!==Array&&!Se$6(n.prototype)?xe$6(n)&&null===(n=n[rs])&&(n=void 0):n=void 0,n===Array||void 0===n))return os.call(i,s,l);for(r=new(void 0===n?Array:n)(is(l-s,0)),o=0;s<l;s++,o++)s in i&&Xn$2(r,o,i[s]);return r.length=o,r}});var as,ss,ls,us=ie$6.Promise,cs=/(?:iphone|ipod|ipad).*applewebkit/i.test(Ke$5),fs="process"==fe$6(ie$6.process),ds=ie$6.location,hs=ie$6.setImmediate,ps=ie$6.clearImmediate,gs=ie$6.process,vs=ie$6.MessageChannel,ys=ie$6.Dispatch,ms=0,ws={},bs=function(e){if(ws.hasOwnProperty(e)){var t=ws[e];delete ws[e],t();}},xs=function(e){return function(){bs(e);}},Ss=function(e){bs(e.data);},ks=function(e){ie$6.postMessage(e+"",ds.protocol+"//"+ds.host);};hs&&ps||(hs=function(e){for(var t=[],n=1;arguments.length>n;)t.push(arguments[n++]);return ws[++ms]=function(){("function"==typeof e?e:Function(e)).apply(void 0,t);},as(ms),ms},ps=function(e){delete ws[e];},fs?as=function(e){gs.nextTick(xs(e));}:ys&&ys.now?as=function(e){ys.now(xs(e));}:vs&&!cs?(ls=(ss=new vs).port2,ss.port1.onmessage=Ss,as=le$6(ls.postMessage,ls,1)):ie$6.addEventListener&&"function"==typeof postMessage&&!ie$6.importScripts&&ds&&"file:"!==ds.protocol&&!ue$6(ks)?(as=ks,ie$6.addEventListener("message",Ss,!1)):as="onreadystatechange"in Ce$5("script")?function(e){Ln$3.appendChild(Ce$5("script")).onreadystatechange=function(){Ln$3.removeChild(this),bs(e);};}:function(e){setTimeout(xs(e),0);});var Es,Os,Cs,Ns,Ms,Ls,Ps,Ts,Ds={set:hs,clear:ps},js=/web0s(?!.*chrome)/i.test(Ke$5),Rs=rn$3.f,As=Ds.set,Fs=ie$6.MutationObserver||ie$6.WebKitMutationObserver,Is=ie$6.document,Bs=ie$6.process,_s=ie$6.Promise,$s=Rs(ie$6,"queueMicrotask"),Ws=$s&&$s.value;Ws||(Es=function(){var e,t;for(fs&&(e=Bs.domain)&&e.exit();Os;){t=Os.fn,Os=Os.next;try{t();}catch(e){throw Os?Ns():Cs=void 0,e}}Cs=void 0,e&&e.enter();},cs||fs||js||!Fs||!Is?_s&&_s.resolve?((Ps=_s.resolve(void 0)).constructor=_s,Ts=Ps.then,Ns=function(){Ts.call(Ps,Es);}):Ns=fs?function(){Bs.nextTick(Es);}:function(){As.call(ie$6,Es);}:(Ms=!0,Ls=Is.createTextNode(""),new Fs(Es).observe(Ls,{characterData:!0}),Ns=function(){Ls.data=Ms=!Ms;}));var zs,Vs,Us,Ks,Hs=Ws||function(e){var t={fn:e,next:void 0};Cs&&(Cs.next=t),Os||(Os=t,Ns()),Cs=t;},qs=function(e){var t,n;this.promise=new e((function(e,r){if(void 0!==t||void 0!==n)throw TypeError("Bad Promise constructor");t=e,n=r;})),this.resolve=se$6(t),this.reject=se$6(n);},Js={f:function(e){return new qs(e)}},Gs=function(e){try{return {error:!1,value:e()}}catch(e){return {error:!0,value:e}}},Ys="object"==typeof window,Xs=Ds.set,Qs=tt$6("species"),Zs="Promise",el$1=$t$5.get,tl$1=$t$5.set,nl$1=$t$5.getterFor(Zs),rl$1=us&&us.prototype,ol$1=us,il$1=rl$1,al$1=ie$6.TypeError,sl$1=ie$6.document,ll$1=ie$6.process,ul$1=Js.f,cl$1=ul$1,fl$1=!!(sl$1&&sl$1.createEvent&&ie$6.dispatchEvent),dl$1="function"==typeof PromiseRejectionEvent,hl$1=!1,pl$1=En$3(Zs,(function(){var e=Mt$6(ol$1)!==String(ol$1);if(!e&&66===Ge$5)return !0;if(Ge$5>=51&&/native code/.test(ol$1))return !1;var t=new ol$1((function(e){e(1);})),n=function(e){e((function(){}),(function(){}));};return (t.constructor={})[Qs]=n,!(hl$1=t.then((function(){}))instanceof n)||!e&&Ys&&!dl$1})),gl$1=pl$1||!or$3((function(e){ol$1.all(e).catch((function(){}));})),vl$1=function(e){var t;return !(!xe$6(e)||"function"!=typeof(t=e.then))&&t},yl$1=function(e,t){if(!e.notified){e.notified=!0;var n=e.reactions;Hs((function(){for(var r=e.value,o=1==e.state,i=0;n.length>i;){var a,s,l,u=n[i++],c=o?u.ok:u.fail,f=u.resolve,d=u.reject,h=u.domain;try{c?(o||(2===e.rejection&&xl$1(e),e.rejection=1),!0===c?a=r:(h&&h.enter(),a=c(r),h&&(h.exit(),l=!0)),a===u.promise?d(al$1("Promise-chain cycle")):(s=vl$1(a))?s.call(a,f,d):f(a)):d(r);}catch(e){h&&!l&&h.exit(),d(e);}}e.reactions=[],e.notified=!1,t&&!e.rejection&&wl$1(e);}));}},ml$1=function(e,t,n){var r,o;fl$1?((r=sl$1.createEvent("Event")).promise=t,r.reason=n,r.initEvent(e,!1,!0),ie$6.dispatchEvent(r)):r={promise:t,reason:n},!dl$1&&(o=ie$6["on"+e])?o(r):"unhandledrejection"===e&&function(e,t){var n=ie$6.console;n&&n.error&&(1===arguments.length?n.error(e):n.error(e,t));}("Unhandled promise rejection",n);},wl$1=function(e){Xs.call(ie$6,(function(){var t,n=e.facade,r=e.value;if(bl$1(e)&&(t=Gs((function(){fs?ll$1.emit("unhandledRejection",r,n):ml$1("unhandledrejection",n,r);})),e.rejection=fs||bl$1(e)?2:1,t.error))throw t.value}));},bl$1=function(e){return 1!==e.rejection&&!e.parent},xl$1=function(e){Xs.call(ie$6,(function(){var t=e.facade;fs?ll$1.emit("rejectionHandled",t):ml$1("rejectionhandled",t,e.value);}));},Sl$1=function(e,t,n){return function(r){e(t,r,n);}},kl$1=function(e,t,n){e.done||(e.done=!0,n&&(e=n),e.value=t,e.state=2,yl$1(e,!0));},El$1=function(e,t,n){if(!e.done){e.done=!0,n&&(e=n);try{if(e.facade===t)throw al$1("Promise can't be resolved itself");var r=vl$1(t);r?Hs((function(){var n={done:!1};try{r.call(t,Sl$1(El$1,n,e),Sl$1(kl$1,n,e));}catch(t){kl$1(n,t,e);}})):(e.value=t,e.state=1,yl$1(e,!1));}catch(t){kl$1({done:!1},t,e);}}};if(pl$1&&(il$1=(ol$1=function(e){to$1(this,ol$1,Zs),se$6(e),zs.call(this);var t=el$1(this);try{e(Sl$1(El$1,t),Sl$1(kl$1,t));}catch(e){kl$1(t,e);}}).prototype,(zs=function(e){tl$1(this,{type:Zs,done:!1,notified:!1,parent:!1,reactions:[],rejection:!1,state:0,value:void 0});}).prototype=Yr$2(il$1,{then:function(e,t){var n=nl$1(this),r=ul$1(wa$1(this,ol$1));return r.ok="function"!=typeof e||e,r.fail="function"==typeof t&&t,r.domain=fs?ll$1.domain:void 0,n.parent=!0,n.reactions.push(r),0!=n.state&&yl$1(n,!1),r.promise},catch:function(e){return this.then(void 0,e)}}),Vs=function(){var e=new zs,t=el$1(e);this.promise=e,this.resolve=Sl$1(El$1,t),this.reject=Sl$1(kl$1,t);},Js.f=ul$1=function(e){return e===ol$1||e===Us?new Vs(e):cl$1(e)},"function"==typeof us&&rl$1!==Object.prototype)){Ks=rl$1.then,hl$1||(Wt$5(rl$1,"then",(function(e,t){var n=this;return new ol$1((function(e,t){Ks.call(n,e,t);})).then(e,t)}),{unsafe:!0}),Wt$5(rl$1,"catch",il$1.catch,{unsafe:!0}));try{delete rl$1.constructor;}catch(e){}kr$2&&kr$2(rl$1,il$1);}function Ol$1(e){Promise.resolve().then(e);}function Cl$1(e){var t=fi$1.getTextarea(e).$textAreaContainer,n=t.width(),r=t.height(),o=t.offset();return {top:o.top,left:o.left,width:n,height:r}}function Nl$1(e){var t={top:"0",left:"0"},n=e.selection;if(null==n)return t;var r=Cl$1(e);if(null==r)return t;var o=r.top,i=r.left,a=r.width,s=r.height,l=fi$1.toDOMRange(e,n).getClientRects()[0];if(null==l)return t;l.width;var u=l.height,c={},f=l.top-o,d=l.left-i;if(d>a/2){var h=a-d;c.right=h+5+"px";}else c.left=d+5+"px";if(f>s/2){var p=s-f;c.bottom=p+5+"px";}else {var g=f+u;g<0&&(g=0),c.top=g+5+"px";}return c}function Ml$1(e,t,n){void 0===n&&(n="modal");var r={top:"0",left:"0"};if(null==e.selection)return r;var o=Element$1.isElement(t)&&e.isVoid(t),a=Bo$1.get(t);if(null==a)return r;var s=a.getBoundingClientRect(),l=s.top,u=s.left,c=s.height,f=s.width;if(o){var d=function(e){var t=[];t.push(e);for(var n=0;t.length>0;){var r=t.pop();if(null==r)break;if(++n>1e4)break;var o=r.nodeName;if(1===r.nodeType){var i=o.toLowerCase();if(Jo$1.includes(i)||"iframe"===i||"video"===i)return r;var a=r.children||[],s=a.length;if(s)for(var l=s-1;l>=0;l--)t.push(a[l]);}}return null}(a);if(null!=d){var h=d.getBoundingClientRect();l=h.top,c=h.height;}}var p=Cl$1(e);if(null==p)return r;var g=p.top,v=p.left,y=p.width,m=p.height,w={},b=l-g,x=u-v;if("bar"===n)return w.left=x+"px",b>40?w.bottom=m-b+5+"px":w.top=b+c+5+"px",w;if("modal"===n){var S;if(o?x>(y-f)/2?w.right=y-x+5+"px":w.left=x+f+5+"px":w.left=x+"px",o)(S=b)<0&&(S=0),w.top=S+"px";else if(b>(m-c)/2)w.bottom=m-b+5+"px";else (S=b+c)<0&&(S=0),w.top=S+5+"px";return w}throw new Error("type '"+n+"' is invalid")}function Ll$1(e,t){Ol$1((function(){var n=Cl$1(e);if(null!=n){var r,o=n.top,i=n.left,a=n.width,s=n.height,l=t.offset(),u=l.top,c=l.left,f=t.width(),d=t.height(),h=u-o,p=c-i,g=t.attr("style");if(g.indexOf("top")>=0)if((r=h+d-s)>0){var v=t.css("top"),y=parseInt(v.toString())-r;y<0&&(y=0),t.css("top",y+"px");}if(g.indexOf("bottom")>=0&&u<0){var m=t.css("bottom"),w=parseInt(m.toString())-Math.abs(u);t.css("bottom",w+"px");}if(g.indexOf("left")>=0)if((r=p+f-a)>0){var b=t.css("left"),x=parseInt(b.toString())-r;x<0&&(x=0),t.css("left",x+"px");}if(g.indexOf("right")>=0&&c<0){var S=t.css("right"),k=parseInt(S.toString())-Math.abs(c);t.css("right",k+"px");}}}));}Cn$3({global:!0,wrap:!0,forced:pl$1},{Promise:ol$1}),br$2(ol$1,Zs,!1),Oa$1(Zs),Us=Ue$5(Zs),Cn$3({target:Zs,stat:!0,forced:pl$1},{reject:function(e){var t=ul$1(this);return t.reject.call(void 0,e),t.promise}}),Cn$3({target:Zs,stat:!0,forced:pl$1},{resolve:function(e){return function(e,t){if(Me$6(e),xe$6(t)&&t.constructor===e)return t;var n=Js.f(e);return (0, n.resolve)(t),n.promise}(this,e)}}),Cn$3({target:Zs,stat:!0,forced:gl$1},{all:function(e){var t=this,n=ul$1(t),r=n.resolve,o=n.reject,i=Gs((function(){var n=se$6(t.resolve),i=[],a=0,s=1;eo$1(e,(function(e){var l=a++,u=!1;i.push(void 0),s++,n.call(t,e).then((function(e){u||(u=!0,i[l]=e,--s||r(i));}),o);})),--s||r(i);}));return i.error&&o(i.value),n.promise},race:function(e){var t=this,n=ul$1(t),r=n.reject,o=Gs((function(){var o=se$6(t.resolve);eo$1(e,(function(e){o.call(t,e).then(n.resolve,r);}));}));return o.error&&r(o.value),n.promise}});var Pl$1=ue$6((function(){Nn$3(1);}));Cn$3({target:"Object",stat:!0,forced:Pl$1},{keys:function(e){return Nn$3(ge$6(e))}});var Tl$1,Dl$1=rn$3.f,jl$1="".startsWith,Rl$1=Math.min,Al$1=Vn$3("startsWith"),Fl$1=!(Al$1||(Tl$1=Dl$1(String.prototype,"startsWith"),!Tl$1||Tl$1.writable));Cn$3({target:"String",proto:!0,forced:!Fl$1&&!Al$1},{startsWith:function(e){var t=String(pe$6(this));Wn$3(e);var n=be$6(Rl$1(arguments.length>1?arguments[1]:void 0,t.length)),r=String(e);return jl$1?jl$1.call(t,r,n):t.slice(n,n+r.length)===r}});var Il$1=Object.assign,Bl$1=Object.defineProperty,_l$1=!Il$1||ue$6((function(){if(ke$6&&1!==Il$1({b:1},Il$1(Bl$1({},"a",{enumerable:!0,get:function(){Bl$1(this,"b",{value:3,enumerable:!1});}}),{b:2})).b)return !0;var e={},t={},n=Symbol(),r="abcdefghijklmnopqrst";return e[n]=7,r.split("").forEach((function(e){t[e]=e;})),7!=Il$1({},e)[n]||Nn$3(Il$1({},t)).join("")!=r}))?function(e,t){for(var n=ge$6(e),r=arguments.length,o=1,i=gn$3.f,a=en$3.f;r>o;)for(var s,l=he$6(arguments[o++]),u=i?Nn$3(l).concat(i(l)):Nn$3(l),c=u.length,f=0;c>f;)s=u[f++],ke$6&&!a.call(l,s)||(n[s]=l[s]);return n}:Il$1;Cn$3({target:"Object",stat:!0,forced:Object.assign!==_l$1},{assign:_l$1});var $l$1=["props","attrs","style","dataset","on","hook"];function Wl$1(e){var t=e.data,n=void 0===t?{}:t,r=e.children,o=void 0===r?[]:r;Object.keys(n).forEach((function(t){var r,o,i=n[t];if("key"!==t){if(!$l$1.includes(t)){if(t.startsWith("data-")){var a=t.slice(5);return a=lodash_camelcase(a),function(e,t){null==e.data&&(e.data={});var n=e.data;null==n.dataset&&(n.dataset={});Object.assign(n.dataset,t);}(e,((r={})[a]=i,r)),void delete n[t]}!function(e,t){null==e.data&&(e.data={});var n=e.data;null==n.props&&(n.props={});Object.assign(n.props,t);}(e,(o={},o[t]=i,o)),delete n[t];}}else e.key=i;})),o.length>0&&o.forEach((function(e){"string"!=typeof e&&Wl$1(e);}));}var zl$1=[];function Vl$1(e){zl$1.push(e);}var Ul$1={};function Kl$1(e){var t=e.type,n=e.renderElem;Ul$1[t||""]=n;}function Hl$1(e,t,n){var r=n.isInline(e)?"span":"div";return jsx(r,null,t)}function ql$1(t,n){var o,i=fi$1.findKey(n,t),a=n.isInline(t),s=Editor.isVoid(n,t),l=sa$1(i.id),u={id:l,key:i.id,"data-slate-node":"element","data-slate-inline":a},c=t.type,f=t.children,d=void 0===f?[]:f,h=function(e){return Ul$1[e]||Hl$1}(c);o=s?null:d.map((function(e,r){return Xl(e,r,t,n)}));var p=h(t,o,n);if(s){u["data-slate-void"]=!0;var g=a?"span":"div",v=Vr$2(Node$1.texts(t),1),y=Vr$2(v[0],1)[0],m=Xl(y,0,t,n),w=jsx(g,{"data-slate-spacer":!0,style:{height:"0",color:"transparent",outline:"none",position:"absolute"}},m);p=jsx(g,null,p,w),jo$1.set(y,0),Ro$1.set(y,t);}return null==p.data&&(p.data={}),Object.assign(p.data,u),s||a||(p=function(e,t){var n=t;return zl$1.forEach((function(r){n=r(e,t);})),n}(t,p)),Ol$1((function(){var e=document.getElementById(l);null!=e&&(Io$1.set(i,e),Bo$1.set(t,e),Fo$1.set(e,t));})),p}function Jl(e,t){return void 0===t&&(t=!1),jsx("span",{"data-slate-string":!0},e,t?"\n":null)}function Gl$1(e,t){return void 0===e&&(e=0),void 0===t&&(t=!1),jsx("span",{"data-slate-zero-width":t?"n":"z","data-slate-length":e},"\ufeff",t?jsx("br",null):null)}function Yl$1(t,o,i){if(null==t.text)throw new Error("Current node is not slate Text "+JSON.stringify(t));var s=fi$1.findKey(i,t),l=i.getConfig().decorate;if(null==l)throw new Error("Can not get config.decorate");var u=fi$1.findPath(i,t),c=l([t,u]),f=Text.decorations(t,c),d=f.map((function(a,s){var l=function(t,o,i,a,s){void 0===o&&(o=!1);var l=t.text,u=fi$1.findPath(s,i),c=Path.parent(u);if(Editor.isEditor(a))throw new Error("Text node "+JSON.stringify(i)+" parent is Editor");return s.isVoid(a)?Gl$1(Node$1.string(a).length):""!==l||a.children[a.children.length-1]!==i||s.isInline(a)||""!==Editor.string(s,c)?""===l?Gl$1():o&&"\n"===l.slice(-1)?Jl(l,!0):Jl(l):Gl$1(0,!0)}(a,s===f.length-1,t,o,i);return l=function(e,t){var n=t;return zl$1.forEach((function(t){n=t(e,n);})),n}(a,l),jsx("span",{"data-slate-leaf":!0},l)})),h=function(e){return "w-e-text-"+e}(s.id),p=jsx("span",{"data-slate-node":"text",id:h,key:s.id},d);return Ol$1((function(){var e=document.getElementById(h);null!=e&&(Io$1.set(s,e),Bo$1.set(t,e),Fo$1.set(e,t));})),p}function Xl(e,t,n,r){return jo$1.set(e,t),Ro$1.set(e,n),Element$1.isElement(e)?ql$1(e,r):Yl$1(e,n,r)}function Ql(e,t){var n,r=e.$scroll,o=function(e){return "w-e-textarea-"+e}(e.id),i=t.getConfig(),a=i.readOnly,s=i.autoFocus,l=function(e,t){return void 0===t&&(t=!1),h$4("div#"+e,{props:{contentEditable:!t}})}(o,a),u=t.children||[];l.children=u.map((function(e,n){var r=Xl(e,n,t,t);return Wl$1(r),r}));var c=Po$1.get(e);if(null==c&&(c=!0),c){var d=function(e,t){return $$6('<div\n        id="'+e+'"\n        data-slate-editor\n        data-slate-node="value"\n        suppressContentEditableWarning\n        data-gramm="false"\n        role="textarea"\n        spellCheck="true"\n        autoCorrect="true"\n        autoCapitalize="true"\n    ></div>')}(o);r.append(d),e.$textArea=d,n=d[0],(p=init([classModule,propsModule,styleModule,datasetModule,eventListenersModule]))(n,l),Po$1.set(e,!1),To$1.set(e,p);}else {var h=Do$1.get(e),p=To$1.get(e);if(null==h||null==p)return;p(h,l);}if(null!=n||null!=(n=document.getElementById(o))){if((c?s:t.isFocused())&&n.focus({preventScroll:!0}),c){var g=Go$1(n);g&&$o$1.set(t,g);}Ao$1.set(t,n),Bo$1.set(t,n),Fo$1.set(n,t),Do$1.set(e,l);}}function Zl(e){return "object"==typeof e&&null!=e&&1===e.nodeType}function eu$1(e,t){return (!t||"hidden"!==e)&&"visible"!==e&&"clip"!==e}function tu$1(e,t){if(e.clientHeight<e.scrollHeight||e.clientWidth<e.scrollWidth){var n=getComputedStyle(e,null);return eu$1(n.overflowY,t)||eu$1(n.overflowX,t)||function(e){var t=function(e){if(!e.ownerDocument||!e.ownerDocument.defaultView)return null;try{return e.ownerDocument.defaultView.frameElement}catch(e){return null}}(e);return !!t&&(t.clientHeight<e.scrollHeight||t.clientWidth<e.scrollWidth)}(e)}return !1}function nu$1(e,t,n,r,o,i,a,s){return i<e&&a>t||i>e&&a<t?0:i<=e&&s<=n||a>=t&&s>=n?i-e-r:a>t&&s<n||i<e&&s>n?a-t+o:0}function ru$1(e,t){var n=window,r=t.scrollMode,o=t.block,i=t.inline,a=t.boundary,s=t.skipOverflowHiddenElements,l="function"==typeof a?a:function(e){return e!==a};if(!Zl(e))throw new TypeError("Invalid target");for(var u=document.scrollingElement||document.documentElement,c=[],f=e;Zl(f)&&l(f);){if((f=f.parentElement)===u){c.push(f);break}null!=f&&f===document.body&&tu$1(f)&&!tu$1(document.documentElement)||null!=f&&tu$1(f,s)&&c.push(f);}for(var d=n.visualViewport?n.visualViewport.width:innerWidth,h=n.visualViewport?n.visualViewport.height:innerHeight,p=window.scrollX||pageXOffset,g=window.scrollY||pageYOffset,v=e.getBoundingClientRect(),y=v.height,m=v.width,w=v.top,b=v.right,x=v.bottom,S=v.left,k="start"===o||"nearest"===o?w:"end"===o?x:w+y/2,E="center"===i?S+m/2:"end"===i?b:S,O=[],C=0;C<c.length;C++){var N=c[C],M=N.getBoundingClientRect(),L=M.height,P=M.width,T=M.top,D=M.right,j=M.bottom,R=M.left;if("if-needed"===r&&w>=0&&S>=0&&x<=h&&b<=d&&w>=T&&x<=j&&S>=R&&b<=D)return O;var A=getComputedStyle(N),F=parseInt(A.borderLeftWidth,10),I=parseInt(A.borderTopWidth,10),B=parseInt(A.borderRightWidth,10),_=parseInt(A.borderBottomWidth,10),$=0,W=0,z="offsetWidth"in N?N.offsetWidth-N.clientWidth-F-B:0,V="offsetHeight"in N?N.offsetHeight-N.clientHeight-I-_:0;if(u===N)$="start"===o?k:"end"===o?k-h:"nearest"===o?nu$1(g,g+h,h,I,_,g+k,g+k+y,y):k-h/2,W="start"===i?E:"center"===i?E-d/2:"end"===i?E-d:nu$1(p,p+d,d,F,B,p+E,p+E+m,m),$=Math.max(0,$+g),W=Math.max(0,W+p);else {$="start"===o?k-T-I:"end"===o?k-j+_+V:"nearest"===o?nu$1(T,j,L,I,_+V,k,k+y,y):k-(T+L/2)+V/2,W="start"===i?E-R-F:"center"===i?E-(R+P/2)+z/2:"end"===i?E-D+B+z:nu$1(R,D,P,F,B+z,E,E+m,m);var U=N.scrollLeft,K=N.scrollTop;k+=K-($=Math.max(0,Math.min(K+$,N.scrollHeight-L+V))),E+=U-(W=Math.max(0,Math.min(U+W,N.scrollWidth-P+z)));}O.push({el:N,top:$,left:W});}return O}function ou$1(e){return e===Object(e)&&0!==Object.keys(e).length}function iu$1(e,t){var n=!e.ownerDocument.documentElement.contains(e);if(ou$1(t)&&"function"==typeof t.behavior)return t.behavior(n?[]:ru$1(e,t));if(!n){var r=function(e){return !1===e?{block:"end",inline:"nearest"}:ou$1(e)?e:{block:"start",inline:"nearest"}}(t);return function(e,t){void 0===t&&(t="auto");var n="scrollBehavior"in document.body.style;e.forEach((function(e){var r=e.el,o=e.top,i=e.left;r.scroll&&n?r.scroll({top:o,left:i,behavior:t}):(r.scrollTop=o,r.scrollLeft=i);}));}(ru$1(e,r),r.behavior)}}function au$1(e,t){return Xo$1(t)&&fi$1.hasDOMNode(e,t,{editable:!0})}function su$1(t,n){var r=lu$1(t,n)&&fi$1.toSlateNode(t,n);return Editor.isVoid(t,r)}function lu$1(e,t){return Xo$1(t)&&fi$1.hasDOMNode(e,t)}var uu$1=rn$3.f,cu$1="".endsWith,fu$1=Math.min,du$1=Vn$3("endsWith"),hu$1=!du$1&&!!function(){var e=uu$1(String.prototype,"endsWith");return e&&!e.writable}();Cn$3({target:"String",proto:!0,forced:!hu$1&&!du$1},{endsWith:function(e){var t=String(pe$6(this));Wn$3(e);var n=arguments.length>1?arguments[1]:void 0,r=be$6(t.length),o=void 0===n?r:fu$1(be$6(n),r),i=String(e);return cu$1?cu$1.call(t,i,o):t.slice(o-i.length,o)===i}});var pu$1=new WeakMap,gu$1=new WeakMap;var vu$1={bold:"mod+b",compose:["down","left","right","up","backspace","enter"],moveBackward:"left",moveForward:"right",moveWordBackward:"ctrl+left",moveWordForward:"ctrl+right",deleteBackward:"shift?+backspace",deleteForward:"shift?+delete",extendBackward:"shift+left",extendForward:"shift+right",italic:"mod+i",splitBlock:"shift?+enter",undo:"mod+z",tab:"tab",selectAll:"mod+a"},yu$1={moveLineBackward:"opt+up",moveLineForward:"opt+down",moveWordBackward:"opt+left",moveWordForward:"opt+right",deleteBackward:["ctrl+backspace","ctrl+h"],deleteForward:["ctrl+delete","ctrl+d"],deleteLineBackward:"cmd+shift?+backspace",deleteLineForward:["cmd+shift?+delete","ctrl+k"],deleteWordBackward:"opt+shift?+backspace",deleteWordForward:"opt+shift?+delete",extendLineBackward:"opt+shift+up",extendLineForward:"opt+shift+down",redo:"cmd+shift+z",transposeCharacter:"ctrl+t"},mu$1={deleteWordBackward:"ctrl+shift?+backspace",deleteWordForward:"ctrl+shift?+delete",redo:["ctrl+y","ctrl+shift+z"]},wu$1=function(e){var t=vu$1[e],n=yu$1[e],r=mu$1[e],o=t&&isKeyHotkey_1(t),i=n&&isKeyHotkey_1(n),a=r&&isKeyHotkey_1(r);return function(e){return !(!o||!o(e))||(!!(oi$1&&i&&i(e))||!(oi$1||!a||!a(e)))}},bu$1={isBold:wu$1("bold"),isCompose:wu$1("compose"),isMoveBackward:wu$1("moveBackward"),isMoveForward:wu$1("moveForward"),isDeleteBackward:wu$1("deleteBackward"),isDeleteForward:wu$1("deleteForward"),isDeleteLineBackward:wu$1("deleteLineBackward"),isDeleteLineForward:wu$1("deleteLineForward"),isDeleteWordBackward:wu$1("deleteWordBackward"),isDeleteWordForward:wu$1("deleteWordForward"),isExtendBackward:wu$1("extendBackward"),isExtendForward:wu$1("extendForward"),isExtendLineBackward:wu$1("extendLineBackward"),isExtendLineForward:wu$1("extendLineForward"),isItalic:wu$1("italic"),isMoveLineBackward:wu$1("moveLineBackward"),isMoveLineForward:wu$1("moveLineForward"),isMoveWordBackward:wu$1("moveWordBackward"),isMoveWordForward:wu$1("moveWordForward"),isRedo:wu$1("redo"),isSplitBlock:wu$1("splitBlock"),isTransposeCharacter:wu$1("transposeCharacter"),isUndo:wu$1("undo"),isTab:wu$1("tab"),isSelectAll:wu$1("selectAll")};function xu$1(e){e.preventDefault();}var Su$1={beforeinput:function(t,n,r){var i=t,a=r.getConfig().readOnly;if(ci$1&&!a&&au$1(r,i.target)){var l=r.selection,u=i.inputType,c=i.dataTransfer||i.data||void 0;if("insertCompositionText"!==u&&"deleteCompositionText"!==u){if(i.preventDefault(),!u.startsWith("delete")||u.startsWith("deleteBy")){var f=Vr$2(i.getTargetRanges(),1)[0];if(f){var d=fi$1.toSlateRange(r,f,{exactMatch:!1});l&&Range.equals(l,d)||Transforms.select(r,d);}}if(l&&Range.isExpanded(l)&&u.startsWith("delete")){var h=u.endsWith("Backward")?"backward":"forward";Editor.deleteFragment(r,{direction:h});}else switch(u){case"deleteByComposition":case"deleteByCut":case"deleteByDrag":Editor.deleteFragment(r);break;case"deleteContent":case"deleteContentForward":Editor.deleteForward(r);break;case"deleteContentBackward":Editor.deleteBackward(r);break;case"deleteEntireSoftLine":Editor.deleteBackward(r,{unit:"line"}),Editor.deleteForward(r,{unit:"line"});break;case"deleteHardLineBackward":Editor.deleteBackward(r,{unit:"block"});break;case"deleteSoftLineBackward":Editor.deleteBackward(r,{unit:"line"});break;case"deleteHardLineForward":Editor.deleteForward(r,{unit:"block"});break;case"deleteSoftLineForward":Editor.deleteForward(r,{unit:"line"});break;case"deleteWordBackward":Editor.deleteBackward(r,{unit:"word"});break;case"deleteWordForward":Editor.deleteForward(r,{unit:"word"});break;case"insertLineBreak":case"insertParagraph":Editor.insertBreak(r);break;case"insertFromDrop":case"insertFromPaste":case"insertFromYank":case"insertReplacementText":case"insertText":if("insertFromPaste"===u&&!Ko$1.get(r))break;c instanceof DataTransfer?r.insertData(c):"string"==typeof c&&Editor.insertText(r,c);}}}},blur:function(e,t,n){var r=e,o=t.isUpdatingSelection,a=t.latestElement;if(!n.getConfig().readOnly&&!o&&au$1(n,r.target)){var s=fi$1.findDocumentOrShadowRoot(n);if(a!==s.activeElement){var l=r.relatedTarget;if(!(l===fi$1.toDOMNode(n,n)||Yo$1(l)&&l.hasAttribute("data-slate-spacer"))){if(null!=l&&Xo$1(l)&&fi$1.hasDOMNode(n,l)){var u=fi$1.toSlateNode(n,l);if(Element$1.isElement(u)&&!n.isVoid(u))return}if(ai$1){var c=s.getSelection();null==c||c.removeAllRanges();}Wo$1.delete(n);}}}},focus:function(e,t,n){var r=fi$1.toDOMNode(n,n),o=fi$1.findDocumentOrShadowRoot(n);t.latestElement=o.activeElement,ii$1&&e.target!==r?r.focus():Wo$1.set(n,!0);},click:function(t,r,o){if(!o.getConfig().readOnly&&lu$1(o,t.target)&&Xo$1(t.target)){var i=fi$1.toSlateNode(o,t.target),a=fi$1.findPath(o,i),l=Editor.start(o,a),u=Editor.end(o,a),c=Editor.void(o,{at:l}),f=Editor.void(o,{at:u});if(c&&f&&Path.equals(c[1],f[1])){var d=Editor.range(o,l);Transforms.select(o,d);}}},compositionstart:function(t,n,r){if(au$1(r,t.target)){var i=r.selection;if(i&&Range.isExpanded(i)&&Editor.deleteFragment(r),i&&Range.isCollapsed(i)){var a=fi$1.toDOMRange(r,i).startContainer,s=a.textContent||"";pu$1.set(r,s),gu$1.set(r,a);}n.isComposing=!0;}},compositionend:function(t,n,r){var a=t;if(au$1(r,a.target)){n.isComposing=!1;var s=r.selection;if(null!=s){if(ai$1||ii$1)for(var l=Range.isBackward(s)?s.focus:s.anchor,u=Vr$2(Editor.node(r,[l.path[0]]),1)[0],c=0;c<l.path.length;c++){var f=Vr$2(Editor.node(r,l.path.slice(0,c+1)),1)[0];if(Element$1.isElement(f)&&"link"===f.type){fi$1.setNewKey(u);break}}var d=a.data;if(fi$1.checkMaxLength(r,d))return fi$1.toDOMRange(r,s).startContainer.textContent=pu$1.get(r)||"",void n.changeViewState();d&&Editor.insertText(r,d),ui$1&&fi$1.cleanExposedTexNodeInSelectionBlock(r),ai$1||setTimeout((function(){var e=r.selection;if(null!=e){var t=gu$1.get(r);if(null!=t)fi$1.toDOMRange(r,e).startContainer!==t&&(t.textContent=pu$1.get(r)||"");}}));}}},compositionupdate:function(e,t,n){au$1(n,e.target)&&(t.isComposing=!0);},keydown:function(t,n,a){var l=t,u=a.selection;if(!a.getConfig().readOnly&&au$1(a,l.target)){if(function(e,t){var n=Eo$1.get(e),r=n&&n.getMenus(),o=Co$1.get(e),i=o&&o.getMenus(),a=Wr$2(Wr$2({},r),i);for(var s in a){var l=a[s],u=l.hotkey;if(u&&isHotkey_1(u,t)&&!l.isDisabled(e)){var c=l.getValue(e);l.exec(e,c);}}}(a,l),bu$1.isTab(l))return xu$1(l),void a.handleTab();if(bu$1.isRedo(l))return xu$1(l),void("function"==typeof a.redo&&a.redo());if(bu$1.isUndo(l))return xu$1(l),void("function"==typeof a.undo&&a.undo());if(bu$1.isMoveLineBackward(l))return xu$1(l),void Transforms.move(a,{unit:"line",reverse:!0});if(bu$1.isMoveLineForward(l))return xu$1(l),void Transforms.move(a,{unit:"line"});if(bu$1.isExtendLineBackward(l))return xu$1(l),void Transforms.move(a,{unit:"line",edge:"focus",reverse:!0});if(bu$1.isExtendLineForward(l))return xu$1(l),void Transforms.move(a,{unit:"line",edge:"focus"});if(bu$1.isMoveBackward(l))return xu$1(l),void(u&&Range.isCollapsed(u)?Transforms.move(a,{reverse:!0}):Transforms.collapse(a,{edge:"start"}));if(bu$1.isMoveForward(l))return xu$1(l),void(u&&Range.isCollapsed(u)?Transforms.move(a):Transforms.collapse(a,{edge:"end"}));if(bu$1.isMoveWordBackward(l))return xu$1(l),u&&Range.isExpanded(u)&&Transforms.collapse(a,{edge:"focus"}),void Transforms.move(a,{unit:"word",reverse:!0});if(bu$1.isMoveWordForward(l))return xu$1(l),u&&Range.isExpanded(u)&&Transforms.collapse(a,{edge:"focus"}),void Transforms.move(a,{unit:"word"});if(bu$1.isSelectAll(l)){xu$1(l);var c=Editor.start(a,[]),f=Editor.end(a,[]);Transforms.select(a,{anchor:c,focus:f});}else if(ci$1){if((ui$1||ai$1)&&u&&(bu$1.isDeleteBackward(l)||bu$1.isDeleteForward(l))&&Range.isCollapsed(u)){var d=Node$1.parent(a,u.anchor.path);if(Element$1.isElement(d)&&Editor.isVoid(a,d)&&Editor.isInline(a,d))return l.preventDefault(),void Transforms.delete(a,{unit:"block"})}}else {if(bu$1.isBold(l)||bu$1.isItalic(l)||bu$1.isTransposeCharacter(l))return void xu$1(l);if(bu$1.isSplitBlock(l))return xu$1(l),void Editor.insertBreak(a);if(bu$1.isDeleteBackward(l))return xu$1(l),void(u&&Range.isExpanded(u)?Editor.deleteFragment(a,{direction:"backward"}):Editor.deleteBackward(a));if(bu$1.isDeleteForward(l))return xu$1(l),void(u&&Range.isExpanded(u)?Editor.deleteFragment(a,{direction:"forward"}):Editor.deleteForward(a));if(bu$1.isDeleteLineBackward(l))return xu$1(l),void(u&&Range.isExpanded(u)?Editor.deleteFragment(a,{direction:"backward"}):Editor.deleteBackward(a,{unit:"line"}));if(bu$1.isDeleteLineForward(l))return xu$1(l),void(u&&Range.isExpanded(u)?Editor.deleteFragment(a,{direction:"forward"}):Editor.deleteForward(a,{unit:"line"}));if(bu$1.isDeleteWordBackward(l))return xu$1(l),void(u&&Range.isExpanded(u)?Editor.deleteFragment(a,{direction:"backward"}):Editor.deleteBackward(a,{unit:"word"}));if(bu$1.isDeleteWordForward(l))return xu$1(l),void(u&&Range.isExpanded(u)?Editor.deleteFragment(a,{direction:"forward"}):Editor.deleteForward(a,{unit:"word"}))}}},keypress:function(t,n,r){if(!ci$1&&!r.getConfig().readOnly&&au$1(r,t.target)){t.preventDefault();var o=t.key;Editor.insertText(r,o);}},copy:function(e,t,n){var r=e;if(au$1(n,r.target)){r.preventDefault();var o=r.clipboardData;null!=o&&n.setFragmentData(o);}},cut:function(t,n,i){var a=t,l=i.selection;if(!i.getConfig().readOnly&&au$1(i,a.target)){a.preventDefault();var u=a.clipboardData;if(null!=u&&(i.setFragmentData(u),l))if(Range.isExpanded(l))Editor.deleteFragment(i);else {var c=Node$1.parent(i,l.anchor.path);Editor.isVoid(i,c)&&Transforms.delete(i);}}},paste:function(e,t,n){Ko$1.set(n,!0);var r=e;if(!n.getConfig().readOnly&&au$1(n,r.target)){var o=n.getConfig().customPaste;if(o)if(!o(n,r))return void Ko$1.set(n,!1);if(!ci$1||function(e){return e.clipboardData&&""!==e.clipboardData.getData("text/plain")&&1===e.clipboardData.types.length}(r)){r.preventDefault();var i=r.clipboardData;null!=i&&n.insertData(i);}}},dragover:function(t,n,r){if(lu$1(r,t.target)){var o=fi$1.toSlateNode(r,t.target);Editor.isVoid(r,o)&&t.preventDefault();}},dragstart:function(t,n,r){var o=t;if(lu$1(r,o.target)){var i=fi$1.toSlateNode(r,o.target),a=fi$1.findPath(r,i);if(Editor.isVoid(r,i)||Editor.void(r,{at:a,voids:!0})){var l=Editor.range(r,a);Transforms.select(r,l);}var u=o.dataTransfer;null!=u&&(n.isDraggingInternally=!0,r.setFragmentData(u));}},dragend:function(e,t,n){var r=e;n.getConfig().readOnly||t.isDraggingInternally&&lu$1(n,r.target)&&(t.isDraggingInternally=!1);},drop:function(e,t,n){var r=e,o=r.dataTransfer;if(!n.getConfig().readOnly&&lu$1(n,r.target)&&null!=o&&!(ci$1&&ai$1&&o.files.length>0)){r.preventDefault();var i=n.selection,a=fi$1.findEventRange(n,r);Transforms.select(n,a),t.isDraggingInternally&&(i&&Transforms.delete(n,{at:i}),t.isDraggingInternally=!1),n.insertData(o),n.isFocused()||n.focus();}}},ku$1=1,Eu$1=function(){function e(e){var t=this;this.id=ku$1++,this.$textArea=null,this.$progressBar=$$6('<div class="w-e-progress-bar"></div>'),this.isComposing=!1,this.isUpdatingSelection=!1,this.isDraggingInternally=!1,this.latestElement=null,this.showPlaceholder=!1,this.$placeholder=null,this.latestEditorSelection=null,this.onDOMSelectionChange=lodash_throttle((function(){var e=t.editorInstance;!function(e,t){var n=e.isComposing,r=e.isUpdatingSelection,o=e.isDraggingInternally;if(!(t.getConfig().readOnly||n||r||o)){var i=fi$1.findDocumentOrShadowRoot(t),a=i.activeElement,l=fi$1.toDOMNode(t,t),u=i.getSelection();if(a===l?(e.latestElement=a,Wo$1.set(t,!0)):Wo$1.delete(t),!u)return Transforms.deselect(t);var c=u.anchorNode,f=u.focusNode,d=au$1(t,c)||su$1(t,c),h=au$1(t,f)||su$1(t,f);if(d&&h){var p=fi$1.toSlateRange(t,u,{exactMatch:!1});Transforms.select(t,p);}else Transforms.deselect(t);}}(t,e);}),100);var n=$$6(e);if(0===n.length)throw new Error("Cannot find textarea DOM by selector '"+e+"'");this.$box=n;var r=$$6('<div class="w-e-text-container"></div>');r.append(this.$progressBar),n.append(r);var o=$$6('<div class="w-e-scroll"></div>');r.append(o),this.$scroll=o,this.$textAreaContainer=r,Ol$1((function(){var e=t.editorInstance,n=fi$1.getWindow(e);n.document.addEventListener("selectionchange",t.onDOMSelectionChange),e.on("destroyed",(function(){n.document.removeEventListener("selectionchange",t.onDOMSelectionChange);})),r.on("mousedown",(function(){return e.hidePanelOrModal()})),e.on("change",t.changeViewState.bind(t));var o=e.getConfig().onChange;o&&e.on("change",(function(){return o(e)})),t.onFocusAndOnBlur(),t.bindEvent();}));}return Object.defineProperty(e.prototype,"editorInstance",{get:function(){var e=So$1.get(this);if(null==e)throw new Error("Can not get editor instance");return e},enumerable:!1,configurable:!0}),e.prototype.bindEvent=function(){var e=this,t=this.$textArea,n=this.$scroll,r=this.editorInstance;null!=t&&(lodash_foreach(Su$1,(function(n,o){t.on(o,(function(t){n(t,e,r);}));})),r.getConfig().scroll&&(n.css("overflow-y","auto"),n.on("scroll",lodash_throttle((function(){r.emit("scroll");}),100))));},e.prototype.onFocusAndOnBlur=function(){var e=this,t=this.editorInstance,n=t.getConfig(),r=n.onBlur,o=n.onFocus;this.latestEditorSelection=t.selection,t.on("change",(function(){null==e.latestEditorSelection&&null!=t.selection?o&&o(t):null!=e.latestEditorSelection&&null==t.selection&&r&&r(t),e.latestEditorSelection=t.selection;}));},e.prototype.changeViewState=function(){var e=this,t=this.editorInstance;Ql(this,t),function(e,t){var n,r=t.getConfig().placeholder;if(r){var o=t.isEmpty();if(o&&!e.showPlaceholder){if(null==e.$placeholder){var i=$$6('<div class="w-e-text-placeholder">'+r+"</div>");e.$textAreaContainer.append(i),e.$placeholder=i;}return e.$placeholder.show(),void(e.showPlaceholder=!0)}!o&&e.showPlaceholder&&(null===(n=e.$placeholder)||void 0===n||n.hide(),e.showPlaceholder=!1);}}(this,t),Ol$1((function(){!function(e,t){var n=t.selection,r=fi$1.findDocumentOrShadowRoot(t).getSelection();if(r&&!e.isComposing&&t.isFocused()){var i="None"!==r.type;if(n||i){var a=Ao$1.get(t),s=!1;if(a.contains(r.anchorNode)&&a.contains(r.focusNode)&&(s=!0),i&&s&&n){var l=fi$1.toSlateRange(t,r,{exactMatch:!0});if(l&&Range.equals(l,n)){var u=!0;if(Range.isCollapsed(n)){var c=r.anchorNode,f=r.anchorOffset;if(c===a){var d=a.childNodes,h=void 0;(h=d[f])&&h.matches("table")&&(u=!1),(h=d[f-1])&&h.matches("table")&&(u=!1);}}if(u)return}}if(!n||fi$1.hasRange(t,n)){e.isUpdatingSelection=!0;var p=n&&fi$1.toDOMRange(t,n);if(p){Range.isBackward(n)?r.setBaseAndExtent(p.endContainer,p.endOffset,p.startContainer,p.startOffset):r.setBaseAndExtent(p.startContainer,p.startOffset,p.endContainer,p.endOffset);var g=p.startContainer.parentElement;g.getBoundingClientRect=p.getBoundingClientRect.bind(p),iu$1(g,{scrollMode:"if-needed",boundary:a}),delete g.getBoundingClientRect;}else r.removeAllRanges();setTimeout((function(){p&&ii$1&&a.focus(),e.isUpdatingSelection=!1;}));}else t.selection=fi$1.toSlateRange(t,r,{exactMatch:!1});}}}(e,t);}));},e.prototype.destroy=function(){this.$textAreaContainer.remove();},e}();Gi$1("match",1,(function(e,t,n){return [function(t){var n=pe$6(this),r=null==t?void 0:t[e];return void 0!==r?r.call(t,n):new RegExp(t)[e](String(n))},function(e){var r=n(t,e,this);if(r.done)return r.value;var o=Me$6(e),i=String(this);if(!o.global)return ra$1(o,i);var a=o.unicode;o.lastIndex=0;for(var s,l=[],u=0;null!==(s=ra$1(o,i));){var c=String(s[0]);l[u]=c,""===c&&(o.lastIndex=Xi$1(i,be$6(o.lastIndex),a)),u++;}return 0===u?null:l}]}));function Ou$1(e){e.removeAttr("width"),e.removeAttr("height"),e.removeAttr("fill"),e.removeAttr("class"),e.removeAttr("t"),e.removeAttr("p-id");var t=e.children();t.length&&Ou$1(t);}function Cu$1(){return $$6('<svg viewBox="0 0 1024 1024"><path d="M498.7 655.8l-197.6-268c-8.1-10.9-0.3-26.4 13.3-26.4h395.2c13.6 0 21.4 15.4 13.3 26.4l-197.6 268c-6.6 9-20 9-26.6 0z"></path></svg>')}function Nu$1(){return $$6('<div class="w-e-bar-divider"></div>')}function Mu$1(e,t,n,r,o){if(void 0===o&&(o=!1),t){if(r){var i=oi$1?"cmd":"ctrl";r=r.replace("mod",i);}if(o)r&&(e.attr("data-tooltip",r),e.addClass("w-e-menu-tooltip"),e.addClass("tooltip-right"));else {var a=r?n+"\n"+r:n;e.attr("data-tooltip",a),e.addClass("w-e-menu-tooltip");}}}var Lu$1=function(){function e(e,t){var n=this;void 0===t&&(t=!1),this.$elem=$$6('<div class="w-e-bar-item"></div>'),this.$button=$$6('<button type="button"></button>'),this.disabled=!1,this.menu=e;var r=e.tag,o=e.width;if("button"!==r)throw new Error("Invalid tag '"+r+"', expected 'button'");var i=e.title,a=e.hotkey,s=void 0===a?"":a,l=e.iconSvg,u=void 0===l?"":l,c=this.$button;if(u){var d=$$6(u);Ou$1(d),c.append(d);}else c.text(i);Mu$1(c,u,i,s,t),t&&u&&c.append($$6('<span class="title">'+i+"</span>")),o&&c.css("width",o+"px"),this.$elem.append(c),Ol$1((function(){return n.init()}));}return e.prototype.init=function(){var e=this;this.setActive(),this.setDisabled(),this.$button.on("mousedown",(function(t){t.preventDefault(),zu$1(e).hidePanelOrModal(),e.disabled||(e.exec(),e.onButtonClick());}));},e.prototype.exec=function(){var e=zu$1(this),t=this.menu,n=t.getValue(e);t.exec(e,n);},e.prototype.setActive=function(){var e=zu$1(this),t=this.$button,n="active";this.menu.isActive(e)?t.addClass(n):t.removeClass(n);},e.prototype.setDisabled=function(){var e=zu$1(this),t=this.$button,n=this.menu.isDisabled(e);(null==e.selection||e.isDisabled())&&(n=!0);var r="disabled";n?t.addClass(r):t.removeClass(r),this.disabled=n;},e.prototype.changeMenuState=function(){this.setActive(),this.setDisabled();},e}(),Pu$1=function(e){function t(t,n){return void 0===n&&(n=!1),e.call(this,t,n)||this}return $r$2(t,e),t.prototype.onButtonClick=function(){},t}(Lu$1),Tu$1=function(){function e(e){this.isShow=!1,this.showTime=0,this.record(e);}return e.prototype.record=function(e){var t=Mo$1.get(e);null==t&&(t=new Set,Mo$1.set(e,t)),t.add(this);},e.prototype.renderContent=function(e){var t=this.$elem;t.html(""),t.append(e);var n=this.genSelfElem();n&&t.append(n);},e.prototype.appendTo=function(e){var t=this.$elem;e.append(t);},e.prototype.show=function(){this.isShow||(this.showTime=Date.now(),this.$elem.show(),this.isShow=!0);},e.prototype.hide=function(){this.isShow&&(Date.now()-this.showTime<200||(this.$elem.hide(),this.isShow=!1));},e}(),Du$1=function(e){function t(t){var n=e.call(this,t)||this;return n.$elem=$$6('<div class="w-e-drop-panel"></div>'),n}return $r$2(t,e),t.prototype.genSelfElem=function(){return null},t}(Tu$1),ju$1=function(e){function t(t,n){void 0===n&&(n=!1);var r=e.call(this,t,n)||this;if(r.dropPanel=null,r.menu=t,t.showDropPanel){var o=Cu$1();r.$button.append(o);}return r}return $r$2(t,e),t.prototype.onButtonClick=function(){this.menu.showDropPanel&&this.handleDropPanel();},t.prototype.handleDropPanel=function(){var e=this.menu;if(null!=e.getPanelContentElem){var t=zu$1(this);if(null==this.dropPanel){var n=new Du$1(t),r=e.getPanelContentElem(t);n.renderContent(r),n.appendTo(this.$elem),n.show(),this.dropPanel=n;}else {var o=this.dropPanel;if(o.isShow)o.hide();else {r=e.getPanelContentElem(t);o.renderContent(r),o.show();}}var i=this.dropPanel;if(i.isShow){var a=this.$elem,s=a.offset().left,l=a.parents(".w-e-bar");s-l.offset().left>=l.width()/2?i.$elem.css({left:"none",right:"0"}):i.$elem.css({left:"0",right:"none"});}}},t}(Lu$1),Ru$1=function(e){function t(t,n){void 0===n&&(n=0);var r=e.call(this,t)||this;r.$elem=$$6('<div class="w-e-modal"></div>'),r.width=0,n&&(r.width=n);var o=r.$elem;return o.on("mousedown",(function(e){return e.stopPropagation()})),o.on("keyup",(function(e){"Escape"===e.code&&(r.hide(),t.restoreSelection());})),r}return $r$2(t,e),t.prototype.genSelfElem=function(){var e=this,t=$$6('<span class="btn-close"><svg viewBox="0 0 1024 1024"><path d="M1024 896.1024l-128 128L512 640 128 1024 0 896 384 512 0 128 128 0 512 384 896.1024 0l128 128L640 512z"></path></svg></span>');return t.on("click",(function(){return e.hide()})),t},t.prototype.setStyle=function(e){var t=this.width,n=this.$elem;n.attr("style",""),t&&n.css("width",t+"px"),n.css(e);},t}(Tu$1);function Au$1(e,t,n){var r=$$6('<label class="babel-container"></label>');r.append("<span>"+e+"</span>");var o=$$6('<input type="text" id="'+t+'" placeholder="'+(n||"")+'">');return r.append(o),[r,o]}function Fu$1(e,t){var n=$$6('<div class="button-container"></div>'),r=$$6('<button type="button" id="'+e+'">'+t+"</button>");return n.append(r),[n,r]}var Iu$1=function(e){function t(t,n){void 0===n&&(n=!1);var r=e.call(this,t,n)||this;return r.modal=null,r.menu=t,r}return $r$2(t,e),t.prototype.onButtonClick=function(){this.menu.showModal&&this.handleModal();},t.prototype.getPosition=function(){var e=zu$1(this),t=this.menu.getModalPositionNode(e);return Element$1.isElement(t)?Ml$1(e,t,"modal"):Nl$1(e)},t.prototype.handleModal=function(){var e=zu$1(this),t=this.menu;if(null==this.modal){var n=new Ru$1(e,t.modalWidth);this.renderAndShowModal(n,!0),this.modal=n;}else {(n=this.modal).isShow?n.hide():this.renderAndShowModal(n,!1);}},t.prototype.renderAndShowModal=function(e,t){void 0===t&&(t=!1);var n=zu$1(this),r=this.menu;if(null!=r.getModalContentElem){var o=fi$1.getTextarea(n),i=r.getModalContentElem(n);e.renderContent(i);var a=this.getPosition();e.setStyle(a),t&&e.appendTo(o.$textAreaContainer),e.show(),Ll$1(n,e.$elem);}},t}(Lu$1);var Bu$1=function(e){function t(t,n){var r=e.call(this,t)||this;return r.$elem=$$6('<div class="w-e-select-list"></div>'),n&&r.$elem.css("width",n+"px"),r}return $r$2(t,e),t.prototype.renderList=function(e){var t=this.$elem;t.html("");var n=$$6("<ul></ul>");e.forEach((function(e){var t=e.value,r=e.text,o=e.selected,i=e.styleForRenderMenuList,a=$$6('<li data-value="'+t+'"></li>');if(i&&a.css(i),o){var s=$$6('<svg viewBox="0 0 1446 1024"><path d="M574.116299 786.736392 1238.811249 48.517862C1272.390222 11.224635 1329.414799 7.827718 1366.75664 41.450462 1403.840015 74.840484 1406.731043 132.084741 1373.10189 169.433699L655.118888 966.834607C653.072421 969.716875 650.835807 972.514337 648.407938 975.210759 615.017957 1012.29409 558.292155 1015.652019 521.195664 982.250188L72.778218 578.493306C35.910826 545.297758 32.859041 488.584019 66.481825 451.242134 99.871807 414.158803 156.597563 410.800834 193.694055 444.202665L574.116299 786.736392Z"></path></svg>');a.append(s),a.addClass("selected");}a.append($$6('<span data-value="'+t+'">'+r+"</span>")),n.append(a);})),t.append(n);},t.prototype.genSelfElem=function(){return null},t}(Tu$1);var _u$1=function(){function e(e,t){var n=this;void 0===t&&(t=!1),this.$elem=$$6('<div class="w-e-bar-item"></div>'),this.$button=$$6('<button type="button" class="select-button"></button>'),this.disabled=!1,this.selectList=null;var r=e.tag,o=e.title,i=e.width,a=e.iconSvg,s=void 0===a?"":a,l=e.hotkey,u=void 0===l?"":l;if("select"!==r)throw new Error("Invalid tag '"+r+"', expected 'select'");var c=this.$button;i&&c.css("width",i+"px"),Mu$1(c,s,o,u,t),this.$elem.append(c),this.menu=e,Ol$1((function(){return n.init()}));}return e.prototype.init=function(){var e=this;this.setSelectedValue(),this.$button.on("mousedown",(function(t){t.preventDefault(),zu$1(e).hidePanelOrModal(),e.trigger();}));},e.prototype.trigger=function(){var e=this,t=zu$1(this);if(!t.isDisabled()&&!this.disabled){var n=this.menu;if(null==this.selectList){this.selectList=new Bu$1(t,n.selectPanelWidth);var r=this.selectList,o=n.getOptions(t);r.renderList(o),r.appendTo(this.$elem),r.show(),r.$elem.on("mousedown","li",(function(t){var n=t.target;if(null!=n){t.preventDefault();var r=$$6(n).attr("data-value");e.onChange(r);}}));}else {if((r=this.selectList).isShow)r.hide();else {o=n.getOptions(t);r.renderList(o),r.show();}}}},e.prototype.onChange=function(e){var t=zu$1(this),n=this.menu;n.exec&&n.exec(t,e);},e.prototype.setSelectedValue=function(){var e=zu$1(this),t=this.menu,n=t.getValue(e),r=function(e,t){for(var n=e.length,r="",o=0;o<n;o++){var i=e[o];if(i.value===t){r=i.text;break}}return r}(t.getOptions(e),n.toString()),o=this.$button,i=Cu$1();o.html(""),o.text(r),o.append(i);},e.prototype.setDisabled=function(){var e=zu$1(this),t=this.menu.isDisabled(e),n=this.$button;(null==e.selection||e.isDisabled())&&(t=!0);var r="disabled";t?n.addClass(r):n.removeClass(r),this.disabled=t;},e.prototype.changeMenuState=function(){this.setSelectedValue(),this.setDisabled();},e}(),$u$1=function(){function e(e){this.$elem=$$6('<div class="w-e-bar-item w-e-bar-item-group"></div>'),this.$container=$$6('<div class="w-e-bar-item-menus-container"></div>'),this.$button=$$6('<button type="button"></button>');var t=e.iconSvg,n=e.title,r=this.$elem,o=this.$button;if(t){var i=$$6(t);Ou$1(i),o.append(i);}else o.text(n);var a=Cu$1();o.append(a),r.append(o);var s=this.$container;r.append(s);var l=this.createObserver();this.observe(l);}return e.prototype.appendBarItem=function(e){var t=e.$elem;this.$container.append(t);},e.prototype.observe=function(e){var t=this.$container;e.observe(t[0],{childList:!0,subtree:!0,attributes:!0});},e.prototype.createObserver=function(){var e=this,t=this.$container,n=this.$button,r=new MutationObserver((function(){var o=t.find("button"),i=o.length;if(0!==i){var a=0;o.each((function(e){$$6(e).hasClass("disabled")&&a++;})),r.disconnect(),a===i?n.addClass("disabled"):n.removeClass("disabled"),e.observe(r);}}));return r},e}(),Wu$1=new WeakMap;function zu$1(e){var t=No$1.get(e);if(null==t)throw new Error("Can not get editor instance");return t}function Vu$1(e,t){void 0===t&&(t=!1);var n=Wu$1.get(e);if(n)return n;var r=e.tag;if("button"===r){var o=e.showDropPanel,i=e.showModal;n=o?new ju$1(e,t):i?new Iu$1(e,t):new Pu$1(e,t);}if("select"===r&&(n=new _u$1(e,t)),null==n)throw new Error("Invalid tag in menu "+JSON.stringify(e));return Wu$1.set(e,n),n}var Uu$1=function(){function t(){var e=this;this.$elem=$$6('<div class="w-e-bar w-e-bar-hidden w-e-hover-bar"></div>'),this.menus={},this.hoverbarItems=[],this.prevSelectedNode=null,this.isShow=!1,this.changeHoverbarState=lodash_debounce((function(){var t=e.isShow,n=e.getSelectedNodeAndMenuKeys()||{},r=n.node,o=void 0===r?null:r,a=n.menuKeys,s=void 0===a?[]:a;if((null!=o&&e.changeItemsState(),o&&Element$1.isElement(o))&&(t&&e.isSamePath(o,e.prevSelectedNode)))return;e.hideAndClean(),null!=o&&(e.registerItems(s),e.setPosition(o),e.show()),e.prevSelectedNode=o;}),200),Ol$1((function(){var t=e.getEditorInstance(),n=e.$elem;n.on("mousedown",(function(e){return e.preventDefault()})),fi$1.getTextarea(t).$textAreaContainer.append(n),t.on("change",e.changeHoverbarState);var r=e.hideAndClean.bind(e);t.on("scroll",r),t.on("fullScreen",r),t.on("unFullScreen",r);}));}return t.prototype.getMenus=function(){return this.menus},t.prototype.hideAndClean=function(){var e=this.$elem;e.removeClass("w-e-bar-show").addClass("w-e-bar-hidden"),this.hoverbarItems=[],e.html(""),this.isShow=!1;},t.prototype.show=function(){this.$elem.removeClass("w-e-bar-hidden").addClass("w-e-bar-show"),this.isShow=!0;},t.prototype.changeItemsState=function(){var e=this;Ol$1((function(){e.hoverbarItems.forEach((function(e){e.changeMenuState();}));}));},t.prototype.registerItems=function(e){var t=this,n=this.$elem;e.forEach((function(e){if("|"!==e)t.registerSingleItem(e);else {var r=Nu$1();n.append(r);}}));},t.prototype.registerSingleItem=function(e){var t=this.getEditorInstance(),n=this.menus,r=n[e];if(null==r){var o=pi$1[e];if(null==o)throw new Error("Not found menu item factory by key '"+e+"'");if("function"!=typeof o)throw new Error("Menu item factory (key='"+e+"') is not a function");r=o(),n[e]=r;}var i=Vu$1(r);this.hoverbarItems.push(i),No$1.set(i,t),this.$elem.append(i.$elem);},t.prototype.setPosition=function(e){var t=this.getEditorInstance(),n=this.$elem;if(n.attr("style",""),Element$1.isElement(e)){var r=Ml$1(t,e,"bar");return n.css(r),void Ll$1(t,n)}if(Text.isText(e)){r=Nl$1(t);return n.css(r),void Ll$1(t,n)}throw new Error("hoverbar.setPosition error, current selected node is not elem nor text")},t.prototype.getSelectedNodeAndMenuKeys=function(){var t=this.getEditorInstance();if(null==t.selection)return null;var n=this.getHoverbarKeysConf(),r=null,o=[];return n.some((function(n){var i=n.match,a=n.menuKeys,s=Vr$2(Editor.nodes(t,{match:function(e){return i(t,e)},universal:!0}),1)[0];if(null!=s)return r=s[0],o=a,!0})),null==r?null:{node:r,menuKeys:o}},t.prototype.getEditorInstance=function(){var e=Oo$1.get(this);if(null==e)throw new Error("Can not get editor instance");return e},t.prototype.getHoverbarKeysConf=function(){return this.getEditorInstance().getConfig().hoverbarKeys||[]},t.prototype.isSamePath=function(e,t){if(null==e||null==t)return !1;var r=fi$1.findPath(null,e),o=fi$1.findPath(null,t);return Path.equals(r,o)},t.prototype.destroy=function(){this.$elem.remove(),this.menus={},this.hoverbarItems=[],this.prevSelectedNode=null;},t}();function Ku$1(e,t,n){var r=$$6(n);return !!r.attr(t)||(r.attr(t,"true"),e.on("destroyed",(function(){r.removeAttr(t);})),!1)}function Hu$1(n){var r=n.textareaSelector,o=void 0===r?"":r,i=n.config,a=void 0===i?{}:i,u=n.content,c=n.plugins,d=void 0===c?[]:c,h=(n=>{var r=n,{apply:o}=r;return r.history={undos:[],redos:[]},r.redo=()=>{var{history:t}=r,{redos:n}=t;if(n.length>0){var o=n[n.length-1];yt$6.withoutSaving(r,(()=>{Editor.withoutNormalizing(r,(()=>{for(var e of o)r.apply(e);}));})),t.redos.pop(),t.undos.push(o);}},r.undo=()=>{var{history:n}=r,{undos:o}=n;if(o.length>0){var i=o[o.length-1];yt$6.withoutSaving(r,(()=>{Editor.withoutNormalizing(r,(()=>{var e=i.map(Operation.inverse).reverse();for(var n of e)r.apply(n);}));})),n.redos.push(i),n.undos.pop();}},r.apply=e=>{var{operations:t,history:n}=r,{undos:i}=n,a=i[i.length-1],s=a&&a[a.length-1],l=bt$6(e,s),u=yt$6.isSaving(r),c=yt$6.isMerging(r);if(null==u&&(u=wt$6(e)),u){if(null==c&&(c=null!=a&&(0!==t.length||mt$6(e,s)||l)),a&&c)l&&a.pop(),a.push(e);else {var f=[e];i.push(f);}for(;i.length>100;)i.shift();xt$6(e)&&(n.redos=[]);}o(e);},r})(ts(function(e){var t=e;return t.select=function(e){Transforms.select(t,e);},t.deselect=function(){var n=t.selection,r=fi$1.findDocumentOrShadowRoot(t).getSelection();r&&r.rangeCount>0&&r.removeAllRanges(),n&&Transforms.deselect(e);},t.restoreSelection=function(){var e=Vo$1.get(t);null!=e&&(t.focus(),Transforms.select(t,e));},t.getSelectionPosition=function(){return Nl$1(t)},t.getNodePosition=function(e){return Ml$1(t,e)},t}(ca$1(function(e){var t=e;return t.getAllMenuKeys=function(){var e=[];for(var t in pi$1)e.push(t);return e},t.getConfig=function(){var e=Lo$1.get(t);if(null==e)throw new Error("Can not get editor config");return e},t.getMenuConfig=function(e){var n=t.getConfig().MENU_CONF;return (void 0===n?{}:n)[e]||{}},t.alert=function(e,n){void 0===n&&(n="info");var r=t.getConfig().customAlert;r&&r(e,n);},t}(function(t){var n=t;return n.id="wangEditor-"+di$1++,n.isDestroyed=!1,n.isFullScreen=!1,n.focus=function(t){var r=fi$1.toDOMNode(n,n),o=fi$1.findDocumentOrShadowRoot(n);if(Wo$1.set(n,!0),t){var i=Editor.end(n,[]);Transforms.select(n,i);}o.activeElement!==r&&r.focus({preventScroll:!0});},n.isFocused=function(){return !!Wo$1.get(n)},n.blur=function(){var e=fi$1.toDOMNode(n,n),t=fi$1.findDocumentOrShadowRoot(n);Wo$1.set(n,!1),t.activeElement===e&&e.blur();},n.updateView=function(){fi$1.getTextarea(n).changeViewState();var e=fi$1.getToolbar(n);e&&e.changeToolbarState();var t=fi$1.getHoverbar(n);t&&t.changeHoverbarState();},n.destroy=function(){var e=fi$1.getTextarea(n);e.destroy(),xo$1.delete(n),So$1.delete(e);var t=fi$1.getToolbar(n);t&&(t.destroy(),Eo$1.delete(n),ko$1.delete(t));var r=fi$1.getHoverbar(n);r&&(r.destroy(),Co$1.delete(n),Oo$1.delete(r)),n.isDestroyed=!0,n.emit("destroyed");},n.scrollToElem=function(e){if(!n.getConfig().scroll){var t="编辑器禁用了 scroll ，编辑器内容无法滚动，请自行实现该功能";return t+="\nYou has disabled editor scroll, please do this yourself",void console.warn(t)}var r=$$6("#"+e);if(0!==r.length){var o=r[0];if(!fi$1.hasDOMNode(n,o))return t="Element (found by id is '"+e+"') is not in editor DOM",t+="\n 通过 id '"+e+"' 找到的 element 不在 editor DOM 之内",void console.error(t,o);var i=fi$1.getTextarea(n),a=i.$textAreaContainer,s=i.$scroll,l=r.offset().top,u=a.offset().top;s[0].scrollBy({top:l-u,behavior:"smooth"});}},n.showProgressBar=function(e){if(!(e<1)){var t=fi$1.getTextarea(n).$progressBar;t.css("width",e+"%"),e>=100&&setTimeout((function(){t.hide(),t.css("width","0"),t.show();}),1e3);}},n.hidePanelOrModal=function(){var e=Mo$1.get(n);null!=e&&e.forEach((function(e){return e.hide()}));},n.enable=function(){n.getConfig().readOnly=!1,n.updateView();},n.disable=function(){n.getConfig().readOnly=!0,n.updateView();},n.isDisabled=function(){return n.getConfig().readOnly},n.toDOMNode=function(e){return fi$1.toDOMNode(n,e)},n.fullScreen=function(){if(!n.isFullScreen){var e=null,t=fi$1.getToolbar(n);t&&(e=t.$box);var r=fi$1.getTextarea(n).$box.parent();if(e&&e.parent()[0]!==r[0])throw new Error("Can not set full screen, cause toolbar DOM parent is not equal to textarea DOM parent\n不能设置全屏，因为 toolbar DOM 父节点和 textarea DOM 父节点不一致");r.addClass("w-e-full-screen-container");var o=r.css("z-index");r.attr("data-z-index",o.toString()),n.isFullScreen=!0,n.emit("fullScreen");}},n.unFullScreen=function(){n.isFullScreen&&(fi$1.getTextarea(n).$box.parent().removeClass("w-e-full-screen-container"),n.isFullScreen=!1,n.emit("unFullScreen"));},n}(ka$1(createEditor$1())))))));if(o&&function(e,t){return Ku$1(e,"data-w-e-textarea",t)}(h,o))throw new Error("Repeated create editor by textareaSelector '"+o+"'");var p=function(e){void 0===e&&(e={});var t=lodash_clonedeep(hi$1),n={},r=e.MENU_CONF,o=void 0===r?{}:r;return lodash_foreach(t,(function(e,t){n[t]=Wr$2(Wr$2({},e),o[t]||{});})),delete e.MENU_CONF,Wr$2({scroll:!0,readOnly:!1,autoFocus:!0,decorate:function(){return []},maxLength:0,MENU_CONF:n,hoverbarKeys:[],customAlert:function(e,t){window.alert(t+":\n"+e);}},e)}(a);Lo$1.set(h,p);var g=p.hoverbarKeys,v=void 0===g?[]:g;if(d.forEach((function(e){h=e(h);})),u&&u.length?h.children=u:h.children=[{type:"paragraph",children:[{text:""}]}],fi$1.normalizeContent(h),o){var y=new Eu$1(o);xo$1.set(h,y),So$1.set(y,h),y.changeViewState(),Ol$1((function(){var e=y.$scroll;if(null!=e&&e.height()<300){console.warn("编辑区域高度 < 300px 这可能会导致 modal hoverbar 定位异常\nTextarea height < 300px . This may be cause modal and hoverbar position error",e);}}));var m=void 0;v.length>0&&(m=new Uu$1,Oo$1.set(m,h),Co$1.set(h,m)),h.on("change",(function(){h.hidePanelOrModal();})),h.on("scroll",(function(){h.hidePanelOrModal();}));}var w=p.onCreated,b=p.onDestroyed;return w&&h.on("created",(function(){return w(h)})),b&&h.on("destroyed",(function(){return b(h)})),Ol$1((function(){return h.emit("created")})),h}var qu$1=at$6.filter,Ju$1=Fr$2("filter");Cn$3({target:"Array",proto:!0,forced:!Ju$1},{filter:function(e){return qu$1(this,e,arguments.length>1?arguments[1]:void 0)}});var Gu$1=function(){function e(e,t){var n=this;this.$toolbar=$$6('<div class="w-e-bar w-e-bar-show w-e-toolbar"></div>'),this.menus={},this.toolbarItems=[],this.config={},this.changeToolbarState=lodash_debounce((function(){n.toolbarItems.forEach((function(e){e.changeMenuState();}));}),200),this.config=t;var r=$$6(e);if(0===r.length)throw new Error("Cannot find toolbar DOM by selector '"+e+"'");this.$box=r;var o=this.$toolbar;o.on("mousedown",(function(e){return e.preventDefault()})),r.append(o),Ol$1((function(){n.registerItems(),n.changeToolbarState(),n.getEditorInstance().on("change",n.changeToolbarState);}));}return e.prototype.getMenus=function(){return this.menus},e.prototype.getConfig=function(){return this.config},e.prototype.registerItems=function(){var e=this,t="",n=this.$toolbar,r=this.config,o=r.toolbarKeys,i=void 0===o?[]:o,a=r.excludeKeys,s=void 0===a?[]:a,l=i.filter((function(e){if("string"==typeof e){if(s.includes(e))return !1}else if(s.includes(e.key))return !1;return !0})),u=l.length;l.forEach((function(r,o){if("|"===r){if(0===o)return;if(o+1===u)return;if("|"===t)return;var i=Nu$1();return n.append(i),void(t=r)}if("string"==typeof r)return e.registerSingleItem(r,e),void(t=r);e.registerGroup(r),t="group";}));},e.prototype.registerGroup=function(e){var t=this,n=this.$toolbar,r=function(e){return new $u$1(e)}(e),o=e.menuKeys;(void 0===o?[]:o).forEach((function(e){t.registerSingleItem(e,r);})),n.append(r.$elem);},e.prototype.registerSingleItem=function(e,t){var n=this.getEditorInstance(),r=t instanceof $u$1,o=this.menus,i=o[e];if(null==i){var a=pi$1[e];if(null==a)throw new Error("Not found menu item factory by key '"+e+"'");if("function"!=typeof a)throw new Error("Menu item factory (key='"+e+"') is not a function");i=a(),o[e]=i;}else console.warn("Duplicated toolbar menu key '"+e+"'\n重复注册了菜单栏 menu '"+e+"'");var s=Vu$1(i,r);(this.toolbarItems.push(s),No$1.set(s,n),r)?t.appendBarItem(s):t.$toolbar.append(s.$elem);},e.prototype.getEditorInstance=function(){var e=ko$1.get(this);if(null==e)throw new Error("Can not get editor instance");return e},e.prototype.destroy=function(){this.$toolbar.remove(),this.menus={},this.toolbarItems=[];},e}();function Yu$1(e,t){if(null==e)throw new Error("Cannot create toolbar, because editor is null");var n=t.toolbarSelector,r=t.config,o=void 0===r?{}:r;if(function(e,t){return Ku$1(e,"data-w-e-toolbar",t)}(e,n))throw new Error("Repeated create toolbar by toolbarSelector '"+n+"'");var i=Wr$2({toolbarKeys:[],excludeKeys:[]},o||{}),a=new Gu$1(n,i);return ko$1.set(a,e),Eo$1.set(e,a),a}var Xu$1=Te$6.f,Qu$1=Function.prototype,Zu$1=Qu$1.toString,ec$1=/^\s*function ([^ (]*)/;function tc$1(e){var t=e.server,n=void 0===t?"":t,r=e.fieldName,o=void 0===r?"":r,i=e.maxFileSize,a=void 0===i?10485760:i,s=e.maxNumberOfFiles,l=void 0===s?100:s,u=e.meta,c=void 0===u?{}:u,f=e.metaWithUrl,d=void 0!==f&&f,h=e.headers,p=void 0===h?{}:h,g=e.withCredentials,v=void 0!==g&&g,y=e.timeout,m=void 0===y?1e4:y,w=e.onBeforeUpload,b=void 0===w?function(e){return e}:w,x=e.onSuccess,S=void 0===x?function(e,t){}:x,k=e.onError,E=void 0===k?function(e,t,n){console.error(e.name+" upload error",t,n),alert(e.name+" upload error");}:k,O=e.onProgress,C=void 0===O?function(e){}:O;if(!n)throw new Error("Cannot get upload server address\n没有配置上传地址");if(!o)throw new Error("Cannot get fieldName\n没有配置 fieldName");var N=n;d&&(N=function(e,t){var n=Vr$2(e.split("#"),2),r=n[0],o=n[1],i=[];lodash_foreach(t,(function(e,t){i.push(t+"="+e);}));var a=i.join("&");return r=r.indexOf("?")>0?r+"&"+a:r+"?"+a,o?r+"#"+o:r}(N,c));var M=lib$2({onBeforeUpload:b,restrictions:{maxFileSize:a,maxNumberOfFiles:l},meta:c}).use(lib,{endpoint:N,headers:p,formData:!0,fieldName:o,bundle:!0,withCredentials:v,timeout:m});return M.on("upload-success",(function(e,t){var n=t.body;S(e,void 0===n?{}:n),M.removeFile(e.id);})),M.on("progress",(function(e){C(e);})),M.on("error",(function(e){console.error("wangEditor file upload error",e.stack);})),M.on("upload-error",(function(e,t,n){E(e,t,n),M.removeFile(e.id);})),M}function nc$1(e){return (nc$1="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function rc$1(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function oc$1(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?Object(arguments[t]):{},r=Object.keys(n);"function"==typeof Object.getOwnPropertySymbols&&(r=r.concat(Object.getOwnPropertySymbols(n).filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable})))),r.forEach((function(t){rc$1(e,t,n[t]);}));}return e}function ic$1(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function ac$1(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r);}}function sc$1(e,t,n){return t&&ac$1(e.prototype,t),n&&ac$1(e,n),e}function lc$1(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function uc$1(e,t){if(t&&("object"===nc$1(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return lc$1(e)}function cc$1(e){return (cc$1=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function fc$1(e,t){return (fc$1=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function dc$1(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&fc$1(e,t);}ke$6&&!("name"in Qu$1)&&Xu$1(Qu$1,"name",{configurable:!0,get:function(){try{return Zu$1.call(this).match(ec$1)[1]}catch(e){return ""}}});var hc$1={type:"logger",log:function(e){this.output("log",e);},warn:function(e){this.output("warn",e);},error:function(e){this.output("error",e);},output:function(e,t){console&&console[e]&&console[e].apply(console,t);}},pc$1=new(function(){function e(t){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};ic$1(this,e),this.init(t,n);}return sc$1(e,[{key:"init",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};this.prefix=t.prefix||"i18next:",this.logger=e||hc$1,this.options=t,this.debug=t.debug;}},{key:"setDebug",value:function(e){this.debug=e;}},{key:"log",value:function(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return this.forward(t,"log","",!0)}},{key:"warn",value:function(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return this.forward(t,"warn","",!0)}},{key:"error",value:function(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return this.forward(t,"error","")}},{key:"deprecate",value:function(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return this.forward(t,"warn","WARNING DEPRECATED: ",!0)}},{key:"forward",value:function(e,t,n,r){return r&&!this.debug?null:("string"==typeof e[0]&&(e[0]="".concat(n).concat(this.prefix," ").concat(e[0])),this.logger[t](e))}},{key:"create",value:function(t){return new e(this.logger,oc$1({},{prefix:"".concat(this.prefix,":").concat(t,":")},this.options))}}]),e}()),gc$1=function(){function e(){ic$1(this,e),this.observers={};}return sc$1(e,[{key:"on",value:function(e,t){var n=this;return e.split(" ").forEach((function(e){n.observers[e]=n.observers[e]||[],n.observers[e].push(t);})),this}},{key:"off",value:function(e,t){this.observers[e]&&(t?this.observers[e]=this.observers[e].filter((function(e){return e!==t})):delete this.observers[e]);}},{key:"emit",value:function(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),r=1;r<t;r++)n[r-1]=arguments[r];if(this.observers[e]){var o=[].concat(this.observers[e]);o.forEach((function(e){e.apply(void 0,n);}));}if(this.observers["*"]){var i=[].concat(this.observers["*"]);i.forEach((function(t){t.apply(t,[e].concat(n));}));}}}]),e}();function vc$1(){var e,t,n=new Promise((function(n,r){e=n,t=r;}));return n.resolve=e,n.reject=t,n}function yc$1(e){return null==e?"":""+e}function mc$1(e,t,n){e.forEach((function(e){t[e]&&(n[e]=t[e]);}));}function wc$1(e,t,n){function r(e){return e&&e.indexOf("###")>-1?e.replace(/###/g,"."):e}function o(){return !e||"string"==typeof e}for(var i="string"!=typeof t?[].concat(t):t.split(".");i.length>1;){if(o())return {};var a=r(i.shift());!e[a]&&n&&(e[a]=new n),e=Object.prototype.hasOwnProperty.call(e,a)?e[a]:{};}return o()?{}:{obj:e,k:r(i.shift())}}function bc$1(e,t,n){var r=wc$1(e,t,Object);r.obj[r.k]=n;}function xc$1(e,t){var n=wc$1(e,t),r=n.obj,o=n.k;if(r)return r[o]}function Sc$1(e,t,n){var r=xc$1(e,n);return void 0!==r?r:xc$1(t,n)}function kc$1(e,t,n){for(var r in t)"__proto__"!==r&&"constructor"!==r&&(r in e?"string"==typeof e[r]||e[r]instanceof String||"string"==typeof t[r]||t[r]instanceof String?n&&(e[r]=t[r]):kc$1(e[r],t[r],n):e[r]=t[r]);return e}function Ec$1(e){return e.replace(/[\-\[\]\/\{\}\(\)\*\+\?\.\\\^\$\|]/g,"\\$&")}var Oc$1={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#39;","/":"&#x2F;"};function Cc$1(e){return "string"==typeof e?e.replace(/[&<>"'\/]/g,(function(e){return Oc$1[e]})):e}var Nc$1="undefined"!=typeof window&&window.navigator&&window.navigator.userAgent&&window.navigator.userAgent.indexOf("MSIE")>-1;function Mc$1(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:".";if(e){if(e[t])return e[t];for(var r=t.split(n),o=e,i=0;i<r.length;++i){if("string"==typeof o[r[i]]&&i+1<r.length)return;if(void 0===o[r[i]]){for(var a=2,s=r.slice(i,i+a).join(n),l=o[s];void 0===l&&r.length>i+a;)a++,l=o[s=r.slice(i,i+a).join(n)];if(void 0===l)return;if("string"==typeof l)return l;if(s&&"string"==typeof l[s])return l[s];var u=r.slice(i+a).join(n);return u?Mc$1(l,u,n):void 0}o=o[r[i]];}return o}}var Lc$1=function(e){function t(e){var n,r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{ns:["translation"],defaultNS:"translation"};return ic$1(this,t),n=uc$1(this,cc$1(t).call(this)),Nc$1&&gc$1.call(lc$1(n)),n.data=e||{},n.options=r,void 0===n.options.keySeparator&&(n.options.keySeparator="."),void 0===n.options.ignoreJSONStructure&&(n.options.ignoreJSONStructure=!0),n}return dc$1(t,gc$1),sc$1(t,[{key:"addNamespaces",value:function(e){this.options.ns.indexOf(e)<0&&this.options.ns.push(e);}},{key:"removeNamespaces",value:function(e){var t=this.options.ns.indexOf(e);t>-1&&this.options.ns.splice(t,1);}},{key:"getResource",value:function(e,t,n){var r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{},o=void 0!==r.keySeparator?r.keySeparator:this.options.keySeparator,i=void 0!==r.ignoreJSONStructure?r.ignoreJSONStructure:this.options.ignoreJSONStructure,a=[e,t];n&&"string"!=typeof n&&(a=a.concat(n)),n&&"string"==typeof n&&(a=a.concat(o?n.split(o):n)),e.indexOf(".")>-1&&(a=e.split("."));var s=xc$1(this.data,a);return s||!i||"string"!=typeof n?s:Mc$1(this.data&&this.data[e]&&this.data[e][t],n,o)}},{key:"addResource",value:function(e,t,n,r){var o=arguments.length>4&&void 0!==arguments[4]?arguments[4]:{silent:!1},i=this.options.keySeparator;void 0===i&&(i=".");var a=[e,t];n&&(a=a.concat(i?n.split(i):n)),e.indexOf(".")>-1&&(r=t,t=(a=e.split("."))[1]),this.addNamespaces(t),bc$1(this.data,a,r),o.silent||this.emit("added",e,t,n,r);}},{key:"addResources",value:function(e,t,n){var r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{silent:!1};for(var o in n)"string"!=typeof n[o]&&"[object Array]"!==Object.prototype.toString.apply(n[o])||this.addResource(e,t,o,n[o],{silent:!0});r.silent||this.emit("added",e,t,n);}},{key:"addResourceBundle",value:function(e,t,n,r,o){var i=arguments.length>5&&void 0!==arguments[5]?arguments[5]:{silent:!1},a=[e,t];e.indexOf(".")>-1&&(r=n,n=t,t=(a=e.split("."))[1]),this.addNamespaces(t);var s=xc$1(this.data,a)||{};r?kc$1(s,n,o):s=oc$1({},s,n),bc$1(this.data,a,s),i.silent||this.emit("added",e,t,n);}},{key:"removeResourceBundle",value:function(e,t){this.hasResourceBundle(e,t)&&delete this.data[e][t],this.removeNamespaces(t),this.emit("removed",e,t);}},{key:"hasResourceBundle",value:function(e,t){return void 0!==this.getResource(e,t)}},{key:"getResourceBundle",value:function(e,t){return t||(t=this.options.defaultNS),"v1"===this.options.compatibilityAPI?oc$1({},{},this.getResource(e,t)):this.getResource(e,t)}},{key:"getDataByLanguage",value:function(e){return this.data[e]}},{key:"toJSON",value:function(){return this.data}}]),t}(),Pc$1={processors:{},addPostProcessor:function(e){this.processors[e.name]=e;},handle:function(e,t,n,r,o){var i=this;return e.forEach((function(e){i.processors[e]&&(t=i.processors[e].process(t,n,r,o));})),t}},Tc$1={},Dc$1=function(e){function t(e){var n,r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return ic$1(this,t),n=uc$1(this,cc$1(t).call(this)),Nc$1&&gc$1.call(lc$1(n)),mc$1(["resourceStore","languageUtils","pluralResolver","interpolator","backendConnector","i18nFormat","utils"],e,lc$1(n)),n.options=r,void 0===n.options.keySeparator&&(n.options.keySeparator="."),n.logger=pc$1.create("translator"),n}return dc$1(t,gc$1),sc$1(t,[{key:"changeLanguage",value:function(e){e&&(this.language=e);}},{key:"exists",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{interpolation:{}};if(null==e)return !1;var n=this.resolve(e,t);return n&&void 0!==n.res}},{key:"extractFromKey",value:function(e,t){var n=void 0!==t.nsSeparator?t.nsSeparator:this.options.nsSeparator;void 0===n&&(n=":");var r=void 0!==t.keySeparator?t.keySeparator:this.options.keySeparator,o=t.ns||this.options.defaultNS;if(n&&e.indexOf(n)>-1){var i=e.match(this.interpolator.nestingRegexp);if(i&&i.length>0)return {key:e,namespaces:o};var a=e.split(n);(n!==r||n===r&&this.options.ns.indexOf(a[0])>-1)&&(o=a.shift()),e=a.join(r);}return "string"==typeof o&&(o=[o]),{key:e,namespaces:o}}},{key:"translate",value:function(e,n,r){var o=this;if("object"!==nc$1(n)&&this.options.overloadTranslationOptionHandler&&(n=this.options.overloadTranslationOptionHandler(arguments)),n||(n={}),null==e)return "";Array.isArray(e)||(e=[String(e)]);var i=void 0!==n.keySeparator?n.keySeparator:this.options.keySeparator,a=this.extractFromKey(e[e.length-1],n),s=a.key,l=a.namespaces,u=l[l.length-1],c=n.lng||this.language,f=n.appendNamespaceToCIMode||this.options.appendNamespaceToCIMode;if(c&&"cimode"===c.toLowerCase()){if(f){var d=n.nsSeparator||this.options.nsSeparator;return u+d+s}return s}var h=this.resolve(e,n),p=h&&h.res,g=h&&h.usedKey||s,v=h&&h.exactUsedKey||s,y=Object.prototype.toString.apply(p),m=["[object Number]","[object Function]","[object RegExp]"],w=void 0!==n.joinArrays?n.joinArrays:this.options.joinArrays,b=!this.i18nFormat||this.i18nFormat.handleAsObject,x="string"!=typeof p&&"boolean"!=typeof p&&"number"!=typeof p;if(b&&p&&x&&m.indexOf(y)<0&&("string"!=typeof w||"[object Array]"!==y)){if(!n.returnObjects&&!this.options.returnObjects)return this.options.returnedObjectHandler||this.logger.warn("accessing an object - but returnObjects options is not enabled!"),this.options.returnedObjectHandler?this.options.returnedObjectHandler(g,p,oc$1({},n,{ns:l})):"key '".concat(s," (").concat(this.language,")' returned an object instead of string.");if(i){var S="[object Array]"===y,k=S?[]:{},E=S?v:g;for(var O in p)if(Object.prototype.hasOwnProperty.call(p,O)){var C="".concat(E).concat(i).concat(O);k[O]=this.translate(C,oc$1({},n,{joinArrays:!1,ns:l})),k[O]===C&&(k[O]=p[O]);}p=k;}}else if(b&&"string"==typeof w&&"[object Array]"===y)(p=p.join(w))&&(p=this.extendTranslation(p,e,n,r));else {var N=!1,M=!1,L=void 0!==n.count&&"string"!=typeof n.count,P=t.hasDefaultValue(n),T=L?this.pluralResolver.getSuffix(c,n.count):"",D=n["defaultValue".concat(T)]||n.defaultValue;!this.isValidLookup(p)&&P&&(N=!0,p=D),this.isValidLookup(p)||(M=!0,p=s);var j=P&&D!==p&&this.options.updateMissing;if(M||N||j){if(this.logger.log(j?"updateKey":"missingKey",c,u,s,j?D:p),i){var R=this.resolve(s,oc$1({},n,{keySeparator:!1}));R&&R.res&&this.logger.warn("Seems the loaded translations were in flat JSON format instead of nested. Either set keySeparator: false on init or make sure your translations are published in nested format.");}var A=[],F=this.languageUtils.getFallbackCodes(this.options.fallbackLng,n.lng||this.language);if("fallback"===this.options.saveMissingTo&&F&&F[0])for(var I=0;I<F.length;I++)A.push(F[I]);else "all"===this.options.saveMissingTo?A=this.languageUtils.toResolveHierarchy(n.lng||this.language):A.push(n.lng||this.language);var B=function(e,t,r){o.options.missingKeyHandler?o.options.missingKeyHandler(e,u,t,j?r:p,j,n):o.backendConnector&&o.backendConnector.saveMissing&&o.backendConnector.saveMissing(e,u,t,j?r:p,j,n),o.emit("missingKey",e,u,t,p);};this.options.saveMissing&&(this.options.saveMissingPlurals&&L?A.forEach((function(e){o.pluralResolver.getSuffixes(e).forEach((function(t){B([e],s+t,n["defaultValue".concat(t)]||D);}));})):B(A,s,D));}p=this.extendTranslation(p,e,n,h,r),M&&p===s&&this.options.appendNamespaceToMissingKey&&(p="".concat(u,":").concat(s)),(M||N)&&this.options.parseMissingKeyHandler&&(p=this.options.parseMissingKeyHandler(p));}return p}},{key:"extendTranslation",value:function(e,t,n,r,o){var i=this;if(this.i18nFormat&&this.i18nFormat.parse)e=this.i18nFormat.parse(e,n,r.usedLng,r.usedNS,r.usedKey,{resolved:r});else if(!n.skipInterpolation){n.interpolation&&this.interpolator.init(oc$1({},n,{interpolation:oc$1({},this.options.interpolation,n.interpolation)}));var a,s=n.interpolation&&n.interpolation.skipOnVariables||this.options.interpolation.skipOnVariables;if(s){var l=e.match(this.interpolator.nestingRegexp);a=l&&l.length;}var u=n.replace&&"string"!=typeof n.replace?n.replace:n;if(this.options.interpolation.defaultVariables&&(u=oc$1({},this.options.interpolation.defaultVariables,u)),e=this.interpolator.interpolate(e,u,n.lng||this.language,n),s){var c=e.match(this.interpolator.nestingRegexp);a<(c&&c.length)&&(n.nest=!1);}!1!==n.nest&&(e=this.interpolator.nest(e,(function(){for(var e=arguments.length,r=new Array(e),a=0;a<e;a++)r[a]=arguments[a];return o&&o[0]===r[0]&&!n.context?(i.logger.warn("It seems you are nesting recursively key: ".concat(r[0]," in key: ").concat(t[0])),null):i.translate.apply(i,r.concat([t]))}),n)),n.interpolation&&this.interpolator.reset();}var f=n.postProcess||this.options.postProcess,d="string"==typeof f?[f]:f;return null!=e&&d&&d.length&&!1!==n.applyPostProcessor&&(e=Pc$1.handle(d,e,t,this.options&&this.options.postProcessPassResolved?oc$1({i18nResolved:r},n):n,this)),e}},{key:"resolve",value:function(e){var t,n,r,o,i,a=this,s=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return "string"==typeof e&&(e=[e]),e.forEach((function(e){if(!a.isValidLookup(t)){var l=a.extractFromKey(e,s),u=l.key;n=u;var c=l.namespaces;a.options.fallbackNS&&(c=c.concat(a.options.fallbackNS));var f=void 0!==s.count&&"string"!=typeof s.count,d=void 0!==s.context&&("string"==typeof s.context||"number"==typeof s.context)&&""!==s.context,h=s.lngs?s.lngs:a.languageUtils.toResolveHierarchy(s.lng||a.language,s.fallbackLng);c.forEach((function(e){a.isValidLookup(t)||(i=e,!Tc$1["".concat(h[0],"-").concat(e)]&&a.utils&&a.utils.hasLoadedNamespace&&!a.utils.hasLoadedNamespace(i)&&(Tc$1["".concat(h[0],"-").concat(e)]=!0,a.logger.warn('key "'.concat(n,'" for languages "').concat(h.join(", "),'" won\'t get resolved as namespace "').concat(i,'" was not yet loaded'),"This means something IS WRONG in your setup. You access the t function before i18next.init / i18next.loadNamespace / i18next.changeLanguage was done. Wait for the callback or Promise to resolve before accessing it!!!")),h.forEach((function(n){if(!a.isValidLookup(t)){o=n;var i,l,c=u,h=[c];if(a.i18nFormat&&a.i18nFormat.addLookupKeys)a.i18nFormat.addLookupKeys(h,u,n,e,s);else f&&(i=a.pluralResolver.getSuffix(n,s.count)),f&&d&&h.push(c+i),d&&h.push(c+="".concat(a.options.contextSeparator).concat(s.context)),f&&h.push(c+=i);for(;l=h.pop();)a.isValidLookup(t)||(r=l,t=a.getResource(n,e,l,s));}})));}));}})),{res:t,usedKey:n,exactUsedKey:r,usedLng:o,usedNS:i}}},{key:"isValidLookup",value:function(e){return !(void 0===e||!this.options.returnNull&&null===e||!this.options.returnEmptyString&&""===e)}},{key:"getResource",value:function(e,t,n){var r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};return this.i18nFormat&&this.i18nFormat.getResource?this.i18nFormat.getResource(e,t,n,r):this.resourceStore.getResource(e,t,n,r)}}],[{key:"hasDefaultValue",value:function(e){var t="defaultValue";for(var n in e)if(Object.prototype.hasOwnProperty.call(e,n)&&t===n.substring(0,t.length)&&void 0!==e[n])return !0;return !1}}]),t}();function jc$1(e){return e.charAt(0).toUpperCase()+e.slice(1)}var Rc$1=function(){function e(t){ic$1(this,e),this.options=t,this.whitelist=this.options.supportedLngs||!1,this.supportedLngs=this.options.supportedLngs||!1,this.logger=pc$1.create("languageUtils");}return sc$1(e,[{key:"getScriptPartFromCode",value:function(e){if(!e||e.indexOf("-")<0)return null;var t=e.split("-");return 2===t.length?null:(t.pop(),"x"===t[t.length-1].toLowerCase()?null:this.formatLanguageCode(t.join("-")))}},{key:"getLanguagePartFromCode",value:function(e){if(!e||e.indexOf("-")<0)return e;var t=e.split("-");return this.formatLanguageCode(t[0])}},{key:"formatLanguageCode",value:function(e){if("string"==typeof e&&e.indexOf("-")>-1){var t=["hans","hant","latn","cyrl","cans","mong","arab"],n=e.split("-");return this.options.lowerCaseLng?n=n.map((function(e){return e.toLowerCase()})):2===n.length?(n[0]=n[0].toLowerCase(),n[1]=n[1].toUpperCase(),t.indexOf(n[1].toLowerCase())>-1&&(n[1]=jc$1(n[1].toLowerCase()))):3===n.length&&(n[0]=n[0].toLowerCase(),2===n[1].length&&(n[1]=n[1].toUpperCase()),"sgn"!==n[0]&&2===n[2].length&&(n[2]=n[2].toUpperCase()),t.indexOf(n[1].toLowerCase())>-1&&(n[1]=jc$1(n[1].toLowerCase())),t.indexOf(n[2].toLowerCase())>-1&&(n[2]=jc$1(n[2].toLowerCase()))),n.join("-")}return this.options.cleanCode||this.options.lowerCaseLng?e.toLowerCase():e}},{key:"isWhitelisted",value:function(e){return this.logger.deprecate("languageUtils.isWhitelisted",'function "isWhitelisted" will be renamed to "isSupportedCode" in the next major - please make sure to rename it\'s usage asap.'),this.isSupportedCode(e)}},{key:"isSupportedCode",value:function(e){return ("languageOnly"===this.options.load||this.options.nonExplicitSupportedLngs)&&(e=this.getLanguagePartFromCode(e)),!this.supportedLngs||!this.supportedLngs.length||this.supportedLngs.indexOf(e)>-1}},{key:"getBestMatchFromCodes",value:function(e){var t,n=this;return e?(e.forEach((function(e){if(!t){var r=n.formatLanguageCode(e);n.options.supportedLngs&&!n.isSupportedCode(r)||(t=r);}})),!t&&this.options.supportedLngs&&e.forEach((function(e){if(!t){var r=n.getLanguagePartFromCode(e);if(n.isSupportedCode(r))return t=r;t=n.options.supportedLngs.find((function(e){if(0===e.indexOf(r))return e}));}})),t||(t=this.getFallbackCodes(this.options.fallbackLng)[0]),t):null}},{key:"getFallbackCodes",value:function(e,t){if(!e)return [];if("function"==typeof e&&(e=e(t)),"string"==typeof e&&(e=[e]),"[object Array]"===Object.prototype.toString.apply(e))return e;if(!t)return e.default||[];var n=e[t];return n||(n=e[this.getScriptPartFromCode(t)]),n||(n=e[this.formatLanguageCode(t)]),n||(n=e[this.getLanguagePartFromCode(t)]),n||(n=e.default),n||[]}},{key:"toResolveHierarchy",value:function(e,t){var n=this,r=this.getFallbackCodes(t||this.options.fallbackLng||[],e),o=[],i=function(e){e&&(n.isSupportedCode(e)?o.push(e):n.logger.warn("rejecting language code not found in supportedLngs: ".concat(e)));};return "string"==typeof e&&e.indexOf("-")>-1?("languageOnly"!==this.options.load&&i(this.formatLanguageCode(e)),"languageOnly"!==this.options.load&&"currentOnly"!==this.options.load&&i(this.getScriptPartFromCode(e)),"currentOnly"!==this.options.load&&i(this.getLanguagePartFromCode(e))):"string"==typeof e&&i(this.formatLanguageCode(e)),r.forEach((function(e){o.indexOf(e)<0&&i(n.formatLanguageCode(e));})),o}}]),e}(),Ac$1=[{lngs:["ach","ak","am","arn","br","fil","gun","ln","mfe","mg","mi","oc","pt","pt-BR","tg","tl","ti","tr","uz","wa"],nr:[1,2],fc:1},{lngs:["af","an","ast","az","bg","bn","ca","da","de","dev","el","en","eo","es","et","eu","fi","fo","fur","fy","gl","gu","ha","hi","hu","hy","ia","it","kk","kn","ku","lb","mai","ml","mn","mr","nah","nap","nb","ne","nl","nn","no","nso","pa","pap","pms","ps","pt-PT","rm","sco","se","si","so","son","sq","sv","sw","ta","te","tk","ur","yo"],nr:[1,2],fc:2},{lngs:["ay","bo","cgg","fa","ht","id","ja","jbo","ka","km","ko","ky","lo","ms","sah","su","th","tt","ug","vi","wo","zh"],nr:[1],fc:3},{lngs:["be","bs","cnr","dz","hr","ru","sr","uk"],nr:[1,2,5],fc:4},{lngs:["ar"],nr:[0,1,2,3,11,100],fc:5},{lngs:["cs","sk"],nr:[1,2,5],fc:6},{lngs:["csb","pl"],nr:[1,2,5],fc:7},{lngs:["cy"],nr:[1,2,3,8],fc:8},{lngs:["fr"],nr:[1,2],fc:9},{lngs:["ga"],nr:[1,2,3,7,11],fc:10},{lngs:["gd"],nr:[1,2,3,20],fc:11},{lngs:["is"],nr:[1,2],fc:12},{lngs:["jv"],nr:[0,1],fc:13},{lngs:["kw"],nr:[1,2,3,4],fc:14},{lngs:["lt"],nr:[1,2,10],fc:15},{lngs:["lv"],nr:[1,2,0],fc:16},{lngs:["mk"],nr:[1,2],fc:17},{lngs:["mnk"],nr:[0,1,2],fc:18},{lngs:["mt"],nr:[1,2,11,20],fc:19},{lngs:["or"],nr:[2,1],fc:2},{lngs:["ro"],nr:[1,2,20],fc:20},{lngs:["sl"],nr:[5,1,2,3],fc:21},{lngs:["he","iw"],nr:[1,2,20,21],fc:22}],Fc$1={1:function(e){return Number(e>1)},2:function(e){return Number(1!=e)},3:function(e){return 0},4:function(e){return Number(e%10==1&&e%100!=11?0:e%10>=2&&e%10<=4&&(e%100<10||e%100>=20)?1:2)},5:function(e){return Number(0==e?0:1==e?1:2==e?2:e%100>=3&&e%100<=10?3:e%100>=11?4:5)},6:function(e){return Number(1==e?0:e>=2&&e<=4?1:2)},7:function(e){return Number(1==e?0:e%10>=2&&e%10<=4&&(e%100<10||e%100>=20)?1:2)},8:function(e){return Number(1==e?0:2==e?1:8!=e&&11!=e?2:3)},9:function(e){return Number(e>=2)},10:function(e){return Number(1==e?0:2==e?1:e<7?2:e<11?3:4)},11:function(e){return Number(1==e||11==e?0:2==e||12==e?1:e>2&&e<20?2:3)},12:function(e){return Number(e%10!=1||e%100==11)},13:function(e){return Number(0!==e)},14:function(e){return Number(1==e?0:2==e?1:3==e?2:3)},15:function(e){return Number(e%10==1&&e%100!=11?0:e%10>=2&&(e%100<10||e%100>=20)?1:2)},16:function(e){return Number(e%10==1&&e%100!=11?0:0!==e?1:2)},17:function(e){return Number(1==e||e%10==1&&e%100!=11?0:1)},18:function(e){return Number(0==e?0:1==e?1:2)},19:function(e){return Number(1==e?0:0==e||e%100>1&&e%100<11?1:e%100>10&&e%100<20?2:3)},20:function(e){return Number(1==e?0:0==e||e%100>0&&e%100<20?1:2)},21:function(e){return Number(e%100==1?1:e%100==2?2:e%100==3||e%100==4?3:0)},22:function(e){return Number(1==e?0:2==e?1:(e<0||e>10)&&e%10==0?2:3)}};function Ic$1(){var e={};return Ac$1.forEach((function(t){t.lngs.forEach((function(n){e[n]={numbers:t.nr,plurals:Fc$1[t.fc]};}));})),e}var Bc$1=function(){function e(t){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};ic$1(this,e),this.languageUtils=t,this.options=n,this.logger=pc$1.create("pluralResolver"),this.rules=Ic$1();}return sc$1(e,[{key:"addRule",value:function(e,t){this.rules[e]=t;}},{key:"getRule",value:function(e){return this.rules[e]||this.rules[this.languageUtils.getLanguagePartFromCode(e)]}},{key:"needsPlural",value:function(e){var t=this.getRule(e);return t&&t.numbers.length>1}},{key:"getPluralFormsOfKey",value:function(e,t){return this.getSuffixes(e).map((function(e){return t+e}))}},{key:"getSuffixes",value:function(e){var t=this,n=this.getRule(e);return n?n.numbers.map((function(n){return t.getSuffix(e,n)})):[]}},{key:"getSuffix",value:function(e,t){var n=this,r=this.getRule(e);if(r){var o=r.noAbs?r.plurals(t):r.plurals(Math.abs(t)),i=r.numbers[o];this.options.simplifyPluralSuffix&&2===r.numbers.length&&1===r.numbers[0]&&(2===i?i="plural":1===i&&(i=""));var a=function(){return n.options.prepend&&i.toString()?n.options.prepend+i.toString():i.toString()};return "v1"===this.options.compatibilityJSON?1===i?"":"number"==typeof i?"_plural_".concat(i.toString()):a():"v2"===this.options.compatibilityJSON||this.options.simplifyPluralSuffix&&2===r.numbers.length&&1===r.numbers[0]?a():this.options.prepend&&o.toString()?this.options.prepend+o.toString():o.toString()}return this.logger.warn("no plural rule found for: ".concat(e)),""}}]),e}(),_c$1=function(){function e(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};ic$1(this,e),this.logger=pc$1.create("interpolator"),this.options=t,this.format=t.interpolation&&t.interpolation.format||function(e){return e},this.init(t);}return sc$1(e,[{key:"init",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};e.interpolation||(e.interpolation={escapeValue:!0});var t=e.interpolation;this.escape=void 0!==t.escape?t.escape:Cc$1,this.escapeValue=void 0===t.escapeValue||t.escapeValue,this.useRawValueToEscape=void 0!==t.useRawValueToEscape&&t.useRawValueToEscape,this.prefix=t.prefix?Ec$1(t.prefix):t.prefixEscaped||"{{",this.suffix=t.suffix?Ec$1(t.suffix):t.suffixEscaped||"}}",this.formatSeparator=t.formatSeparator?t.formatSeparator:t.formatSeparator||",",this.unescapePrefix=t.unescapeSuffix?"":t.unescapePrefix||"-",this.unescapeSuffix=this.unescapePrefix?"":t.unescapeSuffix||"",this.nestingPrefix=t.nestingPrefix?Ec$1(t.nestingPrefix):t.nestingPrefixEscaped||Ec$1("$t("),this.nestingSuffix=t.nestingSuffix?Ec$1(t.nestingSuffix):t.nestingSuffixEscaped||Ec$1(")"),this.nestingOptionsSeparator=t.nestingOptionsSeparator?t.nestingOptionsSeparator:t.nestingOptionsSeparator||",",this.maxReplaces=t.maxReplaces?t.maxReplaces:1e3,this.alwaysFormat=void 0!==t.alwaysFormat&&t.alwaysFormat,this.resetRegExp();}},{key:"reset",value:function(){this.options&&this.init(this.options);}},{key:"resetRegExp",value:function(){var e="".concat(this.prefix,"(.+?)").concat(this.suffix);this.regexp=new RegExp(e,"g");var t="".concat(this.prefix).concat(this.unescapePrefix,"(.+?)").concat(this.unescapeSuffix).concat(this.suffix);this.regexpUnescape=new RegExp(t,"g");var n="".concat(this.nestingPrefix,"(.+?)").concat(this.nestingSuffix);this.nestingRegexp=new RegExp(n,"g");}},{key:"interpolate",value:function(e,t,n,r){var o,i,a,s=this,l=this.options&&this.options.interpolation&&this.options.interpolation.defaultVariables||{};function u(e){return e.replace(/\$/g,"$$$$")}var c=function(e){if(e.indexOf(s.formatSeparator)<0){var o=Sc$1(t,l,e);return s.alwaysFormat?s.format(o,void 0,n,oc$1({},r,t,{interpolationkey:e})):o}var i=e.split(s.formatSeparator),a=i.shift().trim(),u=i.join(s.formatSeparator).trim();return s.format(Sc$1(t,l,a),u,n,oc$1({},r,t,{interpolationkey:a}))};this.resetRegExp();var f=r&&r.missingInterpolationHandler||this.options.missingInterpolationHandler,d=r&&r.interpolation&&r.interpolation.skipOnVariables||this.options.interpolation.skipOnVariables;return [{regex:this.regexpUnescape,safeValue:function(e){return u(e)}},{regex:this.regexp,safeValue:function(e){return s.escapeValue?u(s.escape(e)):u(e)}}].forEach((function(t){for(a=0;o=t.regex.exec(e);){if(void 0===(i=c(o[1].trim())))if("function"==typeof f){var n=f(e,o,r);i="string"==typeof n?n:"";}else {if(d){i=o[0];continue}s.logger.warn("missed to pass in variable ".concat(o[1]," for interpolating ").concat(e)),i="";}else "string"==typeof i||s.useRawValueToEscape||(i=yc$1(i));var l=t.safeValue(i);if(e=e.replace(o[0],l),d?(t.regex.lastIndex+=l.length,t.regex.lastIndex-=o[0].length):t.regex.lastIndex=0,++a>=s.maxReplaces)break}})),e}},{key:"nest",value:function(e,t){var n,r,o=this,i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},a=oc$1({},i);function s(e,t){var n=this.nestingOptionsSeparator;if(e.indexOf(n)<0)return e;var r=e.split(new RegExp("".concat(n,"[ ]*{"))),o="{".concat(r[1]);e=r[0],o=(o=this.interpolate(o,a)).replace(/'/g,'"');try{a=JSON.parse(o),t&&(a=oc$1({},t,a));}catch(t){return this.logger.warn("failed parsing options string in nesting for key ".concat(e),t),"".concat(e).concat(n).concat(o)}return delete a.defaultValue,e}for(a.applyPostProcessor=!1,delete a.defaultValue;n=this.nestingRegexp.exec(e);){var l=[],u=!1;if(-1!==n[0].indexOf(this.formatSeparator)&&!/{.*}/.test(n[1])){var c=n[1].split(this.formatSeparator).map((function(e){return e.trim()}));n[1]=c.shift(),l=c,u=!0;}if((r=t(s.call(this,n[1].trim(),a),a))&&n[0]===e&&"string"!=typeof r)return r;"string"!=typeof r&&(r=yc$1(r)),r||(this.logger.warn("missed to resolve ".concat(n[1]," for nesting ").concat(e)),r=""),u&&(r=l.reduce((function(e,t){return o.format(e,t,i.lng,oc$1({},i,{interpolationkey:n[1].trim()}))}),r.trim())),e=e.replace(n[0],r),this.regexp.lastIndex=0;}return e}}]),e}();var $c$1=function(e){function t(e,n,r){var o,i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};return ic$1(this,t),o=uc$1(this,cc$1(t).call(this)),Nc$1&&gc$1.call(lc$1(o)),o.backend=e,o.store=n,o.services=r,o.languageUtils=r.languageUtils,o.options=i,o.logger=pc$1.create("backendConnector"),o.state={},o.queue=[],o.backend&&o.backend.init&&o.backend.init(r,i.backend,i),o}return dc$1(t,gc$1),sc$1(t,[{key:"queueLoad",value:function(e,t,n,r){var o=this,i=[],a=[],s=[],l=[];return e.forEach((function(e){var r=!0;t.forEach((function(t){var s="".concat(e,"|").concat(t);!n.reload&&o.store.hasResourceBundle(e,t)?o.state[s]=2:o.state[s]<0||(1===o.state[s]?a.indexOf(s)<0&&a.push(s):(o.state[s]=1,r=!1,a.indexOf(s)<0&&a.push(s),i.indexOf(s)<0&&i.push(s),l.indexOf(t)<0&&l.push(t)));})),r||s.push(e);})),(i.length||a.length)&&this.queue.push({pending:a,loaded:{},errors:[],callback:r}),{toLoad:i,pending:a,toLoadLanguages:s,toLoadNamespaces:l}}},{key:"loaded",value:function(e,t,n){var r=e.split("|"),o=r[0],i=r[1];t&&this.emit("failedLoading",o,i,t),n&&this.store.addResourceBundle(o,i,n),this.state[e]=t?-1:2;var a={};this.queue.forEach((function(n){!function(e,t,n,r){var o=wc$1(e,t,Object),i=o.obj,a=o.k;i[a]=i[a]||[],r&&(i[a]=i[a].concat(n)),r||i[a].push(n);}(n.loaded,[o],i),function(e,t){for(var n=e.indexOf(t);-1!==n;)e.splice(n,1),n=e.indexOf(t);}(n.pending,e),t&&n.errors.push(t),0!==n.pending.length||n.done||(Object.keys(n.loaded).forEach((function(e){a[e]||(a[e]=[]),n.loaded[e].length&&n.loaded[e].forEach((function(t){a[e].indexOf(t)<0&&a[e].push(t);}));})),n.done=!0,n.errors.length?n.callback(n.errors):n.callback());})),this.emit("loaded",a),this.queue=this.queue.filter((function(e){return !e.done}));}},{key:"read",value:function(e,t,n){var r=this,o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,i=arguments.length>4&&void 0!==arguments[4]?arguments[4]:350,a=arguments.length>5?arguments[5]:void 0;return e.length?this.backend[n](e,t,(function(s,l){s&&l&&o<5?setTimeout((function(){r.read.call(r,e,t,n,o+1,2*i,a);}),i):a(s,l);})):a(null,{})}},{key:"prepareLoading",value:function(e,t){var n=this,r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},o=arguments.length>3?arguments[3]:void 0;if(!this.backend)return this.logger.warn("No backend was added via i18next.use. Will not load resources."),o&&o();"string"==typeof e&&(e=this.languageUtils.toResolveHierarchy(e)),"string"==typeof t&&(t=[t]);var i=this.queueLoad(e,t,r,o);if(!i.toLoad.length)return i.pending.length||o(),null;i.toLoad.forEach((function(e){n.loadOne(e);}));}},{key:"load",value:function(e,t,n){this.prepareLoading(e,t,{},n);}},{key:"reload",value:function(e,t,n){this.prepareLoading(e,t,{reload:!0},n);}},{key:"loadOne",value:function(e){var t=this,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"",r=e.split("|"),o=r[0],i=r[1];this.read(o,i,"read",void 0,void 0,(function(r,a){r&&t.logger.warn("".concat(n,"loading namespace ").concat(i," for language ").concat(o," failed"),r),!r&&a&&t.logger.log("".concat(n,"loaded namespace ").concat(i," for language ").concat(o),a),t.loaded(e,r,a);}));}},{key:"saveMissing",value:function(e,t,n,r,o){var i=arguments.length>5&&void 0!==arguments[5]?arguments[5]:{};this.services.utils&&this.services.utils.hasLoadedNamespace&&!this.services.utils.hasLoadedNamespace(t)?this.logger.warn('did not save key "'.concat(n,'" as the namespace "').concat(t,'" was not yet loaded'),"This means something IS WRONG in your setup. You access the t function before i18next.init / i18next.loadNamespace / i18next.changeLanguage was done. Wait for the callback or Promise to resolve before accessing it!!!"):null!=n&&""!==n&&(this.backend&&this.backend.create&&this.backend.create(e,t,n,r,null,oc$1({},i,{isUpdate:o})),e&&e[0]&&this.store.addResource(e[0],t,n,r));}}]),t}();function Wc$1(){return {debug:!1,initImmediate:!0,ns:["translation"],defaultNS:["translation"],fallbackLng:["dev"],fallbackNS:!1,whitelist:!1,nonExplicitWhitelist:!1,supportedLngs:!1,nonExplicitSupportedLngs:!1,load:"all",preload:!1,simplifyPluralSuffix:!0,keySeparator:".",nsSeparator:":",pluralSeparator:"_",contextSeparator:"_",partialBundledLanguages:!1,saveMissing:!1,updateMissing:!1,saveMissingTo:"fallback",saveMissingPlurals:!0,missingKeyHandler:!1,missingInterpolationHandler:!1,postProcess:!1,postProcessPassResolved:!1,returnNull:!0,returnEmptyString:!0,returnObjects:!1,joinArrays:!1,returnedObjectHandler:!1,parseMissingKeyHandler:!1,appendNamespaceToMissingKey:!1,appendNamespaceToCIMode:!1,overloadTranslationOptionHandler:function(e){var t={};if("object"===nc$1(e[1])&&(t=e[1]),"string"==typeof e[1]&&(t.defaultValue=e[1]),"string"==typeof e[2]&&(t.tDescription=e[2]),"object"===nc$1(e[2])||"object"===nc$1(e[3])){var n=e[3]||e[2];Object.keys(n).forEach((function(e){t[e]=n[e];}));}return t},interpolation:{escapeValue:!0,format:function(e,t,n,r){return e},prefix:"{{",suffix:"}}",formatSeparator:",",unescapePrefix:"-",nestingPrefix:"$t(",nestingSuffix:")",nestingOptionsSeparator:",",maxReplaces:1e3,skipOnVariables:!1}}}function zc$1(e){return "string"==typeof e.ns&&(e.ns=[e.ns]),"string"==typeof e.fallbackLng&&(e.fallbackLng=[e.fallbackLng]),"string"==typeof e.fallbackNS&&(e.fallbackNS=[e.fallbackNS]),e.whitelist&&(e.whitelist&&e.whitelist.indexOf("cimode")<0&&(e.whitelist=e.whitelist.concat(["cimode"])),e.supportedLngs=e.whitelist),e.nonExplicitWhitelist&&(e.nonExplicitSupportedLngs=e.nonExplicitWhitelist),e.supportedLngs&&e.supportedLngs.indexOf("cimode")<0&&(e.supportedLngs=e.supportedLngs.concat(["cimode"])),e}function Vc$1(){}var Uc$1=new(function(e){function t(){var e,n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},r=arguments.length>1?arguments[1]:void 0;if(ic$1(this,t),e=uc$1(this,cc$1(t).call(this)),Nc$1&&gc$1.call(lc$1(e)),e.options=zc$1(n),e.services={},e.logger=pc$1,e.modules={external:[]},r&&!e.isInitialized&&!n.isClone){if(!e.options.initImmediate)return e.init(n,r),uc$1(e,lc$1(e));setTimeout((function(){e.init(n,r);}),0);}return e}return dc$1(t,gc$1),sc$1(t,[{key:"init",value:function(){var e=this,t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},n=arguments.length>1?arguments[1]:void 0;function r(e){return e?"function"==typeof e?new e:e:null}if("function"==typeof t&&(n=t,t={}),t.whitelist&&!t.supportedLngs&&this.logger.deprecate("whitelist",'option "whitelist" will be renamed to "supportedLngs" in the next major - please make sure to rename this option asap.'),t.nonExplicitWhitelist&&!t.nonExplicitSupportedLngs&&this.logger.deprecate("whitelist",'options "nonExplicitWhitelist" will be renamed to "nonExplicitSupportedLngs" in the next major - please make sure to rename this option asap.'),this.options=oc$1({},Wc$1(),this.options,zc$1(t)),this.format=this.options.interpolation.format,n||(n=Vc$1),!this.options.isClone){this.modules.logger?pc$1.init(r(this.modules.logger),this.options):pc$1.init(null,this.options);var o=new Rc$1(this.options);this.store=new Lc$1(this.options.resources,this.options);var i=this.services;i.logger=pc$1,i.resourceStore=this.store,i.languageUtils=o,i.pluralResolver=new Bc$1(o,{prepend:this.options.pluralSeparator,compatibilityJSON:this.options.compatibilityJSON,simplifyPluralSuffix:this.options.simplifyPluralSuffix}),i.interpolator=new _c$1(this.options),i.utils={hasLoadedNamespace:this.hasLoadedNamespace.bind(this)},i.backendConnector=new $c$1(r(this.modules.backend),i.resourceStore,i,this.options),i.backendConnector.on("*",(function(t){for(var n=arguments.length,r=new Array(n>1?n-1:0),o=1;o<n;o++)r[o-1]=arguments[o];e.emit.apply(e,[t].concat(r));})),this.modules.languageDetector&&(i.languageDetector=r(this.modules.languageDetector),i.languageDetector.init(i,this.options.detection,this.options)),this.modules.i18nFormat&&(i.i18nFormat=r(this.modules.i18nFormat),i.i18nFormat.init&&i.i18nFormat.init(this)),this.translator=new Dc$1(this.services,this.options),this.translator.on("*",(function(t){for(var n=arguments.length,r=new Array(n>1?n-1:0),o=1;o<n;o++)r[o-1]=arguments[o];e.emit.apply(e,[t].concat(r));})),this.modules.external.forEach((function(t){t.init&&t.init(e);}));}if(this.options.fallbackLng&&!this.services.languageDetector&&!this.options.lng){var a=this.services.languageUtils.getFallbackCodes(this.options.fallbackLng);a.length>0&&"dev"!==a[0]&&(this.options.lng=a[0]);}this.services.languageDetector||this.options.lng||this.logger.warn("init: no languageDetector is used and no lng is defined");var s=["getResource","hasResourceBundle","getResourceBundle","getDataByLanguage"];s.forEach((function(t){e[t]=function(){var n;return (n=e.store)[t].apply(n,arguments)};}));var l=["addResource","addResources","addResourceBundle","removeResourceBundle"];l.forEach((function(t){e[t]=function(){var n;return (n=e.store)[t].apply(n,arguments),e};}));var u=vc$1(),c=function(){var t=function(t,r){e.isInitialized&&!e.initializedStoreOnce&&e.logger.warn("init: i18next is already initialized. You should call init just once!"),e.isInitialized=!0,e.options.isClone||e.logger.log("initialized",e.options),e.emit("initialized",e.options),u.resolve(r),n(t,r);};if(e.languages&&"v1"!==e.options.compatibilityAPI&&!e.isInitialized)return t(null,e.t.bind(e));e.changeLanguage(e.options.lng,t);};return this.options.resources||!this.options.initImmediate?c():setTimeout(c,0),u}},{key:"loadResources",value:function(e){var t=this,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:Vc$1,r=n,o="string"==typeof e?e:this.language;if("function"==typeof e&&(r=e),!this.options.resources||this.options.partialBundledLanguages){if(o&&"cimode"===o.toLowerCase())return r();var i=[],a=function(e){e&&t.services.languageUtils.toResolveHierarchy(e).forEach((function(e){i.indexOf(e)<0&&i.push(e);}));};if(o)a(o);else {var s=this.services.languageUtils.getFallbackCodes(this.options.fallbackLng);s.forEach((function(e){return a(e)}));}this.options.preload&&this.options.preload.forEach((function(e){return a(e)})),this.services.backendConnector.load(i,this.options.ns,r);}else r(null);}},{key:"reloadResources",value:function(e,t,n){var r=vc$1();return e||(e=this.languages),t||(t=this.options.ns),n||(n=Vc$1),this.services.backendConnector.reload(e,t,(function(e){r.resolve(),n(e);})),r}},{key:"use",value:function(e){if(!e)throw new Error("You are passing an undefined module! Please check the object you are passing to i18next.use()");if(!e.type)throw new Error("You are passing a wrong module! Please check the object you are passing to i18next.use()");return "backend"===e.type&&(this.modules.backend=e),("logger"===e.type||e.log&&e.warn&&e.error)&&(this.modules.logger=e),"languageDetector"===e.type&&(this.modules.languageDetector=e),"i18nFormat"===e.type&&(this.modules.i18nFormat=e),"postProcessor"===e.type&&Pc$1.addPostProcessor(e),"3rdParty"===e.type&&this.modules.external.push(e),this}},{key:"changeLanguage",value:function(e,t){var n=this;this.isLanguageChangingTo=e;var r=vc$1();this.emit("languageChanging",e);var o=function(o){e||o||!n.services.languageDetector||(o=[]);var i="string"==typeof o?o:n.services.languageUtils.getBestMatchFromCodes(o);i&&(n.language||(n.language=i,n.languages=n.services.languageUtils.toResolveHierarchy(i)),n.translator.language||n.translator.changeLanguage(i),n.services.languageDetector&&n.services.languageDetector.cacheUserLanguage(i)),n.loadResources(i,(function(e){!function(e,o){o?(n.language=o,n.languages=n.services.languageUtils.toResolveHierarchy(o),n.translator.changeLanguage(o),n.isLanguageChangingTo=void 0,n.emit("languageChanged",o),n.logger.log("languageChanged",o)):n.isLanguageChangingTo=void 0,r.resolve((function(){return n.t.apply(n,arguments)})),t&&t(e,(function(){return n.t.apply(n,arguments)}));}(e,i);}));};return e||!this.services.languageDetector||this.services.languageDetector.async?!e&&this.services.languageDetector&&this.services.languageDetector.async?this.services.languageDetector.detect(o):o(e):o(this.services.languageDetector.detect()),r}},{key:"getFixedT",value:function(e,t){var n=this,r=function e(t,r){var o;if("object"!==nc$1(r)){for(var i=arguments.length,a=new Array(i>2?i-2:0),s=2;s<i;s++)a[s-2]=arguments[s];o=n.options.overloadTranslationOptionHandler([t,r].concat(a));}else o=oc$1({},r);return o.lng=o.lng||e.lng,o.lngs=o.lngs||e.lngs,o.ns=o.ns||e.ns,n.t(t,o)};return "string"==typeof e?r.lng=e:r.lngs=e,r.ns=t,r}},{key:"t",value:function(){var e;return this.translator&&(e=this.translator).translate.apply(e,arguments)}},{key:"exists",value:function(){var e;return this.translator&&(e=this.translator).exists.apply(e,arguments)}},{key:"setDefaultNamespace",value:function(e){this.options.defaultNS=e;}},{key:"hasLoadedNamespace",value:function(e){var t=this,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(!this.isInitialized)return this.logger.warn("hasLoadedNamespace: i18next was not initialized",this.languages),!1;if(!this.languages||!this.languages.length)return this.logger.warn("hasLoadedNamespace: i18n.languages were undefined or empty",this.languages),!1;var r=this.languages[0],o=!!this.options&&this.options.fallbackLng,i=this.languages[this.languages.length-1];if("cimode"===r.toLowerCase())return !0;var a=function(e,n){var r=t.services.backendConnector.state["".concat(e,"|").concat(n)];return -1===r||2===r};if(n.precheck){var s=n.precheck(this,a);if(void 0!==s)return s}return !!this.hasResourceBundle(r,e)||(!this.services.backendConnector.backend||!(!a(r,e)||o&&!a(i,e)))}},{key:"loadNamespaces",value:function(e,t){var n=this,r=vc$1();return this.options.ns?("string"==typeof e&&(e=[e]),e.forEach((function(e){n.options.ns.indexOf(e)<0&&n.options.ns.push(e);})),this.loadResources((function(e){r.resolve(),t&&t(e);})),r):(t&&t(),Promise.resolve())}},{key:"loadLanguages",value:function(e,t){var n=vc$1();"string"==typeof e&&(e=[e]);var r=this.options.preload||[],o=e.filter((function(e){return r.indexOf(e)<0}));return o.length?(this.options.preload=r.concat(o),this.loadResources((function(e){n.resolve(),t&&t(e);})),n):(t&&t(),Promise.resolve())}},{key:"dir",value:function(e){if(e||(e=this.languages&&this.languages.length>0?this.languages[0]:this.language),!e)return "rtl";return ["ar","shu","sqr","ssh","xaa","yhd","yud","aao","abh","abv","acm","acq","acw","acx","acy","adf","ads","aeb","aec","afb","ajp","apc","apd","arb","arq","ars","ary","arz","auz","avl","ayh","ayl","ayn","ayp","bbz","pga","he","iw","ps","pbt","pbu","pst","prp","prd","ug","ur","ydd","yds","yih","ji","yi","hbo","men","xmn","fa","jpr","peo","pes","prs","dv","sam"].indexOf(this.services.languageUtils.getLanguagePartFromCode(e))>=0?"rtl":"ltr"}},{key:"createInstance",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},n=arguments.length>1?arguments[1]:void 0;return new t(e,n)}},{key:"cloneInstance",value:function(){var e=this,n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:Vc$1,o=oc$1({},this.options,n,{isClone:!0}),i=new t(o),a=["store","services","language"];return a.forEach((function(t){i[t]=e[t];})),i.services=oc$1({},this.services),i.services.utils={hasLoadedNamespace:i.hasLoadedNamespace.bind(i)},i.translator=new Dc$1(i.services,i.options),i.translator.on("*",(function(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),r=1;r<t;r++)n[r-1]=arguments[r];i.emit.apply(i,[e].concat(n));})),i.init(o,r),i.translator.options=i.options,i.translator.backendConnector.services.utils={hasLoadedNamespace:i.hasLoadedNamespace.bind(i)},i}},{key:"toJSON",value:function(){return {options:this.options,store:this.store,language:this.language,languages:this.languages}}}]),t}());function Kc$1(e,t){Uc$1.addResourceBundle(e,"translation",t,!0,!0);}function Hc$1(e){Uc$1.changeLanguage(e);}Uc$1.init({lng:"zh-CN",resources:{}});var qc$1=Uc$1.t.bind(Uc$1);

  /**
   * @description i18n en
   * @author wangfupeng
   */
  var enResources = {
      editor: {
          more: 'More',
          justify: 'Justify',
          indent: 'Indent',
          image: 'Image',
      },
  };

  /**
   * @description i18n zh-CN
   * @author wangfupeng
   */
  var zhResources = {
      editor: {
          more: '更多',
          justify: '对齐',
          indent: '缩进',
          image: '图片',
      },
  };

  /**
   * @description i18n entry
   * @author wangfupeng
   */
  Kc$1('en', enResources);
  Kc$1('zh-CN', zhResources);

  /**
   * @description node polyfill
   * @author wangfupeng
   */
  // @ts-nocheck
  if (typeof global === 'object') {
      // 用于 nodejs ，避免报错
      var globalProperty = Object.getOwnPropertyDescriptor(global, 'window');
      // global.window 为空则直接写入
      // 部分框架下已经定义了global.window且是不可写属性
      if (!global.window || globalProperty.set) {
          global.window = global;
          global.requestAnimationFrame = function () { };
          global.navigator = {
              userAgent: '',
          };
          global.location = {
              hostname: '0.0.0.0',
              port: 0,
              protocol: 'http:',
          };
          global.btoa = function () { };
      }
  }

  Kc$1("en",{common:{ok:"OK"},blockQuote:{title:"Quote"},codeBlock:{title:"Code block"},color:{color:"Font color",bgColor:"Back color",default:"Default color",clear:"Clear back color"},divider:{title:"Divider"},emotion:{title:"Emotion"},fontSize:{title:"Font size",default:"Default"},fontFamily:{title:"Font family",default:"Default"},fullScreen:{title:"Full screen"},header:{title:"Header",text:"Text"},image:{netImage:"Net image",delete:"Delete image",edit:"Edit image",viewLink:"View link",src:"Image src",desc:"Description",link:"Image link"},indent:{decrease:"Decrease",increase:"Increase"},justify:{left:"Left",right:"Right",center:"Center",justify:"Justify"},lineHeight:{title:"Line height",default:"Default"},link:{insert:"Insert link",text:"Link text",url:"Link source",unLink:"Unlink",edit:"Edit link",view:"View link"},textStyle:{bold:"Bold",clear:"Clear styles",code:"Inline code",italic:"Italic",sub:"Sub",sup:"Sup",through:"Through",underline:"Underline"},undo:{undo:"undo",redo:"Redo"}}),Kc$1("zh-CN",{common:{ok:"确定"},blockQuote:{title:"引用"},codeBlock:{title:"代码块"},color:{color:"文字颜色",bgColor:"背景色",default:"默认颜色",clear:"清除背景色"},divider:{title:"分割线"},emotion:{title:"表情"},fontSize:{title:"字号",default:"默认字号"},fontFamily:{title:"字体",default:"默认字体"},fullScreen:{title:"全屏"},header:{title:"标题",text:"正文"},image:{netImage:"网络图片",delete:"删除图片",edit:"编辑图片",viewLink:"查看链接",src:"图片地址",desc:"图片描述",link:"图片链接"},indent:{decrease:"减少缩进",increase:"增加缩进"},justify:{left:"左对齐",right:"右对齐",center:"居中对齐",justify:"两端对齐"},lineHeight:{title:"行高",default:"默认行高"},link:{insert:"插入链接",text:"链接文本",url:"链接地址",unLink:"取消链接",edit:"修改链接",view:"查看链接"},textStyle:{bold:"粗体",clear:"清除格式",code:"行内代码",italic:"斜体",sub:"上标",sup:"下标",through:"删除线",underline:"下划线"},undo:{undo:"撤销",redo:"重做"}});var P$5=function(t,e){return (P$5=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e;}||function(t,e){for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n]);})(t,e)};
  /*! *****************************************************************************
  Copyright (c) Microsoft Corporation.

  Permission to use, copy, modify, and/or distribute this software for any
  purpose with or without fee is hereby granted.

  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
  PERFORMANCE OF THIS SOFTWARE.
  ***************************************************************************** */function D$5(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Class extends value "+String(e)+" is not a constructor or null");function n(){this.constructor=t;}P$5(t,e),t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n);}var B$5=function(){return (B$5=Object.assign||function(t){for(var e,n=1,r=arguments.length;n<r;n++)for(var o in e=arguments[n])Object.prototype.hasOwnProperty.call(e,o)&&(t[o]=e[o]);return t}).apply(this,arguments)};function _$5(t,e,n,r){return new(n||(n=Promise))((function(o,i){function u(t){try{c(r.next(t));}catch(t){i(t);}}function a(t){try{c(r.throw(t));}catch(t){i(t);}}function c(t){var e;t.done?o(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e);}))).then(u,a);}c((r=r.apply(t,e||[])).next());}))}function R$5(t,e){var n,r,o,i,u={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return i={next:a(0),throw:a(1),return:a(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function a(i){return function(a){return function(i){if(n)throw new TypeError("Generator is already executing.");for(;u;)try{if(n=1,r&&(o=2&i[0]?r.return:i[0]?r.throw||((o=r.return)&&o.call(r),0):r.next)&&!(o=o.call(r,i[1])).done)return o;switch(r=0,o&&(i=[2&i[0],o.value]),i[0]){case 0:case 1:o=i;break;case 4:return u.label++,{value:i[1],done:!1};case 5:u.label++,r=i[1],i=[0];continue;case 7:i=u.ops.pop(),u.trys.pop();continue;default:if(!(o=u.trys,(o=o.length>0&&o[o.length-1])||6!==i[0]&&2!==i[0])){u=0;continue}if(3===i[0]&&(!o||i[1]>o[0]&&i[1]<o[3])){u.label=i[1];break}if(6===i[0]&&u.label<o[1]){u.label=o[1],o=i;break}if(o&&u.label<o[2]){u.label=o[2],u.ops.push(i);break}o[2]&&u.ops.pop(),u.trys.pop();continue}i=e.call(t,u);}catch(t){i=[6,t],r=0;}finally{n=o=0;}if(5&i[0])throw i[1];return {value:i[0]?i[1]:void 0,done:!0}}([i,a])}}}function F$5(t){var e="function"==typeof Symbol&&Symbol.iterator,n=e&&t[e],r=0;if(n)return n.call(t);if(t&&"number"==typeof t.length)return {next:function(){return t&&r>=t.length&&(t=void 0),{value:t&&t[r++],done:!t}}};throw new TypeError(e?"Object is not iterable.":"Symbol.iterator is not defined.")}function $$5(t,e){var n="function"==typeof Symbol&&t[Symbol.iterator];if(!n)return t;var r,o,i=n.call(t),u=[];try{for(;(void 0===e||e-- >0)&&!(r=i.next()).done;)u.push(r.value);}catch(t){o={error:t};}finally{try{r&&!r.done&&(n=i.return)&&n.call(i);}finally{if(o)throw o.error}}return u}function q$5(t){var e=$$5(Editor.nodes(t,{match:function(e){return t.children[0]===e},mode:"highest"}),1)[0];if(null==e)return !1;var n=e[0];if(!Element$1.isElement(n))return !1;if("paragraph"===n.type)return !1;if(""!==Node$1.string(n))return !1;var r=n.children,o=void 0===r?[]:r;return !!Text.isText(o[0])&&(Transforms.setNodes(t,{type:"paragraph"}),!0)}var W$5={renderElems:[{type:"paragraph",renderElem:function(t,e,n){return jsx("p",null,e)}}],elemsToHtml:[{type:"paragraph",elemToHtml:function(t,e,n){return ""===e?"<p><br/></p>":"<p>"+e+"</p>"}}],editorPlugin:function(t){var e=t.deleteBackward,n=t.deleteForward,r=t;return r.deleteBackward=function(t){q$5(r)||e(t);},r.deleteForward=function(t){q$5(r)||n(t);},r}},G$5="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:{};function U$5(t){return t&&t.__esModule&&Object.prototype.hasOwnProperty.call(t,"default")?t.default:t}function K$5(t){var e={exports:{}};return t(e,e.exports),e.exports}var Y$5=function(t){return t&&t.Math==Math&&t},J$5=Y$5("object"==typeof globalThis&&globalThis)||Y$5("object"==typeof window&&window)||Y$5("object"==typeof self&&self)||Y$5("object"==typeof G$5&&G$5)||function(){return this}()||Function("return this")(),X$5=function(t){try{return !!t()}catch(t){return !0}},Q$5=!X$5((function(){return 7!=Object.defineProperty({},1,{get:function(){return 7}})[1]})),Z$5={}.propertyIsEnumerable,tt$5=Object.getOwnPropertyDescriptor,et$5={f:tt$5&&!Z$5.call({1:2},1)?function(t){var e=tt$5(this,t);return !!e&&e.enumerable}:Z$5},nt$5=function(t,e){return {enumerable:!(1&t),configurable:!(2&t),writable:!(4&t),value:e}},rt$5={}.toString,ot$5=function(t){return rt$5.call(t).slice(8,-1)},it$5="".split,ut$5=X$5((function(){return !Object("z").propertyIsEnumerable(0)}))?function(t){return "String"==ot$5(t)?it$5.call(t,""):Object(t)}:Object,at$5=function(t){if(null==t)throw TypeError("Can't call method on "+t);return t},ct$5=function(t){return ut$5(at$5(t))},lt$5=function(t){return "object"==typeof t?null!==t:"function"==typeof t},st$5=function(t,e){if(!lt$5(t))return t;var n,r;if(e&&"function"==typeof(n=t.toString)&&!lt$5(r=n.call(t)))return r;if("function"==typeof(n=t.valueOf)&&!lt$5(r=n.call(t)))return r;if(!e&&"function"==typeof(n=t.toString)&&!lt$5(r=n.call(t)))return r;throw TypeError("Can't convert object to primitive value")},ft$5=function(t){return Object(at$5(t))},pt$5={}.hasOwnProperty,ht$5=Object.hasOwn||function(t,e){return pt$5.call(ft$5(t),e)},dt$5=J$5.document,vt$5=lt$5(dt$5)&&lt$5(dt$5.createElement),gt$5=function(t){return vt$5?dt$5.createElement(t):{}},yt$5=!Q$5&&!X$5((function(){return 7!=Object.defineProperty(gt$5("div"),"a",{get:function(){return 7}}).a})),mt$5=Object.getOwnPropertyDescriptor,bt$5={f:Q$5?mt$5:function(t,e){if(t=ct$5(t),e=st$5(e,!0),yt$5)try{return mt$5(t,e)}catch(t){}if(ht$5(t,e))return nt$5(!et$5.f.call(t,e),t[e])}},St$5=function(t){if(!lt$5(t))throw TypeError(String(t)+" is not an object");return t},wt$5=Object.defineProperty,xt$5={f:Q$5?wt$5:function(t,e,n){if(St$5(t),e=st$5(e,!0),St$5(n),yt$5)try{return wt$5(t,e,n)}catch(t){}if("get"in n||"set"in n)throw TypeError("Accessors not supported");return "value"in n&&(t[e]=n.value),t}},kt$5=Q$5?function(t,e,n){return xt$5.f(t,e,nt$5(1,n))}:function(t,e,n){return t[e]=n,t},Tt$5=function(t,e){try{kt$5(J$5,t,e);}catch(n){J$5[t]=e;}return e},Et$5=J$5["__core-js_shared__"]||Tt$5("__core-js_shared__",{}),Mt$5=Function.toString;"function"!=typeof Et$5.inspectSource&&(Et$5.inspectSource=function(t){return Mt$5.call(t)});var Ot$5,Nt$5,It$5,Lt$5=Et$5.inspectSource,zt$4=J$5.WeakMap,jt$4="function"==typeof zt$4&&/native code/.test(Lt$5(zt$4)),At$5=K$5((function(t){(t.exports=function(t,e){return Et$5[t]||(Et$5[t]=void 0!==e?e:{})})("versions",[]).push({version:"3.13.1",mode:"global",copyright:"© 2021 Denis Pushkarev (zloirock.ru)"});})),Ht$4=0,Vt$4=Math.random(),Ct$5=function(t){return "Symbol("+String(void 0===t?"":t)+")_"+(++Ht$4+Vt$4).toString(36)},Pt$5=At$5("keys"),Dt$5=function(t){return Pt$5[t]||(Pt$5[t]=Ct$5(t))},Bt$4={},_t$5=J$5.WeakMap;if(jt$4||Et$5.state){var Rt$5=Et$5.state||(Et$5.state=new _t$5),Ft$5=Rt$5.get,$t$4=Rt$5.has,qt$4=Rt$5.set;Ot$5=function(t,e){if($t$4.call(Rt$5,t))throw new TypeError("Object already initialized");return e.facade=t,qt$4.call(Rt$5,t,e),e},Nt$5=function(t){return Ft$5.call(Rt$5,t)||{}},It$5=function(t){return $t$4.call(Rt$5,t)};}else {var Wt$4=Dt$5("state");Bt$4[Wt$4]=!0,Ot$5=function(t,e){if(ht$5(t,Wt$4))throw new TypeError("Object already initialized");return e.facade=t,kt$5(t,Wt$4,e),e},Nt$5=function(t){return ht$5(t,Wt$4)?t[Wt$4]:{}},It$5=function(t){return ht$5(t,Wt$4)};}var Gt$4={set:Ot$5,get:Nt$5,has:It$5,enforce:function(t){return It$5(t)?Nt$5(t):Ot$5(t,{})},getterFor:function(t){return function(e){var n;if(!lt$5(e)||(n=Nt$5(e)).type!==t)throw TypeError("Incompatible receiver, "+t+" required");return n}}},Ut$4=K$5((function(t){var e=Gt$4.get,n=Gt$4.enforce,r=String(String).split("String");(t.exports=function(t,e,o,i){var u,a=!!i&&!!i.unsafe,c=!!i&&!!i.enumerable,l=!!i&&!!i.noTargetGet;"function"==typeof o&&("string"!=typeof e||ht$5(o,"name")||kt$5(o,"name",e),(u=n(o)).source||(u.source=r.join("string"==typeof e?e:""))),t!==J$5?(a?!l&&t[e]&&(c=!0):delete t[e],c?t[e]=o:kt$5(t,e,o)):c?t[e]=o:Tt$5(e,o);})(Function.prototype,"toString",(function(){return "function"==typeof this&&e(this).source||Lt$5(this)}));})),Kt$4=J$5,Yt$4=function(t){return "function"==typeof t?t:void 0},Jt$4=function(t,e){return arguments.length<2?Yt$4(Kt$4[t])||Yt$4(J$5[t]):Kt$4[t]&&Kt$4[t][e]||J$5[t]&&J$5[t][e]},Xt$4=Math.ceil,Qt$4=Math.floor,Zt$4=function(t){return isNaN(t=+t)?0:(t>0?Qt$4:Xt$4)(t)},te$5=Math.min,ee$5=function(t){return t>0?te$5(Zt$4(t),9007199254740991):0},ne$5=Math.max,re$5=Math.min,oe$5=function(t,e){var n=Zt$4(t);return n<0?ne$5(n+e,0):re$5(n,e)},ie$5=function(t){return function(e,n,r){var o,i=ct$5(e),u=ee$5(i.length),a=oe$5(r,u);if(t&&n!=n){for(;u>a;)if((o=i[a++])!=o)return !0}else for(;u>a;a++)if((t||a in i)&&i[a]===n)return t||a||0;return !t&&-1}},ue$5={includes:ie$5(!0),indexOf:ie$5(!1)},ae$5=ue$5.indexOf,ce$5=function(t,e){var n,r=ct$5(t),o=0,i=[];for(n in r)!ht$5(Bt$4,n)&&ht$5(r,n)&&i.push(n);for(;e.length>o;)ht$5(r,n=e[o++])&&(~ae$5(i,n)||i.push(n));return i},le$5=["constructor","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","toLocaleString","toString","valueOf"],se$5=le$5.concat("length","prototype"),fe$5={f:Object.getOwnPropertyNames||function(t){return ce$5(t,se$5)}},pe$5={f:Object.getOwnPropertySymbols},he$5=Jt$4("Reflect","ownKeys")||function(t){var e=fe$5.f(St$5(t)),n=pe$5.f;return n?e.concat(n(t)):e},de$5=function(t,e){for(var n=he$5(e),r=xt$5.f,o=bt$5.f,i=0;i<n.length;i++){var u=n[i];ht$5(t,u)||r(t,u,o(e,u));}},ve$5=/#|\.prototype\./,ge$5=function(t,e){var n=me$5[ye$5(t)];return n==Se$5||n!=be$5&&("function"==typeof e?X$5(e):!!e)},ye$5=ge$5.normalize=function(t){return String(t).replace(ve$5,".").toLowerCase()},me$5=ge$5.data={},be$5=ge$5.NATIVE="N",Se$5=ge$5.POLYFILL="P",we$5=ge$5,xe$5=bt$5.f,ke$5=function(t,e){var n,r,o,i,u,a=t.target,c=t.global,l=t.stat;if(n=c?J$5:l?J$5[a]||Tt$5(a,{}):(J$5[a]||{}).prototype)for(r in e){if(i=e[r],o=t.noTargetGet?(u=xe$5(n,r))&&u.value:n[r],!we$5(c?r:a+(l?".":"#")+r,t.forced)&&void 0!==o){if(typeof i==typeof o)continue;de$5(i,o);}(t.sham||o&&o.sham)&&kt$5(i,"sham",!0),Ut$4(n,r,i,t);}},Te$5=/"/g,Ee$5=function(t,e,n,r){var o=String(at$5(t)),i="<"+e;return ""!==n&&(i+=" "+n+'="'+String(r).replace(Te$5,"&quot;")+'"'),i+">"+o+"</"+e+">"},Me$5=function(t){return X$5((function(){var e=""[t]('"');return e!==e.toLowerCase()||e.split('"').length>3}))};ke$5({target:"String",proto:!0,forced:Me$5("bold")},{bold:function(){return Ee$5(this,"b","","")}}),ke$5({target:"String",proto:!0,forced:Me$5("italics")},{italics:function(){return Ee$5(this,"i","","")}}),ke$5({target:"String",proto:!0,forced:Me$5("sub")},{sub:function(){return Ee$5(this,"sub","","")}}),ke$5({target:"String",proto:!0,forced:Me$5("sup")},{sup:function(){return Ee$5(this,"sup","","")}});var Oe$5=function(){var t=St$5(this),e="";return t.global&&(e+="g"),t.ignoreCase&&(e+="i"),t.multiline&&(e+="m"),t.dotAll&&(e+="s"),t.unicode&&(e+="u"),t.sticky&&(e+="y"),e};function Ne$5(t,e){return RegExp(t,e)}var Ie$5,Le$5,ze$5={UNSUPPORTED_Y:X$5((function(){var t=Ne$5("a","y");return t.lastIndex=2,null!=t.exec("abcd")})),BROKEN_CARET:X$5((function(){var t=Ne$5("^r","gy");return t.lastIndex=2,null!=t.exec("str")}))},je$5=RegExp.prototype.exec,Ae$4=At$5("native-string-replace",String.prototype.replace),He$5=je$5,Ve$4=(Ie$5=/a/,Le$5=/b*/g,je$5.call(Ie$5,"a"),je$5.call(Le$5,"a"),0!==Ie$5.lastIndex||0!==Le$5.lastIndex),Ce$4=ze$5.UNSUPPORTED_Y||ze$5.BROKEN_CARET,Pe$5=void 0!==/()??/.exec("")[1];(Ve$4||Pe$5||Ce$4)&&(He$5=function(t){var e,n,r,o,i=this,u=Ce$4&&i.sticky,a=Oe$5.call(i),c=i.source,l=0,s=t;return u&&(-1===(a=a.replace("y","")).indexOf("g")&&(a+="g"),s=String(t).slice(i.lastIndex),i.lastIndex>0&&(!i.multiline||i.multiline&&"\n"!==t[i.lastIndex-1])&&(c="(?: "+c+")",s=" "+s,l++),n=new RegExp("^(?:"+c+")",a)),Pe$5&&(n=new RegExp("^"+c+"$(?!\\s)",a)),Ve$4&&(e=i.lastIndex),r=je$5.call(u?n:i,s),u?r?(r.input=r.input.slice(l),r[0]=r[0].slice(l),r.index=i.lastIndex,i.lastIndex+=r[0].length):i.lastIndex=0:Ve$4&&r&&(i.lastIndex=i.global?r.index+r[0].length:e),Pe$5&&r&&r.length>1&&Ae$4.call(r[0],n,(function(){for(o=1;o<arguments.length-2;o++)void 0===arguments[o]&&(r[o]=void 0);})),r});var De$4=He$5;ke$5({target:"RegExp",proto:!0,forced:/./.exec!==De$4},{exec:De$4});var Be$4,_e$5,Re$5=Jt$4("navigator","userAgent")||"",Fe$4=J$5.process,$e$4=Fe$4&&Fe$4.versions,qe$4=$e$4&&$e$4.v8;qe$4?_e$5=(Be$4=qe$4.split("."))[0]<4?1:Be$4[0]+Be$4[1]:Re$5&&(!(Be$4=Re$5.match(/Edge\/(\d+)/))||Be$4[1]>=74)&&(Be$4=Re$5.match(/Chrome\/(\d+)/))&&(_e$5=Be$4[1]);var We$4,Ge$4=_e$5&&+_e$5,Ue$4=!!Object.getOwnPropertySymbols&&!X$5((function(){var t=Symbol();return !String(t)||!(Object(t)instanceof Symbol)||!Symbol.sham&&Ge$4&&Ge$4<41})),Ke$4=Ue$4&&!Symbol.sham&&"symbol"==typeof Symbol.iterator,Ye$4=At$5("wks"),Je$4=J$5.Symbol,Xe$4=Ke$4?Je$4:Je$4&&Je$4.withoutSetter||Ct$5,Qe$4=function(t){return ht$5(Ye$4,t)&&(Ue$4||"string"==typeof Ye$4[t])||(Ue$4&&ht$5(Je$4,t)?Ye$4[t]=Je$4[t]:Ye$4[t]=Xe$4("Symbol."+t)),Ye$4[t]},Ze$4=Qe$4("match"),tn$2=function(t){var e;return lt$5(t)&&(void 0!==(e=t[Ze$4])?!!e:"RegExp"==ot$5(t))},en$2=function(t){if(tn$2(t))throw TypeError("The method doesn't accept regular expressions");return t},nn$2=Qe$4("match"),rn$2=function(t){var e=/./;try{"/./"[t](e);}catch(n){try{return e[nn$2]=!1,"/./"[t](e)}catch(t){}}return !1},on$2=bt$5.f,un$2="".startsWith,an$2=Math.min,cn$2=rn$2("startsWith");ke$5({target:"String",proto:!0,forced:!!(cn$2||(We$4=on$2(String.prototype,"startsWith"),!We$4||We$4.writable))&&!cn$2},{startsWith:function(t){var e=String(at$5(this));en$2(t);var n=ee$5(an$2(arguments.length>1?arguments[1]:void 0,e.length)),r=String(t);return un$2?un$2.call(e,r,n):e.slice(n,n+r.length)===r}});var ln$2=Object.keys||function(t){return ce$5(t,le$5)};ke$5({target:"Object",stat:!0,forced:X$5((function(){ln$2(1);}))},{keys:function(t){return ln$2(ft$5(t))}});var sn$2=function(t){if("function"!=typeof t)throw TypeError(String(t)+" is not a function");return t},fn$2=Array.isArray||function(t){return "Array"==ot$5(t)},pn$2=Qe$4("species"),hn$2=function(t,e){var n;return fn$2(t)&&("function"!=typeof(n=t.constructor)||n!==Array&&!fn$2(n.prototype)?lt$5(n)&&null===(n=n[pn$2])&&(n=void 0):n=void 0),new(void 0===n?Array:n)(0===e?0:e)},dn$2=[].push,vn$2=function(t){var e=1==t,n=2==t,r=3==t,o=4==t,i=6==t,u=7==t,a=5==t||i;return function(c,l,s,f){for(var p,h,d=ft$5(c),v=ut$5(d),g=function(t,e,n){if(sn$2(t),void 0===e)return t;switch(n){case 0:return function(){return t.call(e)};case 1:return function(n){return t.call(e,n)};case 2:return function(n,r){return t.call(e,n,r)};case 3:return function(n,r,o){return t.call(e,n,r,o)}}return function(){return t.apply(e,arguments)}}(l,s,3),y=ee$5(v.length),m=0,b=f||hn$2,S=e?b(c,y):n||u?b(c,0):void 0;y>m;m++)if((a||m in v)&&(h=g(p=v[m],m,d),t))if(e)S[m]=h;else if(h)switch(t){case 3:return !0;case 5:return p;case 6:return m;case 2:dn$2.call(S,p);}else switch(t){case 4:return !1;case 7:dn$2.call(S,p);}return i?-1:r||o?o:S}},gn$2={forEach:vn$2(0),map:vn$2(1),filter:vn$2(2),some:vn$2(3),every:vn$2(4),find:vn$2(5),findIndex:vn$2(6),filterOut:vn$2(7)},yn$2=function(t,e){var n=[][t];return !!n&&X$5((function(){n.call(null,e||function(){throw 1},1);}))},mn$2=gn$2.forEach,bn$2=yn$2("forEach")?[].forEach:function(t){return mn$2(this,t,arguments.length>1?arguments[1]:void 0)};for(var Sn$2 in {CSSRuleList:0,CSSStyleDeclaration:0,CSSValueList:0,ClientRectList:0,DOMRectList:0,DOMStringList:0,DOMTokenList:1,DataTransferItemList:0,FileList:0,HTMLAllCollection:0,HTMLCollection:0,HTMLFormElement:0,HTMLSelectElement:0,MediaList:0,MimeTypeArray:0,NamedNodeMap:0,NodeList:1,PaintRequestList:0,Plugin:0,PluginArray:0,SVGLengthList:0,SVGNumberList:0,SVGPathSegList:0,SVGPointList:0,SVGStringList:0,SVGTransformList:0,SourceBufferList:0,StyleSheetList:0,TextTrackCueList:0,TextTrackList:0,TouchList:0}){var wn$2=J$5[Sn$2],xn$2=wn$2&&wn$2.prototype;if(xn$2&&xn$2.forEach!==bn$2)try{kt$5(xn$2,"forEach",bn$2);}catch(t){xn$2.forEach=bn$2;}}function kn$2(t,n){return null==t.selection||!!$$5(Editor.nodes(t,{match:function(r){var o=fi$1.getNodeType(r);return "pre"===o||(!!Editor.isVoid(t,r)||!("bold"!==n||!o.startsWith("header")))},universal:!0}),1)[0]}function Tn$2(t,e){Object.keys(e).forEach((function(e){"text"!==e&&Editor.removeMark(t,e);}));}var En$2=function(){function t(){this.tag="button";}return t.prototype.getValue=function(t){var e=this.mark;return !!$$5(Editor.nodes(t,{match:function(t){return !0===t[e]},universal:!0}),1)[0]},t.prototype.isActive=function(t){return !!this.getValue(t)},t.prototype.isDisabled=function(t){return kn$2(t,this.mark)},t.prototype.exec=function(t,e){var n=this.mark;e?t.removeMark(n):t.addMark(n,!0);},t}(),Mn$2='<svg viewBox="0 0 1024 1024"><path d="M707.872 484.64A254.88 254.88 0 0 0 768 320c0-141.152-114.848-256-256-256H192v896h384c141.152 0 256-114.848 256-256a256.096 256.096 0 0 0-124.128-219.36zM384 192h101.504c55.968 0 101.504 57.408 101.504 128s-45.536 128-101.504 128H384V192z m159.008 640H384v-256h159.008c58.464 0 106.016 57.408 106.016 128s-47.552 128-106.016 128z"></path></svg>',On$2='<svg viewBox="0 0 1024 1024"><path d="M704 64l128 0 0 416c0 159.072-143.264 288-320 288s-320-128.928-320-288l0-416 128 0 0 416c0 40.16 18.24 78.688 51.36 108.512 36.896 33.216 86.848 51.488 140.64 51.488s103.744-18.304 140.64-51.488c33.12-29.792 51.36-68.352 51.36-108.512l0-416zM192 832l640 0 0 128-640 0z"></path></svg>',Nn$2='<svg viewBox="0 0 1024 1024"><path d="M896 64v64h-128L448 896h128v64H128v-64h128L576 128h-128V64z"></path></svg>',In$2='<svg viewBox="0 0 1024 1024"><path d="M1024 512v64h-234.496c27.52 38.496 42.496 82.688 42.496 128 0 70.88-36.672 139.04-100.576 186.976C672.064 935.488 594.144 960 512 960s-160.064-24.512-219.424-69.024C228.64 843.04 192 774.88 192 704h128c0 69.376 87.936 128 192 128s192-58.624 192-128-87.936-128-192-128H0v-64h299.52a385.984 385.984 0 0 1-6.944-5.024C228.64 459.04 192 390.88 192 320s36.672-139.04 100.576-186.976C351.936 88.512 429.856 64 512 64s160.064 24.512 219.424 69.024C795.328 180.96 832 249.12 832 320h-128c0-69.376-87.936-128-192-128s-192 58.624-192 128 87.936 128 192 128c78.976 0 154.048 22.688 212.48 64H1024z"></path></svg>',Ln$2='<svg viewBox="0 0 1024 1024"><path d="M576 736l96 96 320-320L672 192l-96 96 224 224zM448 288l-96-96L32 512l320 320 96-96-224-224z"></path></svg>',zn$2='<svg viewBox="0 0 1024 1024"><path d="M864 0a160 160 0 0 1 128 256l-64 64-224-224 64-64c26.752-20.096 59.968-32 96-32zM64 736l-64 288 288-64 592-592-224-224L64 736z m651.584-372.416l-448 448-55.168-55.168 448-448 55.168 55.168z"></path></svg>',jn$2='<svg viewBox="0 0 1024 1024"><path d="M924.402464 1023.068211H0.679665V99.345412h461.861399v98.909208H99.596867v725.896389h725.896389V561.206811h98.909208z" p-id="10909"></path><path d="M930.805104 22.977336l69.965436 69.965436-453.492405 453.492404-69.965435-69.901489z" p-id="10910"></path><path d="M1022.464381 304.030081h-98.917201V99.345412H709.230573V0.428211h313.233808z"></path></svg>',An$2='<svg viewBox="0 0 1024 1024"><path d="M64 864h896v96H64zM360.58 576h302.85l81.53 224h102.16L579.24 64H444.77L176.89 800h102.16l81.53-224zM512 159.96L628.49 480H395.52L512 159.96z"></path></svg>',Hn$2='<svg viewBox="0 0 1024 1024"><path d="M510.030769 315.076923l84.676923 196.923077h-177.230769l76.8-196.923077h15.753846zM945.230769 157.538462v708.923076c0 43.323077-35.446154 78.769231-78.769231 78.769231H157.538462c-43.323077 0-78.769231-35.446154-78.769231-78.769231V157.538462c0-43.323077 35.446154-78.769231 78.769231-78.769231h708.923076c43.323077 0 78.769231 35.446154 78.769231 78.769231z m-108.307692 643.938461L600.615385 216.615385c-5.907692-11.815385-15.753846-19.692308-29.538462-19.692308h-139.815385c-11.815385 0-23.630769 7.876923-27.56923 19.692308l-216.615385 584.861538c-3.938462 11.815385 3.938462 25.6 17.723077 25.6h80.738462c11.815385 0 23.630769-9.846154 27.56923-21.661538l63.015385-175.261539h263.876923l68.923077 175.261539c3.938462 11.815385 15.753846 21.661538 27.569231 21.661538h80.738461c13.784615 0 23.630769-13.784615 19.692308-25.6z"></path></svg>',Vn$2='<svg viewBox="0 0 1024 1024"><path d="M64 512h384v128h-128V1024h-128V640h-128z m896-256H708.2496v768h-136.4992V256H320V128h640z"></path></svg>',Cn$2='<svg viewBox="0 0 1024 1024"><path d="M956.788364 152.110545h-24.110546l23.924364 9.029819 0.186182 121.018181h-65.070546l-86.574545-130.048H566.551273v650.14691l130.048 64.977454v65.163636h-390.050909v-65.163636l129.954909-64.977454V152.110545H198.283636L111.429818 282.065455H46.545455V69.259636C46.545455 33.792 82.664727 22.062545 98.955636 22.062545h812.683637c23.738182 0 45.056 15.173818 45.056 41.053091V169.425455v-17.221819z"></path></svg>',Pn$2='<svg viewBox="0 0 1024 1024"><path d="M0 64h1024v128H0z m384 192h640v128H384z m0 192h640v128H384z m0 192h640v128H384zM0 832h1024v128H0z m256-512v384l-256-192z"></path></svg>',Dn$2='<svg viewBox="0 0 1024 1024"><path d="M0 64h1024v128H0z m384 192h640v128H384z m0 192h640v128H384z m0 192h640v128H384zM0 832h1024v128H0z m0-128V320l256 192z"></path></svg>',Bn$2='<svg viewBox="0 0 1024 1024"><path d="M768 793.6v102.4H51.2v-102.4h716.8z m204.8-230.4v102.4H51.2v-102.4h921.6z m-204.8-230.4v102.4H51.2v-102.4h716.8zM972.8 102.4v102.4H51.2V102.4h921.6z"></path></svg>',_n$2='<svg viewBox="0 0 1024 1024"><path d="M972.8 793.6v102.4H256v-102.4h716.8z m0-230.4v102.4H51.2v-102.4h921.6z m0-230.4v102.4H256v-102.4h716.8zM972.8 102.4v102.4H51.2V102.4h921.6z"></path></svg>',Rn$2='<svg viewBox="0 0 1024 1024"><path d="M870.4 793.6v102.4H153.6v-102.4h716.8z m102.4-230.4v102.4H51.2v-102.4h921.6z m-102.4-230.4v102.4H153.6v-102.4h716.8zM972.8 102.4v102.4H51.2V102.4h921.6z"></path></svg>',Fn$2='<svg viewBox="0 0 1024 1024"><path d="M0 64h1024v128H0z m0 192h1024v128H0z m0 192h1024v128H0z m0 192h1024v128H0z m0 192h1024v128H0z"></path></svg>',$n$2='<svg viewBox="0 0 1024 1024"><path d="M768 206.016v50.016h128v64h-192V174.016l128-60V64h-128V0h192v146.016zM676 256h-136L352 444 164 256H28l256 256-256 256h136L352 580 540 768h136l-256-256z"></path></svg>',qn$2='<svg viewBox="0 0 1024 1024"><path d="M768 910.016v50.016h128v64h-192v-146.016l128-60V768h-128v-64h192v146.016zM676 256h-136L352 444 164 256H28l256 256-256 256h136L352 580 540 768h136l-256-256z"></path></svg>',Wn$2=function(t){function e(){var e=null!==t&&t.apply(this,arguments)||this;return e.mark="bold",e.title=qc$1("textStyle.bold"),e.iconSvg=Mn$2,e.hotkey="mod+b",e}return D$5(e,t),e}(En$2),Gn$2=function(t){function e(){var e=null!==t&&t.apply(this,arguments)||this;return e.mark="code",e.title=qc$1("textStyle.code"),e.iconSvg=Ln$2,e.hotkey="mod+e",e}return D$5(e,t),e}(En$2),Un$2=function(t){function e(){var e=null!==t&&t.apply(this,arguments)||this;return e.mark="italic",e.title=qc$1("textStyle.italic"),e.iconSvg=Nn$2,e.hotkey="mod+i",e}return D$5(e,t),e}(En$2),Kn$2=function(t){function e(){var e=null!==t&&t.apply(this,arguments)||this;return e.mark="through",e.title=qc$1("textStyle.through"),e.iconSvg=In$2,e.hotkey="mod+shift+x",e}return D$5(e,t),e}(En$2),Yn$1=function(t){function e(){var e=null!==t&&t.apply(this,arguments)||this;return e.mark="underline",e.title=qc$1("textStyle.underline"),e.iconSvg=On$2,e.hotkey="mod+u",e}return D$5(e,t),e}(En$2),Jn$1=function(t){function e(){var e=null!==t&&t.apply(this,arguments)||this;return e.mark="sub",e.title=qc$1("textStyle.sub"),e.iconSvg=qn$2,e.hotkey="",e}return D$5(e,t),e}(En$2),Xn$1=function(t){function e(){var e=null!==t&&t.apply(this,arguments)||this;return e.mark="sup",e.title=qc$1("textStyle.sup"),e.iconSvg=$n$2,e.hotkey="",e}return D$5(e,t),e}(En$2),Qn$1=function(){function t(){this.title=qc$1("textStyle.clear"),this.iconSvg='<svg viewBox="0 0 1024 1024"><path d="M969.382408 288.738615l-319.401123-270.852152a67.074236 67.074236 0 0 0-96.459139 5.74922l-505.931379 574.922021a68.35184 68.35184 0 0 0-17.886463 47.910169 74.101061 74.101061 0 0 0 24.274486 47.910168l156.50655 132.232065h373.060512L975.131628 383.281347a67.074236 67.074236 0 0 0-5.74922-96.459139z m-440.134747 433.746725H264.144729l-90.071117-78.572676c-5.74922-5.74922-12.137243-12.137243-12.137243-17.886463a36.411728 36.411728 0 0 1 5.749221-24.274485l210.804741-240.828447 265.102932 228.691204z m-439.495945 180.781036h843.218964a60.047411 60.047411 0 1 1 0 120.733624H89.751716a60.047411 60.047411 0 1 1 0-120.733624z m0 0"></path></svg>',this.tag="button";}return t.prototype.getValue=function(t){return ""},t.prototype.isActive=function(t){return !1},t.prototype.isDisabled=function(t){return kn$2(t)},t.prototype.exec=function(t,e){var n,r,o=Editor.nodes(t,{match:function(t){return Text.isText(t)},universal:!0});try{for(var i=F$5(o),a=i.next();!a.done;a=i.next()){Tn$2(t,a.value[0]);}}catch(t){n={error:t};}finally{try{a&&!a.done&&(r=i.return)&&r.call(i);}finally{if(n)throw n.error}}},t}(),Zn$1={renderTextStyle:function(t,e){var n=t,r=n.bold,o=n.italic,u=n.underline,a=n.code,c=n.through,l=n.sub,s=n.sup,f=e;return r&&(f=jsx("strong",null,f)),a&&(f=jsx("code",null,f)),o&&(f=jsx("em",null,f)),u&&(f=jsx("u",null,f)),c&&(f=jsx("s",null,f)),l&&(f=jsx("sub",null,f)),s&&(f=jsx("sup",null,f)),f},menus:[{key:"bold",factory:function(){return new Wn$2}},{key:"underline",factory:function(){return new Yn$1}},{key:"italic",factory:function(){return new Un$2}},{key:"through",factory:function(){return new Kn$2}},{key:"code",factory:function(){return new Gn$2}},{key:"sub",factory:function(){return new Jn$1}},{key:"sup",factory:function(){return new Xn$1}},{key:"clearStyle",factory:function(){return new Qn$1}}],textToHtml:function(t,e,n){var r=t,o=r.bold,i=r.italic,u=r.underline,a=e;return o&&(a="<strong>"+a+"</strong>"),r.code&&(a="<code>"+a+"</code>"),i&&(a="<em>"+a+"</em>"),u&&(a="<u>"+a+"</u>"),r.through&&(a="<s>"+a+"</s>"),r.sub&&(a="<sub>"+a+"</sub>"),r.sup&&(a="<sup>"+a+"</sup>"),a}};function tr$2(t){return function(e,n,r){return jsx("h"+t,null,n)}}var er$2={type:"header1",renderElem:tr$2(1)},nr$2={type:"header2",renderElem:tr$2(2)},rr$2={type:"header3",renderElem:tr$2(3)},or$2={type:"header4",renderElem:tr$2(4)},ir$2={type:"header5",renderElem:tr$2(5)},ur$2={};ur$2[Qe$4("toStringTag")]="z";var ar$2="[object z]"===String(ur$2),cr$2=Qe$4("toStringTag"),lr$2="Arguments"==ot$5(function(){return arguments}()),sr$2=ar$2?ot$5:function(t){var e,n,r;return void 0===t?"Undefined":null===t?"Null":"string"==typeof(n=function(t,e){try{return t[e]}catch(t){}}(e=Object(t),cr$2))?n:lr$2?ot$5(e):"Object"==(r=ot$5(e))&&"function"==typeof e.callee?"Arguments":r},fr$2=ar$2?{}.toString:function(){return "[object "+sr$2(this)+"]"};ar$2||Ut$4(Object.prototype,"toString",fr$2,{unsafe:!0});var pr$2=RegExp.prototype,hr$2=pr$2.toString,dr$2=X$5((function(){return "/a/b"!=hr$2.call({source:"a",flags:"b"})})),vr$2="toString"!=hr$2.name;function gr$2(t){var n=$$5(Editor.nodes(t,{match:function(t){return fi$1.getNodeType(t).startsWith("header")},universal:!0}),1)[0];if(null==n)return "paragraph";var r=$$5(n,1)[0];return fi$1.getNodeType(r)}function yr$2(t){return null==t.selection||!$$5(Editor.nodes(t,{match:function(t){var n=fi$1.getNodeType(t);return "paragraph"===n||!!n.startsWith("header")},universal:!0,mode:"highest"}),1)[0]}function mr$2(t,e){e&&Transforms.setNodes(t,{type:e});}(dr$2||vr$2)&&Ut$4(RegExp.prototype,"toString",(function(){var t=St$5(this),e=String(t.source),n=t.flags;return "/"+e+"/"+String(void 0===n&&t instanceof RegExp&&!("flags"in pr$2)?Oe$5.call(t):n)}),{unsafe:!0});var br$1=function(){function t(){this.title=qc$1("header.title"),this.iconSvg='<svg viewBox="0 0 1024 1024"><path d="M960 960c-51.2 0-102.4-3.2-153.6-3.2-51.2 0-99.2 3.2-150.4 3.2-19.2 0-28.8-22.4-28.8-38.4 0-51.2 57.6-28.8 86.4-48 19.2-12.8 19.2-60.8 19.2-80v-224-19.2c-9.6-3.2-19.2-3.2-28.8-3.2H320c-9.6 0-19.2 0-28.8 3.2V780.8c0 22.4 0 80 22.4 92.8 28.8 19.2 96-6.4 96 44.8 0 16-9.6 41.6-28.8 41.6-54.4 0-105.6-3.2-160-3.2-48 0-96 3.2-147.2 3.2-19.2 0-28.8-22.4-28.8-38.4 0-51.2 51.2-28.8 80-48 19.2-12.8 19.2-60.8 19.2-83.2V294.4c0-28.8 3.2-115.2-22.4-131.2-25.6-16-86.4 9.6-86.4-41.6 0-16 6.4-41.6 28.8-41.6 51.2 0 105.6 3.2 156.8 3.2 48 0 96-3.2 144-3.2 19.2 0 28.8 22.4 28.8 41.6 0 48-57.6 25.6-83.2 41.6-19.2 12.8-19.2 73.6-19.2 92.8v201.6c6.4 3.2 16 3.2 22.4 3.2h400c6.4 0 12.8 0 22.4-3.2V256c0-22.4 0-80-19.2-92.8-28.8-16-86.4 6.4-86.4-41.6 0-16 9.6-41.6 28.8-41.6 51.2 0 99.2 3.2 150.4 3.2 48 0 99.2-3.2 147.2-3.2 19.2 0 28.8 22.4 28.8 41.6 0 51.2-57.6 25.6-86.4 41.6-19.2 12.8-19.2 70.4-19.2 92.8v537.6c0 19.2 0 67.2 19.2 80 28.8 19.2 89.6-6.4 89.6 44.8 0 19.2-6.4 41.6-28.8 41.6z"></path></svg>',this.tag="select",this.width=60;}return t.prototype.getOptions=function(t){var e=[{value:"header1",text:"H1",styleForRenderMenuList:{"font-size":"32px","font-weight":"bold"}},{value:"header2",text:"H2",styleForRenderMenuList:{"font-size":"24px","font-weight":"bold"}},{value:"header3",text:"H3",styleForRenderMenuList:{"font-size":"18px","font-weight":"bold"}},{value:"header4",text:"H4",styleForRenderMenuList:{"font-size":"16px","font-weight":"bold"}},{value:"header5",text:"H5",styleForRenderMenuList:{"font-size":"13px","font-weight":"bold"}},{value:"paragraph",text:qc$1("header.text")}],r=this.getValue(t).toString();return e.forEach((function(t){t.value===r?t.selected=!0:delete t.selected;})),e},t.prototype.isActive=function(t){return !1},t.prototype.getValue=function(t){return gr$2(t)},t.prototype.isDisabled=function(t){return yr$2(t)},t.prototype.exec=function(t,e){mr$2(t,e.toString());},t}(),Sr$1=function(){function t(){this.tag="button";}return t.prototype.getValue=function(t){return gr$2(t)},t.prototype.isActive=function(t){return this.getValue(t)===this.type},t.prototype.isDisabled=function(t){return yr$2(t)},t.prototype.exec=function(t,e){var n=this.type;mr$2(t,e===n?"paragraph":n);},t}(),wr$1=function(t){function e(){var e=null!==t&&t.apply(this,arguments)||this;return e.title="H1",e.type="header1",e}return D$5(e,t),e}(Sr$1),xr$1=function(t){function e(){var e=null!==t&&t.apply(this,arguments)||this;return e.title="H2",e.type="header2",e}return D$5(e,t),e}(Sr$1),kr$1=function(t){function e(){var e=null!==t&&t.apply(this,arguments)||this;return e.title="H3",e.type="header3",e}return D$5(e,t),e}(Sr$1),Tr$1=function(t){function e(){var e=null!==t&&t.apply(this,arguments)||this;return e.title="H4",e.type="header4",e}return D$5(e,t),e}(Sr$1),Er$1=function(t){function e(){var e=null!==t&&t.apply(this,arguments)||this;return e.title="H5",e.type="header5",e}return D$5(e,t),e}(Sr$1),Mr$1={key:"headerSelect",factory:function(){return new br$1}},Or$1={key:"header1",factory:function(){return new wr$1}},Nr$1={key:"header2",factory:function(){return new xr$1}},Ir$1={key:"header3",factory:function(){return new kr$1}},Lr$1={key:"header4",factory:function(){return new Tr$1}},zr$1={key:"header5",factory:function(){return new Er$1}};function jr$1(t){return function(e,n,r){return "<h"+t+">"+n+"</h"+t+">"}}var Ar$1={renderElems:[er$2,nr$2,rr$2,or$2,ir$2],elemsToHtml:[{type:"header1",elemToHtml:jr$1(1)},{type:"header2",elemToHtml:jr$1(2)},{type:"header3",elemToHtml:jr$1(3)},{type:"header4",elemToHtml:jr$1(4)},{type:"header5",elemToHtml:jr$1(5)}],menus:[Mr$1,Or$1,Nr$1,Ir$1,Lr$1,zr$1],editorPlugin:function(t){var n=t.insertBreak,r=t;return r.insertBreak=function(){var o=$$5(Editor.nodes(r,{match:function(t){return fi$1.getNodeType(t).startsWith("header")},universal:!0}),1)[0];if(o)if(fi$1.isSelectionAtLineEnd(t,o[1])){Transforms.insertNodes(r,{type:"paragraph",children:[{text:""}]},{mode:"highest"});}else n();else n();},r}},Hr$1=Object.assign,Vr$1=Object.defineProperty,Cr$1=!Hr$1||X$5((function(){if(Q$5&&1!==Hr$1({b:1},Hr$1(Vr$1({},"a",{enumerable:!0,get:function(){Vr$1(this,"b",{value:3,enumerable:!1});}}),{b:2})).b)return !0;var t={},e={},n=Symbol(),r="abcdefghijklmnopqrst";return t[n]=7,r.split("").forEach((function(t){e[t]=t;})),7!=Hr$1({},t)[n]||ln$2(Hr$1({},e)).join("")!=r}))?function(t,e){for(var n=ft$5(t),r=arguments.length,o=1,i=pe$5.f,u=et$5.f;r>o;)for(var a,c=ut$5(arguments[o++]),l=i?ln$2(c).concat(i(c)):ln$2(c),s=l.length,f=0;s>f;)a=l[f++],Q$5&&!u.call(c,a)||(n[a]=c[a]);return n}:Hr$1;function Pr$1(t,e){null==t.data&&(t.data={});var n=t.data;null==n.style&&(n.style={}),Object.assign(n.style,e);}ke$5({target:"Object",stat:!0,forced:Object.assign!==Cr$1},{assign:Cr$1});var Dr$1,Br$1=Q$5?Object.defineProperties:function(t,e){St$5(t);for(var n,r=ln$2(e),o=r.length,i=0;o>i;)xt$5.f(t,n=r[i++],e[n]);return t},_r$1=Jt$4("document","documentElement"),Rr$1=Dt$5("IE_PROTO"),Fr$1=function(){},$r$1=function(t){return "<script>"+t+"<\/script>"},qr=function(){try{Dr$1=document.domain&&new ActiveXObject("htmlfile");}catch(t){}var t,e;qr=Dr$1?function(t){t.write($r$1("")),t.close();var e=t.parentWindow.Object;return t=null,e}(Dr$1):((e=gt$5("iframe")).style.display="none",_r$1.appendChild(e),e.src=String("javascript:"),(t=e.contentWindow.document).open(),t.write($r$1("document.F=Object")),t.close(),t.F);for(var n=le$5.length;n--;)delete qr.prototype[le$5[n]];return qr()};Bt$4[Rr$1]=!0;var Wr$1=Object.create||function(t,e){var n;return null!==t?(Fr$1.prototype=St$5(t),n=new Fr$1,Fr$1.prototype=null,n[Rr$1]=t):n=qr(),void 0===e?n:Br$1(n,e)},Gr$1=Qe$4("unscopables"),Ur$1=Array.prototype;null==Ur$1[Gr$1]&&xt$5.f(Ur$1,Gr$1,{configurable:!0,value:Wr$1(null)});var Kr$1=function(t){Ur$1[Gr$1][t]=!0;},Yr$1=gn$2.find,Jr=!0;"find"in[]&&Array(1).find((function(){Jr=!1;})),ke$5({target:"Array",proto:!0,forced:Jr},{find:function(t){return Yr$1(this,t,arguments.length>1?arguments[1]:void 0)}}),Kr$1("find"),$$6.fn.css=css,$$6.fn.append=append,$$6.fn.prepend=prepend,$$6.fn.addClass=addClass,$$6.fn.removeClass=removeClass,$$6.fn.hasClass=hasClass,$$6.fn.on=on$4,$$6.fn.off=off,$$6.fn.focus=focus,$$6.fn.attr=attr,$$6.fn.removeAttr=removeAttr,$$6.fn.hide=hide,$$6.fn.show=show,$$6.fn.parents=parents,$$6.fn.dataset=dataset,$$6.fn.val=val,$$6.fn.text=text,$$6.fn.html=html,$$6.fn.children=children,$$6.fn.remove=remove,$$6.fn.find=find,$$6.fn.width=width,$$6.fn.height=height;var Xr$1=function(){function t(){this.tag="button",this.showDropPanel=!0,this.$content=null;}return t.prototype.exec=function(t,e){},t.prototype.getValue=function(t){var e=this.mark,n=Editor.marks(t);return n&&n[e]?n[e]:""},t.prototype.isActive=function(t){return !!this.getValue(t)},t.prototype.isDisabled=function(t){return null==t.selection||!!$$5(Editor.nodes(t,{match:function(n){return "pre"===fi$1.getNodeType(n)||!!Editor.isVoid(t,n)},universal:!0}),1)[0]},t.prototype.getPanelContentElem=function(t){var e=this.mark;if(null==this.$content){var r=$$6('<ul class="w-e-panel-content-color"></ul>');r.on("mousedown","li",(function(n){var r=n.target;if(null!=r){n.preventDefault();var o=t.selection;if(null!=o&&!Range.isCollapsed(o)){var i=$$6(r).attr("data-value");"0"===i?Editor.removeMark(t,e):Editor.addMark(t,e,i);}}})),this.$content=r;}var o=this.$content;if(null==o)return $$6();o.html("");var i=this.getValue(t),a=t.getMenuConfig(e).colors;(void 0===a?[]:a).forEach((function(t){var e=$$6('<div class="color-block" data-value="'+t+'"></div>');e.css("background-color",t);var n=$$6('<li data-value="'+t+'"></li>');i===t&&n.addClass("active"),n.append(e),o.append(n);}));var c="";"color"===e&&(c=qc$1("color.default")),"bgColor"===e&&(c=qc$1("color.clear"));var l=$$6('\n      <li data-value="0" class="clear">\n        <svg viewBox="0 0 1024 1024"><path d="M236.8 128L896 787.2V128H236.8z m614.4 704L192 172.8V832h659.2zM192 64h704c38.4 0 64 25.6 64 64v704c0 38.4-25.6 64-64 64H192c-38.4 0-64-25.6-64-64V128c0-38.4 25.6-64 64-64z"></path></svg>\n        '+c+"\n      </li>\n    ");return o.prepend(l),o},t}(),Qr$1=function(t){function e(){var e=null!==t&&t.apply(this,arguments)||this;return e.title=qc$1("color.color"),e.iconSvg=An$2,e.mark="color",e}return D$5(e,t),e}(Xr$1),Zr=function(t){function e(){var e=null!==t&&t.apply(this,arguments)||this;return e.title=qc$1("color.bgColor"),e.iconSvg=Hn$2,e.mark="bgColor",e}return D$5(e,t),e}(Xr$1),to=["#000000","#262626","#595959","#8c8c8c","#bfbfbf","#d9d9d9","#e9e9e9e","#f5f5f5","#fafafa","#ffffff","#e13c39","#e75f33","#eb903a","#f5db4d","#72c040","#59bfc0","#4290f7","#3658e2","#6a39c9","#d84493","#fbe9e6","#fcede1","#fcefd4","#fcfbcf","#e7f6d5","#daf4f0","#d9edfa","#e0e8fa","#ede1f8","#f6e2ea","rgb(255, 163, 158)","rgb(255, 187, 150)","rgb(255, 213, 145)","rgb(255, 251, 143)","rgb(183, 235, 143)","rgb(135, 232, 222)","rgb(145, 213, 255)","rgb(173, 198, 255)","rgb(211, 173, 247)","rgb(255, 173, 210)","rgb(255, 77, 79)","rgb(255, 122, 69)","rgb(255, 169, 64)","rgb(255, 236, 61)","rgb(115, 209, 61)","rgb(54, 207, 201)","rgb(64, 169, 255)","rgb(89, 126, 247)","rgb(146, 84, 222)","rgb(247, 89, 171)","rgb(207, 19, 34)","rgb(212, 56, 13)","rgb(212, 107, 8)","rgb(212, 177, 6)","rgb(56, 158, 13)","rgb(8, 151, 156)","rgb(9, 109, 217)","rgb(29, 57, 196)","rgb(83, 29, 171)","rgb(196, 29, 127)","rgb(130, 0, 20)","rgb(135, 20, 0)","rgb(135, 56, 0)","rgb(97, 71, 0)","rgb(19, 82, 0)","rgb(0, 71, 79)","rgb(0, 58, 140)","rgb(6, 17, 120)","rgb(34, 7, 94)","rgb(120, 6, 80)"];var eo={renderTextStyle:function(t,e){var n=t,r=n.color,o=n.bgColor,i=e;return r&&Pr$1(i,{color:r}),o&&Pr$1(i,{backgroundColor:o}),i},textStyleToHtml:function(t,e){if(!Text.isText(t))return e;var n=t,r=n.color,o=n.bgColor,i=n.text;if(!r&&!o)return e;e===i&&(e="<span>"+i+"</span>");var u=$$6(e);r&&u.css("color",r),o&&u.css("background-color",o);var a=$$6("<div></div>");return a.append(u),a.html()},menus:[{key:"color",factory:function(){return new Qr$1},config:{colors:to}},{key:"bgColor",factory:function(){return new Zr},config:{colors:to}}]},no=function(t){if("string"!=typeof t)return !1;var e=t.match(ro);if(!e)return !1;var n=e[1];if(!n)return !1;if(oo.test(n)||io.test(n))return !0;return !1},ro=/^(?:\w+:)?\/\/(\S+)$/,oo=/^localhost[\:?\d]*(?:[^\:?\d]\S*)?$/,io=/^[^\s\.]+\.\S{2,}$/;var uo=ue$5.includes;ke$5({target:"Array",proto:!0},{includes:function(t){return uo(this,t,arguments.length>1?arguments[1]:void 0)}}),Kr$1("includes");var ao=Qe$4("species"),co=function(t){return Ge$4>=51||!X$5((function(){var e=[];return (e.constructor={})[ao]=function(){return {foo:1}},1!==e[t](Boolean).foo}))},lo=co("slice"),so=Qe$4("species"),fo=[].slice,po=Math.max;ke$5({target:"Array",proto:!0,forced:!lo},{slice:function(t,e){var n,r,o,i,u,a,c,l=ct$5(this),s=ee$5(l.length),f=oe$5(t,s),p=oe$5(void 0===e?s:e,s);if(fn$2(l)&&("function"!=typeof(n=l.constructor)||n!==Array&&!fn$2(n.prototype)?lt$5(n)&&null===(n=n[so])&&(n=void 0):n=void 0,n===Array||void 0===n))return fo.call(l,f,p);for(r=new(void 0===n?Array:n)(po(p-f,0)),o=0;f<p;f++,o++)f in l&&(i=r,u=o,a=l[f],c=void 0,(c=st$5(u))in i?xt$5.f(i,c,nt$5(0,a)):i[c]=a);return r.length=o,r}});var ho=Qe$4("species"),vo=RegExp.prototype,go=!X$5((function(){var t=/./;return t.exec=function(){var t=[];return t.groups={a:"7"},t},"7"!=="".replace(t,"$<a>")})),yo="$0"==="a".replace(/./,"$0"),mo=Qe$4("replace"),bo=!!/./[mo]&&""===/./[mo]("a","$0"),So=!X$5((function(){var t=/(?:)/,e=t.exec;t.exec=function(){return e.apply(this,arguments)};var n="ab".split(t);return 2!==n.length||"a"!==n[0]||"b"!==n[1]})),wo=function(t,e,n,r){var o=Qe$4(t),i=!X$5((function(){var e={};return e[o]=function(){return 7},7!=""[t](e)})),u=i&&!X$5((function(){var e=!1,n=/a/;return "split"===t&&((n={}).constructor={},n.constructor[ho]=function(){return n},n.flags="",n[o]=/./[o]),n.exec=function(){return e=!0,null},n[o](""),!e}));if(!i||!u||"replace"===t&&(!go||!yo||bo)||"split"===t&&!So){var a=/./[o],c=n(o,""[t],(function(t,e,n,r,o){var u=e.exec;return u===De$4||u===vo.exec?i&&!o?{done:!0,value:a.call(e,n,r)}:{done:!0,value:t.call(n,e,r)}:{done:!1}}),{REPLACE_KEEPS_$0:yo,REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE:bo}),l=c[0],s=c[1];Ut$4(String.prototype,t,l),Ut$4(vo,o,2==e?function(t,e){return s.call(t,this,e)}:function(t){return s.call(t,this)});}r&&kt$5(vo[o],"sham",!0);},xo=function(t){return function(e,n){var r,o,i=String(at$5(e)),u=Zt$4(n),a=i.length;return u<0||u>=a?t?"":void 0:(r=i.charCodeAt(u))<55296||r>56319||u+1===a||(o=i.charCodeAt(u+1))<56320||o>57343?t?i.charAt(u):r:t?i.slice(u,u+2):o-56320+(r-55296<<10)+65536}},ko={codeAt:xo(!1),charAt:xo(!0)}.charAt,To=function(t,e,n){return e+(n?ko(t,e).length:1)},Eo=Math.floor,Mo="".replace,Oo=/\$([$&'`]|\d{1,2}|<[^>]*>)/g,No=/\$([$&'`]|\d{1,2})/g,Io=function(t,e,n,r,o,i){var u=n+t.length,a=r.length,c=No;return void 0!==o&&(o=ft$5(o),c=Oo),Mo.call(i,c,(function(i,c){var l;switch(c.charAt(0)){case"$":return "$";case"&":return t;case"`":return e.slice(0,n);case"'":return e.slice(u);case"<":l=o[c.slice(1,-1)];break;default:var s=+c;if(0===s)return i;if(s>a){var f=Eo(s/10);return 0===f?i:f<=a?void 0===r[f-1]?c.charAt(1):r[f-1]+c.charAt(1):i}l=r[s-1];}return void 0===l?"":l}))},Lo=function(t,e){var n=t.exec;if("function"==typeof n){var r=n.call(t,e);if("object"!=typeof r)throw TypeError("RegExp exec method returned something other than an Object or null");return r}if("RegExp"!==ot$5(t))throw TypeError("RegExp#exec called on incompatible receiver");return De$4.call(t,e)},zo=Math.max,jo=Math.min;function Ao(t){return void 0===t&&(t="r"),t+"-"+Date.now().toString().slice(-5)+Math.random().toString(36).slice(-5)}function Ho(t){return t.replace(/</g,"&lt;").replace(/>/g,"&gt;")}function Vo(t,e,n,r){return _$5(this,void 0,void 0,(function(){var o,i;return R$5(this,(function(u){switch(u.label){case 0:return (o=e.getMenuConfig(t).checkLink)?[4,o(n,r)]:[3,2];case 1:if("string"==typeof(i=u.sent()))return e.alert(i,"error"),[2,!1];if(null==i)return [2,!1];u.label=2;case 2:return [2,!0]}}))}))}function Co(t){return null==t.selection||!!fi$1.getSelectedElems(t).some((function(e){var n=e.type;return !!t.isVoid(e)||(!!["pre","code","link"].includes(n)||void 0)}))}function Po(t,n,r){return _$5(this,void 0,void 0,(function(){var o,i,u;return R$5(this,(function(a){switch(a.label){case 0:return r?(n||(n=r),fi$1.checkMaxLength(t,n)?[2]:(t.restoreSelection(),Co(t)?[2]:[4,Vo("insertLink",t,n,r)])):[2];case 1:return a.sent()?(null==(o=t.selection)||(i=Range.isCollapsed(o),u={type:"link",url:Ho(r),children:i?[{text:n}]:[]},i?(t.insertText(" "),Transforms.insertNodes(t,u),t.insertText(" ")):(Transforms.wrapNodes(t,u,{split:!0}),Transforms.collapse(t,{edge:"end"}))),[2]):[2]}}))}))}wo("replace",2,(function(t,e,n,r){var o=r.REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE,i=r.REPLACE_KEEPS_$0,u=o?"$":"$0";return [function(n,r){var o=at$5(this),i=null==n?void 0:n[t];return void 0!==i?i.call(n,o,r):e.call(String(o),n,r)},function(t,r){if(!o&&i||"string"==typeof r&&-1===r.indexOf(u)){var a=n(e,t,this,r);if(a.done)return a.value}var c=St$5(t),l=String(this),s="function"==typeof r;s||(r=String(r));var f=c.global;if(f){var p=c.unicode;c.lastIndex=0;}for(var h=[];;){var d=Lo(c,l);if(null===d)break;if(h.push(d),!f)break;""===String(d[0])&&(c.lastIndex=To(l,ee$5(c.lastIndex),p));}for(var v,g="",y=0,m=0;m<h.length;m++){d=h[m];for(var b=String(d[0]),S=zo(jo(Zt$4(d.index),l.length),0),w=[],x=1;x<d.length;x++)w.push(void 0===(v=d[x])?v:String(v));var k=d.groups;if(s){var T=[b].concat(w,S,l);void 0!==k&&T.push(k);var E=String(r.apply(void 0,T));}else E=Io(b,l,S,w,k,r);S>=y&&(g+=l.slice(y,S)+E,y=S+b.length);}return g+l.slice(y)}]}));var Do={type:"link",renderElem:function(t,e,n){var r=t,o=r.url,u=r.target;return jsx("a",{href:o,target:void 0===u?"_blank":u},e)}};var Bo={type:"link",elemToHtml:function(t,e,n){var r=t,o=r.url,i=r.target;return '<a href="'+o+'" target="'+(void 0===i?"_blank":i)+'">'+e+"</a>"}};function _o(){return Ao("w-e-insert-link")}var Ro=function(){function t(){this.title=qc$1("link.insert"),this.iconSvg='<svg viewBox="0 0 1024 1024"><path d="M440.224 635.776a51.84 51.84 0 0 1-36.768-15.232c-95.136-95.136-95.136-249.92 0-345.056l192-192C641.536 37.408 702.816 12.032 768 12.032s126.432 25.376 172.544 71.456c95.136 95.136 95.136 249.92 0 345.056l-87.776 87.776a51.968 51.968 0 1 1-73.536-73.536l87.776-87.776a140.16 140.16 0 0 0 0-197.984c-26.432-26.432-61.6-40.992-99.008-40.992s-72.544 14.56-99.008 40.992l-192 192a140.16 140.16 0 0 0 0 197.984 51.968 51.968 0 0 1-36.768 88.768z"></path><path d="M256 1012a242.4 242.4 0 0 1-172.544-71.456c-95.136-95.136-95.136-249.92 0-345.056l87.776-87.776a51.968 51.968 0 1 1 73.536 73.536l-87.776 87.776a140.16 140.16 0 0 0 0 197.984c26.432 26.432 61.6 40.992 99.008 40.992s72.544-14.56 99.008-40.992l192-192a140.16 140.16 0 0 0 0-197.984 51.968 51.968 0 1 1 73.536-73.536c95.136 95.136 95.136 249.92 0 345.056l-192 192A242.4 242.4 0 0 1 256 1012z"></path></svg>',this.tag="button",this.showModal=!0,this.modalWidth=300,this.$content=null,this.textInputId=_o(),this.urlInputId=_o(),this.buttonId=_o();}return t.prototype.getValue=function(t){return ""},t.prototype.isActive=function(t){return !1},t.prototype.exec=function(t,e){},t.prototype.isDisabled=function(t){return Co(t)},t.prototype.getModalPositionNode=function(t){return null},t.prototype.getModalContentElem=function(t){var e=t.selection,i=this,a=i.textInputId,c=i.urlInputId,l=i.buttonId,s=$$5(Au$1(qc$1("link.text"),a),2),h=s[0],d=s[1],v=$$5(Au$1(qc$1("link.url"),c),2),g=v[0],y=v[1],m=$$5(Fu$1(l,qc$1("common.ok")),1)[0];if(null==this.$content){var b=$$6("<div></div>");b.on("click","#"+l,(function(e){e.preventDefault();var n=$$6("#"+a).val(),r=$$6("#"+c).val();Po(t,n,r),t.hidePanelOrModal();})),this.$content=b;}var S=this.$content;if(S.html(""),S.append(h),S.append(g),S.append(m),null==e||Range.isCollapsed(e))d.val("");else {var w=Editor.string(t,e);d.val(w);}return y.val(""),setTimeout((function(){$$6("#"+a).focus();})),S},t}();function Fo(){return Ao("w-e-update-link")}var $o=function(){function t(){this.title=qc$1("link.edit"),this.iconSvg=zn$2,this.tag="button",this.showModal=!0,this.modalWidth=300,this.$content=null,this.urlInputId=Fo(),this.buttonId=Fo();}return t.prototype.getSelectedLinkElem=function(t){var n=fi$1.getSelectedNodeByType(t,"link");return null==n?null:n},t.prototype.getValue=function(t){var e=this.getSelectedLinkElem(t);return e&&e.url||""},t.prototype.isActive=function(t){return !1},t.prototype.exec=function(t,e){},t.prototype.isDisabled=function(t){return null==t.selection||null==this.getSelectedLinkElem(t)},t.prototype.getModalPositionNode=function(t){return fi$1.getSelectedNodeByType(t,"link")},t.prototype.getModalContentElem=function(t){var i=this.urlInputId,u=this.buttonId,a=$$5(Au$1(qc$1("link.url"),i),2),l=a[0],f=a[1],h=$$5(Fu$1(u,qc$1("common.ok")),1)[0];if(null==this.$content){var d=$$6("<div></div>");d.on("click","button",(function(n){n.preventDefault(),t.restoreSelection();var r=fi$1.getSelectedNodeByType(t,"link"),o=r?Node$1.string(r):"",u=$$6("#"+i).val();!function(t,n,r){_$5(this,void 0,void 0,(function(){var o;return R$5(this,(function(i){switch(i.label){case 0:return r?[4,Vo("editLink",t,n,r)]:[2];case 1:return i.sent()?(o={url:Ho(r)},Transforms.setNodes(t,o,{match:function(t){return fi$1.checkNodeType(t,"link")}}),[2]):[2]}}))}));}(t,o,u),t.hidePanelOrModal();})),this.$content=d;}var v=this.$content;v.html(""),v.append(l),v.append(h);var g=this.getValue(t);return f.val(g),setTimeout((function(){$$6("#"+i).focus();})),v},t}(),qo=function(){function t(){this.title=qc$1("link.unLink"),this.iconSvg='<svg viewBox="0 0 1024 1024"><path d="M608.16328 811.815036c9.371954 9.371954 9.371954 24.56788 0 33.941834l-89.347563 89.347564c-118.525421 118.523421-311.38448 118.531421-429.919901 0-118.527421-118.529421-118.527421-311.39048 0-429.917901l89.349564-89.349563c9.371954-9.371954 24.56788-9.371954 33.941834 0l79.195613 79.195613c9.371954 9.371954 9.371954 24.56788 0 33.941834l-89.349563 89.347564c-56.143726 56.145726-56.143726 147.49928 0 203.645005 56.143726 56.143726 147.49928 56.145726 203.647005 0l89.347564-89.347563c9.371954-9.371954 24.56788-9.371954 33.941834 0l79.193613 79.195613z m-113.135447-520.429459c9.371954 9.371954 24.56788 9.371954 33.941834 0l89.347564-89.347564c56.143726-56.149726 147.49928-56.145726 203.647006 0 56.143726 56.145726 56.143726 147.49928 0 203.645006l-89.349564 89.347564c-9.371954 9.371954-9.371954 24.56788 0 33.941834l79.195613 79.195613c9.371954 9.371954 24.56788 9.371954 33.941834 0l89.349564-89.349563c118.529421-118.529421 118.529421-311.38848 0-429.917901-118.531421-118.527421-311.38848-118.527421-429.919901 0l-89.347563 89.347564c-9.371954 9.371954-9.371954 24.56788 0 33.941834l79.193613 79.195613z m469.653707 718.556492l45.253779-45.253779c18.745908-18.745908 18.745908-49.13776 0-67.881669L127.195629 14.062931c-18.745908-18.745908-49.13776-18.745908-67.881669 0L14.058181 59.31871c-18.745908 18.745908-18.745908 49.13776 0 67.881669l882.74169 882.74169c18.745908 18.743908 49.13776 18.743908 67.881669 0z"></path></svg>',this.tag="button";}return t.prototype.getValue=function(t){return ""},t.prototype.isActive=function(t){return !1},t.prototype.isDisabled=function(t){return null==t.selection||null==fi$1.getSelectedNodeByType(t,"link")},t.prototype.exec=function(t,n){this.isDisabled(t)||Transforms.unwrapNodes(t,{match:function(t){return fi$1.checkNodeType(t,"link")}});},t}(),Wo=function(){function t(){this.title=qc$1("link.view"),this.iconSvg=jn$2,this.tag="button";}return t.prototype.getSelectedLinkElem=function(t){var n=fi$1.getSelectedNodeByType(t,"link");return null==n?null:n},t.prototype.getValue=function(t){var e=this.getSelectedLinkElem(t);return e&&e.url||""},t.prototype.isActive=function(t){return !1},t.prototype.isDisabled=function(t){return null==t.selection||null==this.getSelectedLinkElem(t)},t.prototype.exec=function(t,e){if(!this.isDisabled(t)){if(!e||"string"!=typeof e)throw new Error("View link failed, link url is '"+e+"'");window.open(e,"_blank");}},t}();var Go={checkLink:function(t,e){return !0}},Uo={renderElems:[Do],elemsToHtml:[Bo],menus:[{key:"insertLink",factory:function(){return new Ro},config:Go},{key:"editLink",factory:function(){return new $o},config:Go},{key:"unLink",factory:function(){return new qo}},{key:"viewLink",factory:function(){return new Wo}}],editorPlugin:function(t){var e=t.isInline,n=t.insertData,r=t;return r.isInline=function(t){return "link"===t.type||e(t)},r.insertData=function(t){var e=t.getData("text/plain");if(no(e)){if(!Co(r)){var o=r.selection;if(null!=o){var i=Editor.string(r,o);Po(r,i,e);}}}else n(t);},r}};var Ko=function(t){var e=String(at$5(this)),n="",r=Zt$4(t);if(r<0||r==1/0)throw RangeError("Wrong number of repetitions");for(;r>0;(r>>>=1)&&(e+=e))1&r&&(n+=e);return n},Yo=1..toFixed,Jo=Math.floor,Xo=function(t,e,n){return 0===e?n:e%2==1?Xo(t,e-1,n*t):Xo(t*t,e/2,n)},Qo=function(t,e,n){for(var r=-1,o=n;++r<6;)o+=e*t[r],t[r]=o%1e7,o=Jo(o/1e7);},Zo=function(t,e){for(var n=6,r=0;--n>=0;)r+=t[n],t[n]=Jo(r/e),r=r%e*1e7;},ti=function(t){for(var e=6,n="";--e>=0;)if(""!==n||0===e||0!==t[e]){var r=String(t[e]);n=""===n?r:n+Ko.call("0",7-r.length)+r;}return n};function ei(t,n){return "w-e-image-container-"+fi$1.findKey(t,n).id}function ni(t,n,r,o){var u=$$6("body"),a=ei(t,n),c=o.width,l=o.height,f=0,h=0,d=0,v=!1,g=null;function y(n){g=function(){var t=$$6("#"+a);if(0===t.length)throw new Error("Cannot find image container elem");return t}(),f=n;var r=g.find("img");if(0===r.length)throw new Error("Cannot find image elem");h=r.width(),d=r.height(),u.on("mousemove",m),u.on("mouseup",b);var o=fi$1.getHoverbar(t);o&&o.hideAndClean();}var m=lodash_throttle((function(t){t.preventDefault();var e=t.clientX,n=h+(v?f-e:e-f),r=d*(n/h);null!=g&&(n<=15||r<=15||(g.css("width",n+"px"),g.css("height",r+"px")));}),100);function b(r){if(u.off("mousemove",m),null!=g){var o=g.width().toFixed(2),i=g.height().toFixed(2),a={style:B$5(B$5({},n.style),{width:o+"px",height:i+"px"})};Transforms.setNodes(t,a,{at:fi$1.findPath(t,n)}),u.off("mouseup",b);}}var S={};return c&&(S.width=c),l&&(S.height=l),jsx("div",{id:a,style:S,className:"w-e-image-container w-e-selected-image-container",on:{mousedown:function(t){var e=$$6(t.target);e.hasClass("w-e-image-dragger")&&(t.preventDefault(),(e.hasClass("left-top")||e.hasClass("left-bottom"))&&(v=!0),y(t.clientX));}}},r,jsx("div",{className:"w-e-image-dragger left-top"}),jsx("div",{className:"w-e-image-dragger right-top"}),jsx("div",{className:"w-e-image-dragger left-bottom"}),jsx("div",{className:"w-e-image-dragger right-bottom"}))}ke$5({target:"Number",proto:!0,forced:Yo&&("0.000"!==8e-5.toFixed(3)||"1"!==.9.toFixed(0)||"1.25"!==1.255.toFixed(2)||"1000000000000000128"!==(0xde0b6b3a7640080).toFixed(0))||!X$5((function(){Yo.call({});}))},{toFixed:function(t){var e,n,r,o,i=function(t){if("number"!=typeof t&&"Number"!=ot$5(t))throw TypeError("Incorrect invocation");return +t}(this),u=Zt$4(t),a=[0,0,0,0,0,0],c="",l="0";if(u<0||u>20)throw RangeError("Incorrect fraction digits");if(i!=i)return "NaN";if(i<=-1e21||i>=1e21)return String(i);if(i<0&&(c="-",i=-i),i>1e-21)if(n=(e=function(t){for(var e=0,n=t;n>=4096;)e+=12,n/=4096;for(;n>=2;)e+=1,n/=2;return e}(i*Xo(2,69,1))-69)<0?i*Xo(2,-e,1):i/Xo(2,e,1),n*=4503599627370496,(e=52-e)>0){for(Qo(a,0,n),r=u;r>=7;)Qo(a,1e7,0),r-=7;for(Qo(a,Xo(10,r,1),0),r=e-1;r>=23;)Zo(a,1<<23),r-=23;Zo(a,1<<r),Qo(a,1,1),Zo(a,2),l=ti(a);}else Qo(a,0,n),Qo(a,1<<-e,0),l=ti(a)+Ko.call("0",u);return l=u>0?c+((o=l.length)<=u?"0."+Ko.call("0",u-o)+l:l.slice(0,o-u)+"."+l.slice(o-u)):c+l}});var ri={type:"image",renderElem:function(t,n,r){var o=t,u=o.src,a=o.alt,c=void 0===a?"":a,l=o.href,s=void 0===l?"":l,f=o.style,p=void 0===f?{}:f,h=p.width,d=void 0===h?"":h,v=p.height,g=void 0===v?"":v,y=fi$1.isNodeSelected(r,t),m={};d&&(m.width="100%"),g&&(m.height="100%");var b=jsx("img",{style:m,src:u,alt:c,"data-href":s});return y?ni(r,t,b,{width:d,height:g}):function(t,e,n,r){var o=r.width,u=r.height,a={};o&&(a.width=o),u&&(a.height=u);var c=ei(t,e);return jsx("div",{id:c,style:a,className:"w-e-image-container"},n)}(r,t,b,{width:d,height:g})}};var oi,ii={type:"image",elemToHtml:function(t,e,n){var r=t,o=r.src,i=r.alt,u=void 0===i?"":i,a=r.href,c=void 0===a?"":a,l=r.style,s=void 0===l?{}:l,f=s.width,p=void 0===f?"":f,h=s.height,d=void 0===h?"":h,v="";return p&&(v+="width: "+p+";"),d&&(v+="height: "+d+";"),'<img src="'+o+'" alt="'+u+'" data-href="'+c+'" style="'+v+'"/>'}},ui="\t\n\v\f\r                　\u2028\u2029\ufeff",ai="["+ui+"]",ci=RegExp("^"+ai+ai+"*"),li=RegExp(ai+ai+"*$"),si=function(t){return function(e){var n=String(at$5(e));return 1&t&&(n=n.replace(ci,"")),2&t&&(n=n.replace(li,"")),n}},fi={start:si(1),end:si(2),trim:si(3)},pi=fi.trim;function hi(t,e,n,r,o){return void 0===r&&(r=""),void 0===o&&(o=""),_$5(this,void 0,void 0,(function(){var i,u;return R$5(this,(function(a){switch(a.label){case 0:return (i=e.getMenuConfig(t).checkImage)?[4,i(n,r,o)]:[3,2];case 1:if("string"==typeof(u=a.sent()))return e.alert(u,"error"),[2,!1];if(null==u)return [2,!1];a.label=2;case 2:return [2,!0]}}))}))}function di(t,e,n,r){return void 0===n&&(n=""),void 0===r&&(r=""),_$5(this,void 0,void 0,(function(){var o,i;return R$5(this,(function(u){switch(u.label){case 0:return [4,hi("insertImage",t,e,n,r)];case 1:return u.sent()?(o={type:"image",src:Ho(e),href:r,alt:n,style:{},children:[{text:""}]},Transforms.insertNodes(t,o),(i=t.getMenuConfig("insertImage").onInsertedImage)&&i(o),[2]):[2]}}))}))}function vi(t,n,r,o,i){return void 0===r&&(r=""),void 0===o&&(o=""),void 0===i&&(i={}),_$5(this,void 0,void 0,(function(){var u,a,c,l,f;return R$5(this,(function(p){switch(p.label){case 0:return [4,hi("editImage",t,n,r,o)];case 1:return p.sent()?(null==(u=fi$1.getSelectedNodeByType(t,"image"))||(a=u.style,c={src:n,alt:r,href:o,style:B$5(B$5({},void 0===a?{}:a),i)},Transforms.setNodes(t,c,{match:function(t){return fi$1.checkNodeType(t,"image")}}),l=fi$1.getSelectedNodeByType(t,"image"),(f=t.getMenuConfig("editImage").onUpdatedImage)&&f(l)),[2]):[2]}}))}))}function gi(){return Ao("w-e-insert-image")}ke$5({target:"String",proto:!0,forced:(oi="trim",X$5((function(){return !!ui[oi]()||"​᠎"!="​᠎"[oi]()||ui[oi].name!==oi})))},{trim:function(){return pi(this)}});var yi=function(){function t(){this.title=qc$1("image.netImage"),this.iconSvg='<svg viewBox="0 0 1024 1024"><path d="M959.877 128l0.123 0.123v767.775l-0.123 0.122H64.102l-0.122-0.122V128.123l0.122-0.123h895.775zM960 64H64C28.795 64 0 92.795 0 128v768c0 35.205 28.795 64 64 64h896c35.205 0 64-28.795 64-64V128c0-35.205-28.795-64-64-64zM832 288.01c0 53.023-42.988 96.01-96.01 96.01s-96.01-42.987-96.01-96.01S682.967 192 735.99 192 832 234.988 832 288.01zM896 832H128V704l224.01-384 256 320h64l224.01-192z"></path></svg>',this.tag="button",this.showModal=!0,this.modalWidth=300,this.$content=null,this.srcInputId=gi(),this.altInputId=gi(),this.hrefInputId=gi(),this.buttonId=gi();}return t.prototype.getValue=function(t){return ""},t.prototype.isActive=function(t){return !1},t.prototype.exec=function(t,e){},t.prototype.isDisabled=function(t){var n=t.selection;return null==n||(!Range.isCollapsed(n)||!!$$5(Editor.nodes(t,{match:function(n){var r=fi$1.getNodeType(n);return "code"===r||("pre"===r||("link"===r||("list-item"===r||(!!r.startsWith("header")||("blockquote"===r||!!Editor.isVoid(t,n))))))},universal:!0}),1)[0])},t.prototype.getModalPositionNode=function(t){return null},t.prototype.getModalContentElem=function(t){var e=this,i=this,u=i.srcInputId,a=i.altInputId,c=i.hrefInputId,l=i.buttonId,s=$$5(Au$1(qc$1("image.src"),u),2),f=s[0],h=s[1],d=$$5(Au$1(qc$1("image.desc"),a),2),v=d[0],g=d[1],y=$$5(Au$1(qc$1("image.link"),c),2),m=y[0],b=y[1],S=$$5(Fu$1(l,qc$1("common.ok")),1)[0];if(null==this.$content){var w=$$6("<div></div>");w.on("click","#"+l,(function(n){n.preventDefault();var r=$$6("#"+u).val().trim(),o=$$6("#"+a).val().trim(),i=$$6("#"+c).val().trim();e.insertImage(t,r,o,i),t.hidePanelOrModal();})),this.$content=w;}var x=this.$content;return x.html(""),x.append(f),x.append(v),x.append(m),x.append(S),h.val(""),g.val(""),b.val(""),setTimeout((function(){$$6("#"+u).focus();})),x},t.prototype.insertImage=function(t,e,n,r){void 0===n&&(n=""),void 0===r&&(r=""),e&&(t.restoreSelection(),this.isDisabled(t)||di(t,e,n,r));},t}(),mi=function(){function t(){this.title=qc$1("image.delete"),this.iconSvg='<svg viewBox="0 0 1024 1024"><path d="M826.8032 356.5312c-19.328 0-36.3776 15.6928-36.3776 35.0464v524.2624c0 19.328-16 34.56-35.328 34.56H264.9344c-19.328 0-35.5072-15.3088-35.5072-34.56V390.0416c0-19.328-14.1568-35.0464-33.5104-35.0464s-33.5104 15.6928-33.5104 35.0464V915.712c0 57.9328 44.6208 108.288 102.528 108.288H755.2c57.9328 0 108.0832-50.4576 108.0832-108.288V391.4752c-0.1024-19.2512-17.1264-34.944-36.48-34.944z" p-id="9577"></path><path d="M437.1712 775.7568V390.6048c0-19.328-14.1568-35.0464-33.5104-35.0464s-33.5104 15.616-33.5104 35.0464v385.152c0 19.328 14.1568 35.0464 33.5104 35.0464s33.5104-15.7184 33.5104-35.0464zM649.7024 775.7568V390.6048c0-19.328-17.0496-35.0464-36.3776-35.0464s-36.3776 15.616-36.3776 35.0464v385.152c0 19.328 17.0496 35.0464 36.3776 35.0464s36.3776-15.7184 36.3776-35.0464zM965.0432 217.0368h-174.6176V145.5104c0-57.9328-47.2064-101.76-104.6528-101.76h-350.976c-57.8304 0-105.3952 43.8528-105.3952 101.76v71.5264H54.784c-19.4304 0-35.0464 14.1568-35.0464 33.5104 0 19.328 15.616 33.5104 35.0464 33.5104h910.3616c19.328 0 35.0464-14.1568 35.0464-33.5104 0-19.3536-15.6928-33.5104-35.1488-33.5104z m-247.3728 0H297.3952V145.5104c0-19.328 18.2016-34.7648 37.4272-34.7648h350.976c19.1488 0 31.872 15.1296 31.872 34.7648v71.5264z"></path></svg>',this.tag="button";}return t.prototype.getValue=function(t){return ""},t.prototype.isActive=function(t){return !1},t.prototype.isDisabled=function(t){return null==t.selection||null==fi$1.getSelectedNodeByType(t,"image")},t.prototype.exec=function(t,n){this.isDisabled(t)||Transforms.removeNodes(t,{match:function(t){return fi$1.checkNodeType(t,"image")}});},t}();function bi(){return Ao("w-e-edit-image")}var Si=function(){function t(){this.title=qc$1("image.edit"),this.iconSvg=zn$2,this.tag="button",this.showModal=!0,this.modalWidth=300,this.$content=null,this.srcInputId=bi(),this.altInputId=bi(),this.hrefInputId=bi(),this.buttonId=bi();}return t.prototype.getValue=function(t){return ""},t.prototype.getImageNode=function(t){return fi$1.getSelectedNodeByType(t,"image")},t.prototype.isActive=function(t){return !1},t.prototype.exec=function(t,e){},t.prototype.isDisabled=function(t){var n=t.selection;return null==n||(!Range.isCollapsed(n)||null==fi$1.getSelectedNodeByType(t,"image"))},t.prototype.getModalPositionNode=function(t){return this.getImageNode(t)},t.prototype.getModalContentElem=function(t){var e=this,i=this,u=i.srcInputId,a=i.altInputId,c=i.hrefInputId,l=i.buttonId,s=this.getImageNode(t);if(null==s)throw new Error("Not found selected image node");var f=$$5(Au$1(qc$1("image.src"),u),2),h=f[0],d=f[1],v=$$5(Au$1(qc$1("image.desc"),a),2),g=v[0],y=v[1],m=$$5(Au$1(qc$1("image.link"),c),2),b=m[0],S=m[1],w=$$5(Fu$1(l,qc$1("common.ok")),1)[0];if(null==this.$content){var x=$$6("<div></div>");x.on("click","#"+l,(function(n){n.preventDefault();var r=$$6("#"+u).val(),o=$$6("#"+a).val(),i=$$6("#"+c).val();e.updateImage(t,r,o,i),t.hidePanelOrModal();})),this.$content=x;}var k=this.$content;k.html(""),k.append(h),k.append(g),k.append(b),k.append(w);var T=s,E=T.src,M=T.alt,O=void 0===M?"":M,N=T.href,I=void 0===N?"":N;return d.val(E),y.val(O),S.val(I),setTimeout((function(){$$6("#"+u).focus();})),k},t.prototype.updateImage=function(t,e,n,r,o){void 0===n&&(n=""),void 0===r&&(r=""),void 0===o&&(o={}),e&&(t.restoreSelection(),this.isDisabled(t)||vi(t,e,n,r,o));},t}(),wi=function(){function t(){this.title=qc$1("image.viewLink"),this.iconSvg=jn$2,this.tag="button";}return t.prototype.getValue=function(t){var n=fi$1.getSelectedNodeByType(t,"image");return n&&n.href||""},t.prototype.isActive=function(t){return !1},t.prototype.isDisabled=function(t){return null==t.selection||!this.getValue(t)},t.prototype.exec=function(t,e){if(!this.isDisabled(t)){if(!e||"string"!=typeof e)throw new Error("View image link failed, image.href is '"+e+"'");window.open(e,"_blank");}},t}(),xi=function(){function t(){this.tag="button";}return t.prototype.getValue=function(t){return ""},t.prototype.isActive=function(t){return !1},t.prototype.getSelectedNode=function(t){return fi$1.getSelectedNodeByType(t,"image")},t.prototype.isDisabled=function(t){return null==t.selection||null==this.getSelectedNode(t)},t.prototype.exec=function(t,n){if(!this.isDisabled(t)){var r=this.getSelectedNode(t);if(null!=r){var o=fi$1.getHoverbar(t);o&&o.hideAndClean();var i=r.style,u={style:B$5(B$5({},void 0===i?{}:i),{width:this.value,height:""})};Transforms.setNodes(t,u,{match:function(t){return fi$1.checkNodeType(t,"image")}});}}},t}(),ki=function(t){function e(){var e=null!==t&&t.apply(this,arguments)||this;return e.title="30%",e.value="30%",e}return D$5(e,t),e}(xi),Ti=function(t){function e(){var e=null!==t&&t.apply(this,arguments)||this;return e.title="50%",e.value="50%",e}return D$5(e,t),e}(xi),Ei=function(t){function e(){var e=null!==t&&t.apply(this,arguments)||this;return e.title="100%",e.value="100%",e}return D$5(e,t),e}(xi);var Mi={onInsertedImage:function(t){},checkImage:function(t,e,n){return !0},onUpdatedImage:function(t){}},Oi={renderElems:[ri],elemsToHtml:[ii],menus:[{key:"insertImage",factory:function(){return new yi},config:Mi},{key:"deleteImage",factory:function(){return new mi}},{key:"editImage",factory:function(){return new Si},config:Mi},{key:"viewImageLink",factory:function(){return new wi}},{key:"imageWidth30",factory:function(){return new ki}},{key:"imageWidth50",factory:function(){return new Ti}},{key:"imageWidth100",factory:function(){return new Ei}}],editorPlugin:function(t){var e=t.isInline,n=t.isVoid,r=t;return r.isInline=function(t){return "image"===t.type||e(t)},r.isVoid=function(t){return "image"===t.type||n(t)},r}};var Ni={type:"blockquote",renderElem:function(t,e,n){return jsx("blockquote",null,e)}};var Ii={type:"blockquote",elemToHtml:function(t,e,n){return "<blockquote>"+e+"</blockquote>"}},Li=function(){function t(){this.title=qc$1("blockQuote.title"),this.iconSvg='<svg viewBox="0 0 1024 1024"><path d="M894.6 907.1H605.4c-32.6 0-59-26.4-59-59V608.2l-4-14.9c0-315.9 125.5-485.1 376.5-507.5v59.8C752.7 180.4 711.3 315.8 711.3 442.4v41.2l31.5 12.3h151.8c32.6 0 59 26.4 59 59v293.2c0 32.5-26.4 59-59 59z m-472 0H133.4c-32.6 0-59-26.4-59-59V608.2l-4-14.9c0-315.9 125.5-485.1 376.5-507.5v59.8C280.7 180.4 239.3 315.8 239.3 442.4v41.2l31.5 12.3h151.8c32.6 0 59 26.4 59 59v293.2c0 32.5-26.4 59-59 59z"></path></svg>',this.tag="button";}return t.prototype.getValue=function(t){return ""},t.prototype.isActive=function(t){return !!fi$1.getSelectedNodeByType(t,"blockquote")},t.prototype.isDisabled=function(t){return null==t.selection||!$$5(Editor.nodes(t,{match:function(t){var n=fi$1.getNodeType(t);return "paragraph"===n||"blockquote"===n},universal:!0,mode:"highest"}),1)[0]},t.prototype.exec=function(t,e){if(!this.isDisabled(t)){var n=this.isActive(t)?"paragraph":"blockquote";Transforms.setNodes(t,{type:n},{mode:"highest"});}},t}();var zi={renderElems:[Ni],elemsToHtml:[Ii],menus:[{key:"blockquote",factory:function(){return new Li}}],editorPlugin:function(t){var n=t.insertBreak,r=t;return r.insertBreak=function(){var o=$$5(Editor.nodes(t,{match:function(t){return fi$1.checkNodeType(t,"blockquote")},universal:!0}),1)[0];if(o)if(fi$1.isSelectionAtLineEnd(t,o[1])){Transforms.insertNodes(r,{type:"paragraph",children:[{text:""}]},{mode:"highest"});}else n();else n();},r}},ji=function(){function t(){this.title=qc$1("emotion.title"),this.iconSvg='<svg viewBox="0 0 1024 1024"><path d="M512 1024C230.4 1024 0 793.6 0 512S230.4 0 512 0s512 230.4 512 512-230.4 512-512 512z m0-102.4c226.742857 0 409.6-182.857143 409.6-409.6S738.742857 102.4 512 102.4 102.4 285.257143 102.4 512s182.857143 409.6 409.6 409.6z m-204.8-358.4h409.6c0 113.371429-91.428571 204.8-204.8 204.8s-204.8-91.428571-204.8-204.8z m0-102.4c-43.885714 0-76.8-32.914286-76.8-76.8s32.914286-76.8 76.8-76.8 76.8 32.914286 76.8 76.8-32.914286 76.8-76.8 76.8z m409.6 0c-43.885714 0-76.8-32.914286-76.8-76.8s32.914286-76.8 76.8-76.8c43.885714 0 76.8 32.914286 76.8 76.8s-32.914286 76.8-76.8 76.8z"></path></svg>',this.tag="button",this.showDropPanel=!0,this.$content=null;}return t.prototype.exec=function(t,e){},t.prototype.getValue=function(t){return ""},t.prototype.isActive=function(t){return !1},t.prototype.isDisabled=function(t){return null==t.selection||!!$$5(Editor.nodes(t,{match:function(n){return "pre"===fi$1.getNodeType(n)||!!Editor.isVoid(t,n)},universal:!0}),1)[0]},t.prototype.getPanelContentElem=function(t){if(null==this.$content){var e=$$6('<ul class="w-e-panel-content-emotion"></ul>');e.on("mousedown","li",(function(e){var n=e.target;if(null!=n){e.preventDefault();var r=$$6(n).text();t.insertText(r);}})),this.$content=e;}var n=this.$content;if(null==n)return $$6();n.html("");var r=t.getMenuConfig("emotion").emotions;return (void 0===r?[]:r).forEach((function(t){var e=$$6("<li>"+t+"</li>");n.append(e);})),n},t}(),Ai=Qe$4("species"),Hi=ze$5.UNSUPPORTED_Y,Vi=[].push,Ci=Math.min;wo("split",2,(function(t,e,n){var r;return r="c"=="abbc".split(/(b)*/)[1]||4!="test".split(/(?:)/,-1).length||2!="ab".split(/(?:ab)*/).length||4!=".".split(/(.?)(.?)/).length||".".split(/()()/).length>1||"".split(/.?/).length?function(t,n){var r=String(at$5(this)),o=void 0===n?4294967295:n>>>0;if(0===o)return [];if(void 0===t)return [r];if(!tn$2(t))return e.call(r,t,o);for(var i,u,a,c=[],l=(t.ignoreCase?"i":"")+(t.multiline?"m":"")+(t.unicode?"u":"")+(t.sticky?"y":""),s=0,f=new RegExp(t.source,l+"g");(i=De$4.call(f,r))&&!((u=f.lastIndex)>s&&(c.push(r.slice(s,i.index)),i.length>1&&i.index<r.length&&Vi.apply(c,i.slice(1)),a=i[0].length,s=u,c.length>=o));)f.lastIndex===i.index&&f.lastIndex++;return s===r.length?!a&&f.test("")||c.push(""):c.push(r.slice(s)),c.length>o?c.slice(0,o):c}:"0".split(void 0,0).length?function(t,n){return void 0===t&&0===n?[]:e.call(this,t,n)}:e,[function(e,n){var o=at$5(this),i=null==e?void 0:e[t];return void 0!==i?i.call(e,o,n):r.call(String(o),e,n)},function(t,o){var i=n(r,t,this,o,r!==e);if(i.done)return i.value;var u=St$5(t),a=String(this),c=function(t,e){var n,r=St$5(t).constructor;return void 0===r||null==(n=St$5(r)[Ai])?e:sn$2(n)}(u,RegExp),l=u.unicode,s=(u.ignoreCase?"i":"")+(u.multiline?"m":"")+(u.unicode?"u":"")+(Hi?"g":"y"),f=new c(Hi?"^(?:"+u.source+")":u,s),p=void 0===o?4294967295:o>>>0;if(0===p)return [];if(0===a.length)return null===Lo(f,a)?[a]:[];for(var h=0,d=0,v=[];d<a.length;){f.lastIndex=Hi?0:d;var g,y=Lo(f,Hi?a.slice(d):a);if(null===y||(g=Ci(ee$5(f.lastIndex+(Hi?d:0)),a.length))===h)d=To(a,d,l);else {if(v.push(a.slice(h,d)),v.length===p)return v;for(var m=1;m<=y.length-1;m++)if(v.push(y[m]),v.length===p)return v;d=h=g;}}return v.push(a.slice(h)),v}]}),Hi);var Pi={menus:[{key:"emotion",factory:function(){return new ji},config:{emotions:"😀 😃 😄 😁 😆 😅 😂 🤣 😊 😇 🙂 🙃 😉 😌 😍 😘 😗 😙 😚 😋 😛 😝 😜 🤓 😎 😏 😒 😞 😔 😟 😕 🙁 😣 😖 😫 😩 😢 😭 😤 😠 😡 😳 😱 😨 🤗 🤔 😶 😑 😬 🙄 😯 😴 😷 🤑 😈 🤡 💩 👻 💀 👀 👣 👐 🙌 👏 🤝 👍 👎 👊 ✊ 🤛 🤜 🤞 ✌️ 🤘 👌 👈 👉 👆 👇 ☝️ ✋ 🤚 🖐 🖖 👋 🤙 💪 🖕 ✍️ 🙏".split(" ")}}]};var Di,Bi,_i=function(){function t(){this.tag="select",this.width=80;}return t.prototype.isActive=function(t){return !1},t.prototype.getValue=function(t){var e=this.mark,n=Editor.marks(t);return n&&n[e]?n[e]:""},t.prototype.isDisabled=function(t){return null==t.selection||(this.mark,!!$$5(Editor.nodes(t,{match:function(n){return "pre"===fi$1.getNodeType(n)||!!Editor.isVoid(t,n)},universal:!0}),1)[0])},t.prototype.exec=function(t,e){var n=this.mark;e?t.addMark(n,e):t.removeMark(n);},t}(),Ri=function(t){function e(){var e=null!==t&&t.apply(this,arguments)||this;return e.title=qc$1("fontSize.title"),e.iconSvg=Vn$2,e.mark="fontSize",e}return D$5(e,t),e.prototype.getOptions=function(t){var e=[],r=t.getMenuConfig(this.mark).fontSizeList,o=void 0===r?[]:r;e.push({text:qc$1("fontSize.default"),value:""}),o.forEach((function(t){e.push({text:t,value:t});}));var i=this.getValue(t);return e.forEach((function(t){t.value===i?t.selected=!0:delete t.selected;})),e},e}(_i),Fi=function(t){return t&&t.Math==Math&&t},$i=Fi("object"==typeof globalThis&&globalThis)||Fi("object"==typeof window&&window)||Fi("object"==typeof self&&self)||Fi("object"==typeof G$5&&G$5)||function(){return this}()||Function("return this")(),qi=function(t){try{return !!t()}catch(t){return !0}},Wi=!qi((function(){return 7!=Object.defineProperty({},1,{get:function(){return 7}})[1]})),Gi={}.propertyIsEnumerable,Ui=Object.getOwnPropertyDescriptor,Ki={f:Ui&&!Gi.call({1:2},1)?function(t){var e=Ui(this,t);return !!e&&e.enumerable}:Gi},Yi=function(t,e){return {enumerable:!(1&t),configurable:!(2&t),writable:!(4&t),value:e}},Ji={}.toString,Xi=function(t){return Ji.call(t).slice(8,-1)},Qi="".split,Zi=qi((function(){return !Object("z").propertyIsEnumerable(0)}))?function(t){return "String"==Xi(t)?Qi.call(t,""):Object(t)}:Object,tu=function(t){if(null==t)throw TypeError("Can't call method on "+t);return t},eu=function(t){return Zi(tu(t))},nu=function(t){return "object"==typeof t?null!==t:"function"==typeof t},ru=function(t,e){if(!nu(t))return t;var n,r;if(e&&"function"==typeof(n=t.toString)&&!nu(r=n.call(t)))return r;if("function"==typeof(n=t.valueOf)&&!nu(r=n.call(t)))return r;if(!e&&"function"==typeof(n=t.toString)&&!nu(r=n.call(t)))return r;throw TypeError("Can't convert object to primitive value")},ou=function(t){return Object(tu(t))},iu={}.hasOwnProperty,uu=Object.hasOwn||function(t,e){return iu.call(ou(t),e)},au=$i.document,cu=nu(au)&&nu(au.createElement),lu=function(t){return cu?au.createElement(t):{}},su=!Wi&&!qi((function(){return 7!=Object.defineProperty(lu("div"),"a",{get:function(){return 7}}).a})),fu=Object.getOwnPropertyDescriptor,pu={f:Wi?fu:function(t,e){if(t=eu(t),e=ru(e,!0),su)try{return fu(t,e)}catch(t){}if(uu(t,e))return Yi(!Ki.f.call(t,e),t[e])}},hu=/#|\.prototype\./,du=function(t,e){var n=gu[vu(t)];return n==mu||n!=yu&&("function"==typeof e?qi(e):!!e)},vu=du.normalize=function(t){return String(t).replace(hu,".").toLowerCase()},gu=du.data={},yu=du.NATIVE="N",mu=du.POLYFILL="P",bu=du,Su={},wu=function(t,e,n){if(function(t){if("function"!=typeof t)throw TypeError(String(t)+" is not a function")}(t),void 0===e)return t;switch(n){case 0:return function(){return t.call(e)};case 1:return function(n){return t.call(e,n)};case 2:return function(n,r){return t.call(e,n,r)};case 3:return function(n,r,o){return t.call(e,n,r,o)}}return function(){return t.apply(e,arguments)}},xu=function(t){if(!nu(t))throw TypeError(String(t)+" is not an object");return t},ku=Object.defineProperty,Tu={f:Wi?ku:function(t,e,n){if(xu(t),e=ru(e,!0),xu(n),su)try{return ku(t,e,n)}catch(t){}if("get"in n||"set"in n)throw TypeError("Accessors not supported");return "value"in n&&(t[e]=n.value),t}},Eu=Wi?function(t,e,n){return Tu.f(t,e,Yi(1,n))}:function(t,e,n){return t[e]=n,t},Mu=pu.f,Ou=function(t){var e=function(e,n,r){if(this instanceof t){switch(arguments.length){case 0:return new t;case 1:return new t(e);case 2:return new t(e,n)}return new t(e,n,r)}return t.apply(this,arguments)};return e.prototype=t.prototype,e},Nu=function(t,e){var n,r,o,i,u,a,c,l,s=t.target,f=t.global,p=t.stat,h=t.proto,d=f?$i:p?$i[s]:($i[s]||{}).prototype,v=f?Su:Su[s]||(Su[s]={}),g=v.prototype;for(o in e)n=!bu(f?o:s+(p?".":"#")+o,t.forced)&&d&&uu(d,o),u=v[o],n&&(a=t.noTargetGet?(l=Mu(d,o))&&l.value:d[o]),i=n&&a?a:e[o],n&&typeof u==typeof i||(c=t.bind&&n?wu(i,$i):t.wrap&&n?Ou(i):h&&"function"==typeof i?wu(Function.call,i):i,(t.sham||i&&i.sham||u&&u.sham)&&Eu(c,"sham",!0),v[o]=c,h&&(uu(Su,r=s+"Prototype")||Eu(Su,r,{}),Su[r][o]=i,t.real&&g&&!g[o]&&Eu(g,o,i)));},Iu=Array.isArray||function(t){return "Array"==Xi(t)},Lu=Math.ceil,zu=Math.floor,ju=function(t){return isNaN(t=+t)?0:(t>0?zu:Lu)(t)},Au=Math.min,Hu=function(t){return t>0?Au(ju(t),9007199254740991):0},Vu=function(t,e,n){var r=ru(e);r in t?Tu.f(t,r,Yi(0,n)):t[r]=n;},Cu=$i["__core-js_shared__"]||function(t,e){try{Eu($i,t,e);}catch(n){$i[t]=e;}return e}("__core-js_shared__",{}),Pu=K$5((function(t){(t.exports=function(t,e){return Cu[t]||(Cu[t]=void 0!==e?e:{})})("versions",[]).push({version:"3.15.2",mode:"pure",copyright:"© 2021 Denis Pushkarev (zloirock.ru)"});})),Du=0,Bu=Math.random(),_u=function(t){return "Symbol("+String(void 0===t?"":t)+")_"+(++Du+Bu).toString(36)},Ru=function(t){return "function"==typeof t?t:void 0},Fu=function(t,e){return arguments.length<2?Ru(Su[t])||Ru($i[t]):Su[t]&&Su[t][e]||$i[t]&&$i[t][e]},$u=Fu("navigator","userAgent")||"",qu=$i.process,Wu=qu&&qu.versions,Gu=Wu&&Wu.v8;Gu?Bi=(Di=Gu.split("."))[0]<4?1:Di[0]+Di[1]:$u&&(!(Di=$u.match(/Edge\/(\d+)/))||Di[1]>=74)&&(Di=$u.match(/Chrome\/(\d+)/))&&(Bi=Di[1]);var Uu=Bi&&+Bi,Ku=!!Object.getOwnPropertySymbols&&!qi((function(){var t=Symbol();return !String(t)||!(Object(t)instanceof Symbol)||!Symbol.sham&&Uu&&Uu<41})),Yu=Ku&&!Symbol.sham&&"symbol"==typeof Symbol.iterator,Ju=Pu("wks"),Xu=$i.Symbol,Qu=Yu?Xu:Xu&&Xu.withoutSetter||_u,Zu=function(t){return uu(Ju,t)&&(Ku||"string"==typeof Ju[t])||(Ku&&uu(Xu,t)?Ju[t]=Xu[t]:Ju[t]=Qu("Symbol."+t)),Ju[t]},ta=Zu("species"),ea=function(t,e){var n;return Iu(t)&&("function"!=typeof(n=t.constructor)||n!==Array&&!Iu(n.prototype)?nu(n)&&null===(n=n[ta])&&(n=void 0):n=void 0),new(void 0===n?Array:n)(0===e?0:e)},na=Zu("species"),ra=Zu("isConcatSpreadable"),oa=Uu>=51||!qi((function(){var t=[];return t[ra]=!1,t.concat()[0]!==t})),ia=function(t){return Uu>=51||!qi((function(){var e=[];return (e.constructor={})[na]=function(){return {foo:1}},1!==e[t](Boolean).foo}))}("concat"),ua=function(t){if(!nu(t))return !1;var e=t[ra];return void 0!==e?!!e:Iu(t)};Nu({target:"Array",proto:!0,forced:!oa||!ia},{concat:function(t){var e,n,r,o,i,u=ou(this),a=ea(u,0),c=0;for(e=-1,r=arguments.length;e<r;e++)if(ua(i=-1===e?u:arguments[e])){if(c+(o=Hu(i.length))>9007199254740991)throw TypeError("Maximum allowed index exceeded");for(n=0;n<o;n++,c++)n in i&&Vu(a,c,i[n]);}else {if(c>=9007199254740991)throw TypeError("Maximum allowed index exceeded");Vu(a,c++,i);}return a.length=c,a}});var aa,ca=Math.max,la=Math.min,sa=function(t){return function(e,n,r){var o,i=eu(e),u=Hu(i.length),a=function(t,e){var n=ju(t);return n<0?ca(n+e,0):la(n,e)}(r,u);if(t&&n!=n){for(;u>a;)if((o=i[a++])!=o)return !0}else for(;u>a;a++)if((t||a in i)&&i[a]===n)return t||a||0;return !t&&-1}},fa={includes:sa(!0),indexOf:sa(!1)},pa={},ha=fa.indexOf,da=function(t,e){var n,r=eu(t),o=0,i=[];for(n in r)!uu(pa,n)&&uu(r,n)&&i.push(n);for(;e.length>o;)uu(r,n=e[o++])&&(~ha(i,n)||i.push(n));return i},va=["constructor","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","toLocaleString","toString","valueOf"],ga=Object.keys||function(t){return da(t,va)},ya=Wi?Object.defineProperties:function(t,e){xu(t);for(var n,r=ga(e),o=r.length,i=0;o>i;)Tu.f(t,n=r[i++],e[n]);return t},ma=Fu("document","documentElement"),ba=Pu("keys"),Sa=function(t){return ba[t]||(ba[t]=_u(t))},wa=Sa("IE_PROTO"),xa=function(){},ka=function(t){return "<script>"+t+"<\/script>"},Ta=function(){try{aa=document.domain&&new ActiveXObject("htmlfile");}catch(t){}var t,e;Ta=aa?function(t){t.write(ka("")),t.close();var e=t.parentWindow.Object;return t=null,e}(aa):((e=lu("iframe")).style.display="none",ma.appendChild(e),e.src=String("javascript:"),(t=e.contentWindow.document).open(),t.write(ka("document.F=Object")),t.close(),t.F);for(var n=va.length;n--;)delete Ta.prototype[va[n]];return Ta()};pa[wa]=!0;var Ea=Object.create||function(t,e){var n;return null!==t?(xa.prototype=xu(t),n=new xa,xa.prototype=null,n[wa]=t):n=Ta(),void 0===e?n:ya(n,e)},Ma=va.concat("length","prototype"),Oa={f:Object.getOwnPropertyNames||function(t){return da(t,Ma)}},Na=Oa.f,Ia={}.toString,La="object"==typeof window&&window&&Object.getOwnPropertyNames?Object.getOwnPropertyNames(window):[],za={f:function(t){return La&&"[object Window]"==Ia.call(t)?function(t){try{return Na(t)}catch(t){return La.slice()}}(t):Na(eu(t))}},ja={f:Object.getOwnPropertySymbols},Aa=function(t,e,n,r){r&&r.enumerable?t[e]=n:Eu(t,e,n);},Ha={f:Zu},Va=Tu.f,Ca=function(t){var e=Su.Symbol||(Su.Symbol={});uu(e,t)||Va(e,t,{value:Ha.f(t)});},Pa={};Pa[Zu("toStringTag")]="z";var Da="[object z]"===String(Pa),Ba=Zu("toStringTag"),_a="Arguments"==Xi(function(){return arguments}()),Ra=Da?Xi:function(t){var e,n,r;return void 0===t?"Undefined":null===t?"Null":"string"==typeof(n=function(t,e){try{return t[e]}catch(t){}}(e=Object(t),Ba))?n:_a?Xi(e):"Object"==(r=Xi(e))&&"function"==typeof e.callee?"Arguments":r},Fa=Da?{}.toString:function(){return "[object "+Ra(this)+"]"},$a=Tu.f,qa=Zu("toStringTag"),Wa=function(t,e,n,r){if(t){var o=n?t:t.prototype;uu(o,qa)||$a(o,qa,{configurable:!0,value:e}),r&&!Da&&Eu(o,"toString",Fa);}},Ga=Function.toString;"function"!=typeof Cu.inspectSource&&(Cu.inspectSource=function(t){return Ga.call(t)});var Ua,Ka,Ya,Ja=Cu.inspectSource,Xa=$i.WeakMap,Qa="function"==typeof Xa&&/native code/.test(Ja(Xa)),Za=$i.WeakMap;if(Qa||Cu.state){var tc=Cu.state||(Cu.state=new Za),ec=tc.get,nc=tc.has,rc=tc.set;Ua=function(t,e){if(nc.call(tc,t))throw new TypeError("Object already initialized");return e.facade=t,rc.call(tc,t,e),e},Ka=function(t){return ec.call(tc,t)||{}},Ya=function(t){return nc.call(tc,t)};}else {var oc=Sa("state");pa[oc]=!0,Ua=function(t,e){if(uu(t,oc))throw new TypeError("Object already initialized");return e.facade=t,Eu(t,oc,e),e},Ka=function(t){return uu(t,oc)?t[oc]:{}},Ya=function(t){return uu(t,oc)};}var ic={set:Ua,get:Ka,has:Ya,enforce:function(t){return Ya(t)?Ka(t):Ua(t,{})},getterFor:function(t){return function(e){var n;if(!nu(e)||(n=Ka(e)).type!==t)throw TypeError("Incompatible receiver, "+t+" required");return n}}},uc=[].push,ac=function(t){var e=1==t,n=2==t,r=3==t,o=4==t,i=6==t,u=7==t,a=5==t||i;return function(c,l,s,f){for(var p,h,d=ou(c),v=Zi(d),g=wu(l,s,3),y=Hu(v.length),m=0,b=f||ea,S=e?b(c,y):n||u?b(c,0):void 0;y>m;m++)if((a||m in v)&&(h=g(p=v[m],m,d),t))if(e)S[m]=h;else if(h)switch(t){case 3:return !0;case 5:return p;case 6:return m;case 2:uc.call(S,p);}else switch(t){case 4:return !1;case 7:uc.call(S,p);}return i?-1:r||o?o:S}},cc={forEach:ac(0),map:ac(1),filter:ac(2),some:ac(3),every:ac(4),find:ac(5),findIndex:ac(6),filterOut:ac(7)}.forEach,lc=Sa("hidden"),sc=Zu("toPrimitive"),fc=ic.set,pc=ic.getterFor("Symbol"),hc=Object.prototype,dc=$i.Symbol,vc=Fu("JSON","stringify"),gc=pu.f,yc=Tu.f,mc=za.f,bc=Ki.f,Sc=Pu("symbols"),wc=Pu("op-symbols"),xc=Pu("string-to-symbol-registry"),kc=Pu("symbol-to-string-registry"),Tc=Pu("wks"),Ec=$i.QObject,Mc=!Ec||!Ec.prototype||!Ec.prototype.findChild,Oc=Wi&&qi((function(){return 7!=Ea(yc({},"a",{get:function(){return yc(this,"a",{value:7}).a}})).a}))?function(t,e,n){var r=gc(hc,e);r&&delete hc[e],yc(t,e,n),r&&t!==hc&&yc(hc,e,r);}:yc,Nc=function(t,e){var n=Sc[t]=Ea(dc.prototype);return fc(n,{type:"Symbol",tag:t,description:e}),Wi||(n.description=e),n},Ic=Yu?function(t){return "symbol"==typeof t}:function(t){return Object(t)instanceof dc},Lc=function(t,e,n){t===hc&&Lc(wc,e,n),xu(t);var r=ru(e,!0);return xu(n),uu(Sc,r)?(n.enumerable?(uu(t,lc)&&t[lc][r]&&(t[lc][r]=!1),n=Ea(n,{enumerable:Yi(0,!1)})):(uu(t,lc)||yc(t,lc,Yi(1,{})),t[lc][r]=!0),Oc(t,r,n)):yc(t,r,n)},zc=function(t,e){xu(t);var n=eu(e),r=ga(n).concat(Vc(n));return cc(r,(function(e){Wi&&!jc.call(n,e)||Lc(t,e,n[e]);})),t},jc=function(t){var e=ru(t,!0),n=bc.call(this,e);return !(this===hc&&uu(Sc,e)&&!uu(wc,e))&&(!(n||!uu(this,e)||!uu(Sc,e)||uu(this,lc)&&this[lc][e])||n)},Ac=function(t,e){var n=eu(t),r=ru(e,!0);if(n!==hc||!uu(Sc,r)||uu(wc,r)){var o=gc(n,r);return !o||!uu(Sc,r)||uu(n,lc)&&n[lc][r]||(o.enumerable=!0),o}},Hc=function(t){var e=mc(eu(t)),n=[];return cc(e,(function(t){uu(Sc,t)||uu(pa,t)||n.push(t);})),n},Vc=function(t){var e=t===hc,n=mc(e?wc:eu(t)),r=[];return cc(n,(function(t){!uu(Sc,t)||e&&!uu(hc,t)||r.push(Sc[t]);})),r};if(Ku||(Aa((dc=function(){if(this instanceof dc)throw TypeError("Symbol is not a constructor");var t=arguments.length&&void 0!==arguments[0]?String(arguments[0]):void 0,e=_u(t),n=function(t){this===hc&&n.call(wc,t),uu(this,lc)&&uu(this[lc],e)&&(this[lc][e]=!1),Oc(this,e,Yi(1,t));};return Wi&&Mc&&Oc(hc,e,{configurable:!0,set:n}),Nc(e,t)}).prototype,"toString",(function(){return pc(this).tag})),Aa(dc,"withoutSetter",(function(t){return Nc(_u(t),t)})),Ki.f=jc,Tu.f=Lc,pu.f=Ac,Oa.f=za.f=Hc,ja.f=Vc,Ha.f=function(t){return Nc(Zu(t),t)},Wi&&yc(dc.prototype,"description",{configurable:!0,get:function(){return pc(this).description}})),Nu({global:!0,wrap:!0,forced:!Ku,sham:!Ku},{Symbol:dc}),cc(ga(Tc),(function(t){Ca(t);})),Nu({target:"Symbol",stat:!0,forced:!Ku},{for:function(t){var e=String(t);if(uu(xc,e))return xc[e];var n=dc(e);return xc[e]=n,kc[n]=e,n},keyFor:function(t){if(!Ic(t))throw TypeError(t+" is not a symbol");if(uu(kc,t))return kc[t]},useSetter:function(){Mc=!0;},useSimple:function(){Mc=!1;}}),Nu({target:"Object",stat:!0,forced:!Ku,sham:!Wi},{create:function(t,e){return void 0===e?Ea(t):zc(Ea(t),e)},defineProperty:Lc,defineProperties:zc,getOwnPropertyDescriptor:Ac}),Nu({target:"Object",stat:!0,forced:!Ku},{getOwnPropertyNames:Hc,getOwnPropertySymbols:Vc}),Nu({target:"Object",stat:!0,forced:qi((function(){ja.f(1);}))},{getOwnPropertySymbols:function(t){return ja.f(ou(t))}}),vc){var Cc=!Ku||qi((function(){var t=dc();return "[null]"!=vc([t])||"{}"!=vc({a:t})||"{}"!=vc(Object(t))}));Nu({target:"JSON",stat:!0,forced:Cc},{stringify:function(t,e,n){for(var r,o=[t],i=1;arguments.length>i;)o.push(arguments[i++]);if(r=e,(nu(e)||void 0!==t)&&!Ic(t))return Iu(e)||(e=function(t,e){if("function"==typeof r&&(e=r.call(this,t,e)),!Ic(e))return e}),o[1]=e,vc.apply(null,o)}});}dc.prototype[sc]||Eu(dc.prototype,sc,dc.prototype.valueOf),Wa(dc,"Symbol"),pa[lc]=!0,Ca("asyncIterator"),Ca("hasInstance"),Ca("isConcatSpreadable"),Ca("iterator"),Ca("match"),Ca("matchAll"),Ca("replace"),Ca("search"),Ca("species"),Ca("split"),Ca("toPrimitive"),Ca("toStringTag"),Ca("unscopables"),Wa($i.JSON,"JSON",!0);var Pc=Su.Symbol;Ca("asyncDispose"),Ca("dispose"),Ca("matcher"),Ca("metadata"),Ca("observable"),Ca("patternMatch"),Ca("replaceAll");var Dc,Bc,_c,Rc=Pc,Fc=function(t){return function(e,n){var r,o,i=String(tu(e)),u=ju(n),a=i.length;return u<0||u>=a?t?"":void 0:(r=i.charCodeAt(u))<55296||r>56319||u+1===a||(o=i.charCodeAt(u+1))<56320||o>57343?t?i.charAt(u):r:t?i.slice(u,u+2):o-56320+(r-55296<<10)+65536}},$c={codeAt:Fc(!1),charAt:Fc(!0)},qc=!qi((function(){function t(){}return t.prototype.constructor=null,Object.getPrototypeOf(new t)!==t.prototype})),Wc=Sa("IE_PROTO"),Gc=Object.prototype,Uc=qc?Object.getPrototypeOf:function(t){return t=ou(t),uu(t,Wc)?t[Wc]:"function"==typeof t.constructor&&t instanceof t.constructor?t.constructor.prototype:t instanceof Object?Gc:null},Kc=Zu("iterator"),Yc=!1;[].keys&&("next"in(_c=[].keys())?(Bc=Uc(Uc(_c)))!==Object.prototype&&(Dc=Bc):Yc=!0);var Jc=null==Dc||qi((function(){var t={};return Dc[Kc].call(t)!==t}));Jc&&(Dc={}),Jc&&!uu(Dc,Kc)&&Eu(Dc,Kc,(function(){return this}));var Xc={IteratorPrototype:Dc,BUGGY_SAFARI_ITERATORS:Yc},Qc={},Zc=Xc.IteratorPrototype,tl=function(){return this};Object.setPrototypeOf||"__proto__"in{}&&function(){var t,e=!1,n={};try{(t=Object.getOwnPropertyDescriptor(Object.prototype,"__proto__").set).call(n,[]),e=n instanceof Array;}catch(t){}}();var el=Xc.IteratorPrototype,nl=Xc.BUGGY_SAFARI_ITERATORS,rl=Zu("iterator"),ol=function(){return this},il=function(t,e,n,r,o,i,u){!function(t,e,n){var r=e+" Iterator";t.prototype=Ea(Zc,{next:Yi(1,n)}),Wa(t,r,!1,!0),Qc[r]=tl;}(n,e,r);var a,c,l,s=function(t){if(t===o&&v)return v;if(!nl&&t in h)return h[t];switch(t){case"keys":case"values":case"entries":return function(){return new n(this,t)}}return function(){return new n(this)}},f=e+" Iterator",p=!1,h=t.prototype,d=h[rl]||h["@@iterator"]||o&&h[o],v=!nl&&d||s(o),g="Array"==e&&h.entries||d;if(g&&(a=Uc(g.call(new t)),el!==Object.prototype&&a.next&&(Wa(a,f,!0,!0),Qc[f]=ol)),"values"==o&&d&&"values"!==d.name&&(p=!0,v=function(){return d.call(this)}),u&&h[rl]!==v&&Eu(h,rl,v),Qc[e]=v,o)if(c={values:s("values"),keys:i?v:s("keys"),entries:s("entries")},u)for(l in c)(nl||p||!(l in h))&&Aa(h,l,c[l]);else Nu({target:e,proto:!0,forced:nl||p},c);return c},ul=$c.charAt,al=ic.set,cl=ic.getterFor("String Iterator");il(String,"String",(function(t){al(this,{type:"String Iterator",string:String(t),index:0});}),(function(){var t,e=cl(this),n=e.string,r=e.index;return r>=n.length?{value:void 0,done:!0}:(t=ul(n,r),e.index+=t.length,{value:t,done:!1})}));var ll=ic.set,sl=ic.getterFor("Array Iterator");il(Array,"Array",(function(t,e){ll(this,{type:"Array Iterator",target:eu(t),index:0,kind:e});}),(function(){var t=sl(this),e=t.target,n=t.kind,r=t.index++;return !e||r>=e.length?(t.target=void 0,{value:void 0,done:!0}):"keys"==n?{value:r,done:!1}:"values"==n?{value:e[r],done:!1}:{value:[r,e[r]],done:!1}}),"values"),Qc.Arguments=Qc.Array;var fl=Zu("toStringTag");for(var pl in {CSSRuleList:0,CSSStyleDeclaration:0,CSSValueList:0,ClientRectList:0,DOMRectList:0,DOMStringList:0,DOMTokenList:1,DataTransferItemList:0,FileList:0,HTMLAllCollection:0,HTMLCollection:0,HTMLFormElement:0,HTMLSelectElement:0,MediaList:0,MimeTypeArray:0,NamedNodeMap:0,NodeList:1,PaintRequestList:0,Plugin:0,PluginArray:0,SVGLengthList:0,SVGNumberList:0,SVGPathSegList:0,SVGPointList:0,SVGStringList:0,SVGTransformList:0,SourceBufferList:0,StyleSheetList:0,TextTrackCueList:0,TextTrackList:0,TouchList:0}){var hl=$i[pl],dl=hl&&hl.prototype;dl&&Ra(dl)!==fl&&Eu(dl,fl,pl),Qc[pl]=Qc.Array;}var vl=Ha.f("iterator"),gl=U$5(K$5((function(t){function e(n){return "function"==typeof Rc&&"symbol"==typeof vl?(t.exports=e=function(t){return typeof t},t.exports.default=t.exports,t.exports.__esModule=!0):(t.exports=e=function(t){return t&&"function"==typeof Rc&&t.constructor===Rc&&t!==Rc.prototype?"symbol":typeof t},t.exports.default=t.exports,t.exports.__esModule=!0),e(n)}t.exports=e,t.exports.default=t.exports,t.exports.__esModule=!0;}))),yl=xt$5.f,ml=Function.prototype,bl=ml.toString,Sl=/^\s*function ([^ (]*)/;Q$5&&!("name"in ml)&&yl(ml,"name",{configurable:!0,get:function(){try{return bl.call(this).match(Sl)[1]}catch(t){return ""}}});var wl=function(t){function e(){var e=null!==t&&t.apply(this,arguments)||this;return e.title=qc$1("fontFamily.title"),e.iconSvg=Cn$2,e.mark="fontFamily",e.selectPanelWidth=150,e}return D$5(e,t),e.prototype.getOptions=function(t){var e=[],r=t.getMenuConfig(this.mark).fontFamilyList,o=void 0===r?[]:r;e.push({text:qc$1("fontFamily.default"),value:""}),o.forEach((function(t){if("string"==typeof t)e.push({text:t,value:t,styleForRenderMenuList:{"font-family":t}});else if("object"===gl(t)){var n=t.name,r=t.value;e.push({text:n,value:r,styleForRenderMenuList:{"font-family":r}});}}));var i=this.getValue(t);return e.forEach((function(t){t.value===i?t.selected=!0:delete t.selected;})),e},e}(_i);var xl={renderTextStyle:function(t,e){var n=t,r=n.fontSize,o=n.fontFamily,i=e;return r&&Pr$1(i,{fontSize:r}),o&&Pr$1(i,{fontFamily:o}),i},textStyleToHtml:function(t,e){if(!Text.isText(t))return e;var n=t,r=n.fontSize,o=n.fontFamily,i=n.text;if(!r&&!o)return e;e===i&&(e="<span>"+i+"</span>");var u=$$6(e);r&&u.css("font-size",r),o&&u.css("font-family",o);var a=$$6("<div></div>");return a.append(u),a.html()},menus:[{key:"fontSize",factory:function(){return new Ri},config:{fontSizeList:["12px","13px","14px","15px","16px","19px","22px","24px","29px","32px","40px","48px"]}},{key:"fontFamily",factory:function(){return new wl},config:{fontFamilyList:["黑体",{name:"仿宋",value:"仿宋"},"楷体","标楷体","华文仿宋","华文楷体",{name:"宋体",value:"宋体"},"微软雅黑","Arial","Tahoma","Verdana","Times New Roman","Courier New"]}}]};var kl=function(){function t(){this.tag="button";}return t.prototype.getValue=function(t){var e=$$5(Editor.nodes(t,{match:function(t){return !!t.indent},universal:!0}),1)[0];return null==e?"":$$5(e,1)[0].indent||""},t.prototype.isActive=function(t){return !1},t.prototype.getMatchNode=function(t){var n=$$5(Editor.nodes(t,{match:function(t){var n=fi$1.getNodeType(t);return "paragraph"===n||!!n.startsWith("header")},universal:!0,mode:"highest"}),1)[0];return null==n?null:n[0]},t}(),Tl=function(t){function e(){var e=null!==t&&t.apply(this,arguments)||this;return e.title=qc$1("indent.decrease"),e.iconSvg=Pn$2,e}return D$5(e,t),e.prototype.isDisabled=function(t){var e=this.getMatchNode(t);return null==e||!e.indent},e.prototype.exec=function(t,e){if(e){var n=parseInt(e.toString(),10)-32;n<0&&(n=0),Transforms.setNodes(t,{indent:0===n?null:n+"px"},{match:function(t){return Element$1.isElement(t)}});}},e}(kl),El=function(t){function e(){var e=null!==t&&t.apply(this,arguments)||this;return e.title=qc$1("indent.increase"),e.iconSvg=Dn$2,e}return D$5(e,t),e.prototype.isDisabled=function(t){return null==this.getMatchNode(t)},e.prototype.exec=function(t,e){var n=parseInt(e.toString(),10);n||(n=0);var r=n+32;Transforms.setNodes(t,{indent:r+"px"},{match:function(t){return Element$1.isElement(t)}});},e}(kl),Ml={renderTextStyle:function(t,e){if(!Element$1.isElement(t))return e;var n=t.indent,r=e;return n&&Pr$1(r,{paddingLeft:n}),r},textStyleToHtml:function(t,e){if(!Element$1.isElement(t))return e;var n=t.indent;if(!n)return e;var r=$$6(e);r.css("padding-left",n);var o=$$6("<div></div>");return o.append(r),o.html()},menus:[{key:"indent",factory:function(){return new El}},{key:"delIndent",factory:function(){return new Tl}}]};var Ol=function(){function t(){this.tag="button";}return t.prototype.getValue=function(t){return ""},t.prototype.isActive=function(t){return !1},t.prototype.getMatchNode=function(t){var n=$$5(Editor.nodes(t,{match:function(t){var n=fi$1.getNodeType(t);return "paragraph"===n||("blockquote"===n||!!n.startsWith("header"))},universal:!0,mode:"highest"}),1)[0];return null==n?null:n[0]},t.prototype.isDisabled=function(t){return null==t.selection||!!$$5(Editor.nodes(t,{match:function(n){var r=fi$1.getNodeType(n);return "pre"===r||("video"===r||!!Editor.isVoid(t,n))},universal:!0}),1)[0]},t}(),Nl=function(t){function e(){var e=null!==t&&t.apply(this,arguments)||this;return e.title=qc$1("justify.left"),e.iconSvg=Bn$2,e}return D$5(e,t),e.prototype.exec=function(t,e){Transforms.setNodes(t,{textAlign:"left"},{match:function(t){return Element$1.isElement(t)}});},e}(Ol),Il=function(t){function e(){var e=null!==t&&t.apply(this,arguments)||this;return e.title=qc$1("justify.right"),e.iconSvg=_n$2,e}return D$5(e,t),e.prototype.exec=function(t,e){Transforms.setNodes(t,{textAlign:"right"},{match:function(t){return Element$1.isElement(t)}});},e}(Ol),Ll=function(t){function e(){var e=null!==t&&t.apply(this,arguments)||this;return e.title=qc$1("justify.center"),e.iconSvg=Rn$2,e}return D$5(e,t),e.prototype.exec=function(t,e){Transforms.setNodes(t,{textAlign:"center"},{match:function(t){return Element$1.isElement(t)}});},e}(Ol),zl=function(t){function e(){var e=null!==t&&t.apply(this,arguments)||this;return e.title=qc$1("justify.justify"),e.iconSvg=Fn$2,e}return D$5(e,t),e.prototype.exec=function(t,e){Transforms.setNodes(t,{textAlign:"justify"},{match:function(t){return Element$1.isElement(t)}});},e}(Ol),jl={renderTextStyle:function(t,e){if(!Element$1.isElement(t))return e;var n=t.textAlign,r=e;return n&&Pr$1(r,{textAlign:n}),r},textStyleToHtml:function(t,e){if(!Element$1.isElement(t))return e;var n=t.textAlign;if(!n)return e;var r=$$6(e);r.css("text-align",n);var o=$$6("<div></div>");return o.append(r),o.html()},menus:[{key:"justifyLeft",factory:function(){return new Nl}},{key:"justifyRight",factory:function(){return new Il}},{key:"justifyCenter",factory:function(){return new Ll}},{key:"justifyJustify",factory:function(){return new zl}}]};var Al=function(){function t(){this.title=qc$1("lineHeight.title"),this.iconSvg='<svg viewBox="0 0 1024 1024"><path d="M964 788a8 8 0 0 1 8 8v98a8 8 0 0 1-8 8H438a8 8 0 0 1-8-8v-98a8 8 0 0 1 8-8h526zM198.93 144.306c6.668-5.798 16.774-5.094 22.573 1.574l122.26 140.582a16 16 0 0 1 3.927 10.5c0 8.836-7.164 16-16 16h-61.8a8 8 0 0 0-8 8v390.077h69.819a16 16 0 0 1 10.502 3.928c6.666 5.8 7.37 15.906 1.57 22.573L221.476 878.123a16 16 0 0 1-1.57 1.57c-6.668 5.8-16.774 5.097-22.574-1.57L75.051 737.538a16 16 0 0 1-3.928-10.5c0-8.837 7.163-16 16-16h69.822V312.96H87.127a16 16 0 0 1-10.502-3.928c-6.666-5.8-7.37-15.906-1.57-22.573l122.303-140.582a16 16 0 0 1 1.572-1.572zM964 465a8 8 0 0 1 8 8v98a8 8 0 0 1-8 8H438a8 8 0 0 1-8-8v-98a8 8 0 0 1 8-8h526z m0-323a8 8 0 0 1 8 8v98a8 8 0 0 1-8 8H438a8 8 0 0 1-8-8v-98a8 8 0 0 1 8-8h526z"></path></svg>',this.tag="select",this.width=80;}return t.prototype.getOptions=function(t){var e=[],r=t.getMenuConfig("lineHeight").lineHeightList,o=void 0===r?[]:r;e.push({text:qc$1("lineHeight.default"),value:""}),o.forEach((function(t){e.push({text:t,value:t});}));var i=this.getValue(t);return e.forEach((function(t){t.value===i?t.selected=!0:delete t.selected;})),e},t.prototype.getMatchNode=function(t){var n=$$5(Editor.nodes(t,{match:function(t){var n=fi$1.getNodeType(t);return !!n.startsWith("header")||!!["paragraph","blockquote","bulleted-list","numbered-list"].includes(n)},universal:!0,mode:"highest"}),1)[0];return null==n?null:n[0]},t.prototype.isActive=function(t){return !1},t.prototype.getValue=function(t){var e=this.getMatchNode(t);return null==e?"":Element$1.isElement(e)&&e.lineHeight||""},t.prototype.isDisabled=function(t){return null==t.selection||null==this.getMatchNode(t)},t.prototype.exec=function(t,e){Transforms.setNodes(t,{lineHeight:e.toString()},{mode:"highest"});},t}();var Hl={renderTextStyle:function(t,e){if(!Element$1.isElement(t))return e;var n=t.lineHeight,r=e;return n&&Pr$1(r,{lineHeight:n}),r},textStyleToHtml:function(t,e){if(!Element$1.isElement(t))return e;var n=t.lineHeight;if(!n)return e;var r=$$6(e);r.css("line-height",n);var o=$$6("<div></div>");return o.append(r),o.html()},menus:[{key:"lineHeight",factory:function(){return new Al},config:{lineHeightList:["1","1.15","1.5","2","2.5","3"]}}]},Vl=function(){function t(){this.title=qc$1("undo.redo"),this.iconSvg='<svg viewBox="0 0 1024 1024"><path d="M0.00032 576a510.72 510.72 0 0 0 173.344 384l84.672-96A383.136 383.136 0 0 1 128.00032 576C128.00032 363.936 299.93632 192 512.00032 192c106.048 0 202.048 42.976 271.52 112.48L640.00032 448h384V64l-149.984 149.984A510.272 510.272 0 0 0 512.00032 64C229.21632 64 0.00032 293.216 0.00032 576z"></path></svg>',this.tag="button";}return t.prototype.getValue=function(t){return ""},t.prototype.isActive=function(t){return !1},t.prototype.isDisabled=function(t){return null==t.selection},t.prototype.exec=function(t,e){"function"==typeof t.redo&&t.redo();},t}(),Cl=function(){function t(){this.title=qc$1("undo.undo"),this.iconSvg='<svg viewBox="0 0 1024 1024"><path d="M512 64A510.272 510.272 0 0 0 149.984 213.984L0.032 64v384h384L240.512 304.48A382.784 382.784 0 0 1 512.032 192c212.064 0 384 171.936 384 384 0 114.688-50.304 217.632-130.016 288l84.672 96a510.72 510.72 0 0 0 173.344-384c0-282.784-229.216-512-512-512z"></path></svg>',this.tag="button";}return t.prototype.getValue=function(t){return ""},t.prototype.isActive=function(t){return !1},t.prototype.isDisabled=function(t){return null==t.selection},t.prototype.exec=function(t,e){"function"==typeof t.undo&&t.undo();},t}(),Pl={menus:[{key:"redo",factory:function(){return new Vl}},{key:"undo",factory:function(){return new Cl}}]};var Dl={type:"divider",renderElem:function(t,n,r){var o=fi$1.isNodeSelected(r,t);return jsx("div",{className:"w-e-textarea-divider","data-selected":o?"true":"",style:{}},jsx("hr",null))}};var Bl={type:"divider",elemToHtml:function(t,e,n){return "<hr/>"}},_l=function(){function t(){this.title=qc$1("divider.title"),this.iconSvg='<svg viewBox="0 0 1092 1024"><path d="M0 51.2m51.2 0l989.866667 0q51.2 0 51.2 51.2l0 0q0 51.2-51.2 51.2l-989.866667 0q-51.2 0-51.2-51.2l0 0q0-51.2 51.2-51.2Z"></path><path d="M0 460.8m51.2 0l170.666667 0q51.2 0 51.2 51.2l0 0q0 51.2-51.2 51.2l-170.666667 0q-51.2 0-51.2-51.2l0 0q0-51.2 51.2-51.2Z"></path><path d="M819.2 460.8m51.2 0l170.666667 0q51.2 0 51.2 51.2l0 0q0 51.2-51.2 51.2l-170.666667 0q-51.2 0-51.2-51.2l0 0q0-51.2 51.2-51.2Z"></path><path d="M409.6 460.8m51.2 0l170.666667 0q51.2 0 51.2 51.2l0 0q0 51.2-51.2 51.2l-170.666667 0q-51.2 0-51.2-51.2l0 0q0-51.2 51.2-51.2Z"></path><path d="M0 870.4m51.2 0l989.866667 0q51.2 0 51.2 51.2l0 0q0 51.2-51.2 51.2l-989.866667 0q-51.2 0-51.2-51.2l0 0q0-51.2 51.2-51.2Z"></path></svg>',this.tag="button";}return t.prototype.getValue=function(t){return ""},t.prototype.isActive=function(t){return !1},t.prototype.isDisabled=function(t){return null==t.selection||!!fi$1.getSelectedNodeByType(t,"divider")},t.prototype.exec=function(t,e){Transforms.insertNodes(t,{type:"divider",children:[{text:""}]},{mode:"highest"});},t}(),Rl={renderElems:[Dl],elemsToHtml:[Bl],menus:[{key:"divider",factory:function(){return new _l}}],editorPlugin:function(t){var n=t.isVoid,r=t.normalizeNode,o=t;return o.isVoid=function(t){return "divider"===t.type||n(t)},o.normalizeNode=function(t){var n=$$5(t,2),i=n[0],u=n[1];if("divider"!==fi$1.getNodeType(i))return r([i,u]);var a=((o.children||[])[u[0]+1]||{}).type,c=void 0===a?"":a;if("paragraph"!==c&&"blockquote"!==c&&!c.startsWith("header")){var l=[u[0]+1];Transforms.insertNodes(o,{type:"paragraph",children:[{text:""}]},{at:l});}},o}},Fl=gn$2.map;ke$5({target:"Array",proto:!0,forced:!co("map")},{map:function(t){return Fl(this,t,arguments.length>1?arguments[1]:void 0)}}),ke$5({target:"String",proto:!0,forced:!rn$2("includes")},{includes:function(t){return !!~String(at$5(this)).indexOf(en$2(t),arguments.length>1?arguments[1]:void 0)}});var $l=[].join,ql=ut$5!=Object,Wl=yn$2("join",",");ke$5({target:"Array",proto:!0,forced:ql||!Wl},{join:function(t){return $l.call(ct$5(this),void 0===t?",":t)}});var Gl=function(){function t(){this.title=qc$1("codeBlock.title"),this.iconSvg='<svg viewBox="0 0 1280 1024"><path d="M832 736l96 96 320-320L928 192l-96 96 224 224zM448 288l-96-96L32 512l320 320 96-96-224-224zM701.312 150.528l69.472 18.944-192 704.032-69.472-18.944 192-704.032z"></path></svg>',this.tag="button";}return t.prototype.getSelectCodeElem=function(t){var n=fi$1.getSelectedNodeByType(t,"code");if(null==n)return null;var r=fi$1.getParentNode(t,n);return null==r||"pre"!==fi$1.getNodeType(r)?null:n},t.prototype.getValue=function(t){var e=this.getSelectCodeElem(t);return null==e?"":e.language||""},t.prototype.isActive=function(t){return !!this.getSelectCodeElem(t)},t.prototype.isDisabled=function(t){return null==t.selection||null==$$5(Editor.nodes(t,{match:function(t){var n=fi$1.getNodeType(t);return "pre"===n||"paragraph"===n},universal:!0}),1)[0]},t.prototype.exec=function(t,e){this.isActive(t)?this.changeToPlainText(t):this.changeToCodeBlock(t,e.toString());},t.prototype.changeToPlainText=function(t){var e=this.getSelectCodeElem(t);if(null!=e){var n=Node$1.string(e);Transforms.removeNodes(t,{mode:"highest"});var r=n.split("\n").map((function(t){return {type:"paragraph",children:[{text:t}]}}));Transforms.insertNodes(t,r,{mode:"highest"});}},t.prototype.changeToCodeBlock=function(t,e){var n,r,o=[],i=Editor.nodes(t,{match:function(e){return t.children.includes(e)},universal:!0});try{for(var a=F$5(i),l=a.next();!l.done;l=a.next()){var f=$$5(l.value,1)[0];f&&o.push(Node$1.string(f));}}catch(t){n={error:t};}finally{try{l&&!l.done&&(r=a.return)&&r.call(a);}finally{if(n)throw n.error}}Transforms.removeNodes(t,{mode:"highest"});var p={type:"pre",children:[{type:"code",language:e,children:[{text:o.join("\n")}]}]};Transforms.insertNodes(t,p,{mode:"highest"});},t}();var Ul={menus:[{key:"codeBlock",factory:function(){return new Gl}}],editorPlugin:function(t){var n=t.insertBreak,r=t.normalizeNode,o=t.insertData,i=t;return i.insertBreak=function(){var r=fi$1.getSelectedNodeByType(i,"code");if(null!=r)if("\n\n"===Node$1.string(r).slice(-2)){Transforms.insertNodes(t,{type:"paragraph",children:[{text:""}]},{mode:"highest"});}else i.insertText("\n");else n();},i.normalizeNode=function(t){var n=$$5(t,2),o=n[0],u=n[1],a=fi$1.getNodeType(o);if(!("code"===a&&u.length<=1)){if("pre"===a&&i.children[0]===o){Transforms.insertNodes(i,{type:"paragraph",children:[{text:""}]},{at:u});}return r([o,u])}Transforms.setNodes(i,{type:"paragraph"},{at:u});},i.insertData=function(t){if(null!=fi$1.getSelectedNodeByType(i,"code")){var n=t.getData("text/plain");Editor.insertText(i,n);}else o(t);},i},renderElems:[{type:"pre",renderElem:function(t,e,n){return jsx("pre",null,e)}},{type:"code",renderElem:function(t,e,n){return jsx("code",null,e)}}],elemsToHtml:[{type:"code",elemToHtml:function(t,e,n){return "<code>"+e+"</code>"}},{type:"pre",elemToHtml:function(t,e,n){return "<pre>"+e+"</pre>"}}]},Kl=function(){function t(){this.title=qc$1("fullScreen.title"),this.iconSvg='<svg viewBox="0 0 1024 1024"><path d="M133.705143 335.433143V133.851429h201.581714a29.622857 29.622857 0 0 0 29.622857-29.549715V68.754286a29.622857 29.622857 0 0 0-29.622857-29.622857H61.732571A22.893714 22.893714 0 0 0 38.765714 62.025143V335.725714c0 16.310857 13.238857 29.622857 29.622857 29.622857h35.547429a29.842286 29.842286 0 0 0 29.696-29.842285zM690.980571 133.851429h201.581715v201.654857c0 16.310857 13.238857 29.549714 29.622857 29.549714h35.547428a29.622857 29.622857 0 0 0 29.549715-29.549714V61.952a22.893714 22.893714 0 0 0-22.820572-22.893714h-273.554285a29.622857 29.622857 0 0 0-29.549715 29.622857v35.547428c0 16.310857 13.238857 29.696 29.622857 29.696zM335.286857 892.781714H133.705143V691.2a29.622857 29.622857 0 0 0-29.622857-29.622857H68.534857a29.622857 29.622857 0 0 0-29.549714 29.622857v273.554286c0 12.653714 10.24 22.893714 22.820571 22.893714h273.554286a29.622857 29.622857 0 0 0 29.696-29.622857v-35.547429a29.769143 29.769143 0 0 0-29.769143-29.696z m557.348572-201.581714v201.581714H690.907429a29.622857 29.622857 0 0 0-29.622858 29.622857v35.547429c0 16.310857 13.238857 29.622857 29.622858 29.622857h273.554285c12.580571 0 22.893714-10.313143 22.893715-22.893714V691.2a29.622857 29.622857 0 0 0-29.622858-29.622857h-35.547428a29.622857 29.622857 0 0 0-29.696 29.622857z"></path></svg>',this.tag="button";}return t.prototype.getValue=function(t){return ""},t.prototype.isActive=function(t){return t.isFullScreen},t.prototype.isDisabled=function(t){return !1},t.prototype.exec=function(t,e){t.isFullScreen?t.unFullScreen():t.fullScreen();},t}(),Yl=[Zn$1,Ar$1,W$5,eo,Uo,Oi,zi,Pi,xl,Ml,jl,Hl,Pl,Rl,Ul,{menus:[{key:"fullScreen",factory:function(){return new Kl}}]}];

  Kc$1("en",{listModule:{unOrderedList:"Unordered list",orderedList:"Ordered list"}}),Kc$1("zh-CN",{listModule:{unOrderedList:"无序列表",orderedList:"有序列表"}});var c$1="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:{};function a(t){var e={exports:{}};return t(e,e.exports),e.exports}var f$1=function(t){return t&&t.Math==Math&&t},s$1=f$1("object"==typeof globalThis&&globalThis)||f$1("object"==typeof window&&window)||f$1("object"==typeof self&&self)||f$1("object"==typeof c$1&&c$1)||function(){return this}()||Function("return this")(),p$1=function(t){try{return !!t()}catch(t){return !0}},d$2=!p$1((function(){return 7!=Object.defineProperty({},1,{get:function(){return 7}})[1]})),y$3={}.propertyIsEnumerable,v$2=Object.getOwnPropertyDescriptor,h$2={f:v$2&&!y$3.call({1:2},1)?function(t){var e=v$2(this,t);return !!e&&e.enumerable}:y$3},g$3=function(t,e){return {enumerable:!(1&t),configurable:!(2&t),writable:!(4&t),value:e}},m$3={}.toString,b$3="".split,w$3=p$1((function(){return !Object("z").propertyIsEnumerable(0)}))?function(t){return "String"==function(t){return m$3.call(t).slice(8,-1)}(t)?b$3.call(t,""):Object(t)}:Object,O$4=function(t){if(null==t)throw TypeError("Can't call method on "+t);return t},S$3=function(t){return w$3(O$4(t))},x$3=function(t){return "object"==typeof t?null!==t:"function"==typeof t},j$4=function(t,e){if(!x$3(t))return t;var n,r;if(e&&"function"==typeof(n=t.toString)&&!x$3(r=n.call(t)))return r;if("function"==typeof(n=t.valueOf)&&!x$3(r=n.call(t)))return r;if(!e&&"function"==typeof(n=t.toString)&&!x$3(r=n.call(t)))return r;throw TypeError("Can't convert object to primitive value")},E$4={}.hasOwnProperty,T$3=Object.hasOwn||function(t,e){return E$4.call(Object(O$4(t)),e)},N$4=s$1.document,P$4=x$3(N$4)&&x$3(N$4.createElement),_$4=function(t){return P$4?N$4.createElement(t):{}},M$4=!d$2&&!p$1((function(){return 7!=Object.defineProperty(_$4("div"),"a",{get:function(){return 7}}).a})),I$4=Object.getOwnPropertyDescriptor,z$4={f:d$2?I$4:function(t,e){if(t=S$3(t),e=j$4(e,!0),M$4)try{return I$4(t,e)}catch(t){}if(T$3(t,e))return g$3(!h$2.f.call(t,e),t[e])}},H$4=function(t){if(!x$3(t))throw TypeError(String(t)+" is not an object");return t},L$4=Object.defineProperty,k$4={f:d$2?L$4:function(t,e,n){if(H$4(t),e=j$4(e,!0),H$4(n),M$4)try{return L$4(t,e,n)}catch(t){}if("get"in n||"set"in n)throw TypeError("Accessors not supported");return "value"in n&&(t[e]=n.value),t}},R$4=d$2?function(t,e,n){return k$4.f(t,e,g$3(1,n))}:function(t,e,n){return t[e]=n,t},A$4=function(t,e){try{R$4(s$1,t,e);}catch(n){s$1[t]=e;}return e},B$4=s$1["__core-js_shared__"]||A$4("__core-js_shared__",{}),C$4=Function.toString;"function"!=typeof B$4.inspectSource&&(B$4.inspectSource=function(t){return C$4.call(t)});var F$4,V$4,D$4,U$4=B$4.inspectSource,W$4=s$1.WeakMap,K$4="function"==typeof W$4&&/native code/.test(U$4(W$4)),Y$4=a((function(t){(t.exports=function(t,e){return B$4[t]||(B$4[t]=void 0!==e?e:{})})("versions",[]).push({version:"3.13.1",mode:"global",copyright:"© 2021 Denis Pushkarev (zloirock.ru)"});})),G$4=0,q$4=Math.random(),X$4=function(t){return "Symbol("+String(void 0===t?"":t)+")_"+(++G$4+q$4).toString(36)},$$4=Y$4("keys"),J$4=function(t){return $$4[t]||($$4[t]=X$4(t))},Q$4={},Z$4=s$1.WeakMap;if(K$4||B$4.state){var tt$4=B$4.state||(B$4.state=new Z$4),et$4=tt$4.get,nt$4=tt$4.has,rt$4=tt$4.set;F$4=function(t,e){if(nt$4.call(tt$4,t))throw new TypeError("Object already initialized");return e.facade=t,rt$4.call(tt$4,t,e),e},V$4=function(t){return et$4.call(tt$4,t)||{}},D$4=function(t){return nt$4.call(tt$4,t)};}else {var ot$4=J$4("state");Q$4[ot$4]=!0,F$4=function(t,e){if(T$3(t,ot$4))throw new TypeError("Object already initialized");return e.facade=t,R$4(t,ot$4,e),e},V$4=function(t){return T$3(t,ot$4)?t[ot$4]:{}},D$4=function(t){return T$3(t,ot$4)};}var it$4,ut$4,lt$4={set:F$4,get:V$4,has:D$4,enforce:function(t){return D$4(t)?V$4(t):F$4(t,{})},getterFor:function(t){return function(e){var n;if(!x$3(e)||(n=V$4(e)).type!==t)throw TypeError("Incompatible receiver, "+t+" required");return n}}},ct$4=a((function(t){var e=lt$4.get,n=lt$4.enforce,r=String(String).split("String");(t.exports=function(t,e,o,i){var u,l=!!i&&!!i.unsafe,c=!!i&&!!i.enumerable,a=!!i&&!!i.noTargetGet;"function"==typeof o&&("string"!=typeof e||T$3(o,"name")||R$4(o,"name",e),(u=n(o)).source||(u.source=r.join("string"==typeof e?e:""))),t!==s$1?(l?!a&&t[e]&&(c=!0):delete t[e],c?t[e]=o:R$4(t,e,o)):c?t[e]=o:A$4(e,o);})(Function.prototype,"toString",(function(){return "function"==typeof this&&e(this).source||U$4(this)}));})),at$4=s$1,ft$4=function(t){return "function"==typeof t?t:void 0},st$4=function(t,e){return arguments.length<2?ft$4(at$4[t])||ft$4(s$1[t]):at$4[t]&&at$4[t][e]||s$1[t]&&s$1[t][e]},pt$4=Math.ceil,dt$4=Math.floor,yt$4=function(t){return isNaN(t=+t)?0:(t>0?dt$4:pt$4)(t)},vt$4=Math.min,ht$4=Math.max,gt$4=Math.min,mt$4=function(t){return function(e,n,r){var o,i,u=S$3(e),l=(o=u.length)>0?vt$4(yt$4(o),9007199254740991):0,c=function(t,e){var n=yt$4(t);return n<0?ht$4(n+e,0):gt$4(n,e)}(r,l);if(t&&n!=n){for(;l>c;)if((i=u[c++])!=i)return !0}else for(;l>c;c++)if((t||c in u)&&u[c]===n)return t||c||0;return !t&&-1}},bt$4={includes:mt$4(!0),indexOf:mt$4(!1)},wt$4=bt$4.indexOf,Ot$4=function(t,e){var n,r=S$3(t),o=0,i=[];for(n in r)!T$3(Q$4,n)&&T$3(r,n)&&i.push(n);for(;e.length>o;)T$3(r,n=e[o++])&&(~wt$4(i,n)||i.push(n));return i},St$4=["constructor","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","toLocaleString","toString","valueOf"],xt$4=St$4.concat("length","prototype"),jt$3={f:Object.getOwnPropertyNames||function(t){return Ot$4(t,xt$4)}},Et$4={f:Object.getOwnPropertySymbols},Tt$4=st$4("Reflect","ownKeys")||function(t){var e=jt$3.f(H$4(t)),n=Et$4.f;return n?e.concat(n(t)):e},Nt$4=function(t,e){for(var n=Tt$4(e),r=k$4.f,o=z$4.f,i=0;i<n.length;i++){var u=n[i];T$3(t,u)||r(t,u,o(e,u));}},Pt$4=/#|\.prototype\./,_t$4=function(t,e){var n=It$4[Mt$4(t)];return n==Ht$3||n!=zt$3&&("function"==typeof e?p$1(e):!!e)},Mt$4=_t$4.normalize=function(t){return String(t).replace(Pt$4,".").toLowerCase()},It$4=_t$4.data={},zt$3=_t$4.NATIVE="N",Ht$3=_t$4.POLYFILL="P",Lt$4=_t$4,kt$4=z$4.f,Rt$4=function(t,e){var n,r,o,i,u,l=t.target,c=t.global,a=t.stat;if(n=c?s$1:a?s$1[l]||A$4(l,{}):(s$1[l]||{}).prototype)for(r in e){if(i=e[r],o=t.noTargetGet?(u=kt$4(n,r))&&u.value:n[r],!Lt$4(c?r:l+(a?".":"#")+r,t.forced)&&void 0!==o){if(typeof i==typeof o)continue;Nt$4(i,o);}(t.sham||o&&o.sham)&&R$4(i,"sham",!0),ct$4(n,r,i,t);}},At$4=st$4("navigator","userAgent")||"",Bt$3=s$1.process,Ct$4=Bt$3&&Bt$3.versions,Ft$4=Ct$4&&Ct$4.v8;Ft$4?ut$4=(it$4=Ft$4.split("."))[0]<4?1:it$4[0]+it$4[1]:At$4&&(!(it$4=At$4.match(/Edge\/(\d+)/))||it$4[1]>=74)&&(it$4=At$4.match(/Chrome\/(\d+)/))&&(ut$4=it$4[1]);var Vt$3,Dt$4=ut$4&&+ut$4,Ut$3=!!Object.getOwnPropertySymbols&&!p$1((function(){var t=Symbol();return !String(t)||!(Object(t)instanceof Symbol)||!Symbol.sham&&Dt$4&&Dt$4<41})),Wt$3=Ut$3&&!Symbol.sham&&"symbol"==typeof Symbol.iterator,Kt$3=Y$4("wks"),Yt$3=s$1.Symbol,Gt$3=Wt$3?Yt$3:Yt$3&&Yt$3.withoutSetter||X$4,qt$3=Object.keys||function(t){return Ot$4(t,St$4)},Xt$3=d$2?Object.defineProperties:function(t,e){H$4(t);for(var n,r=qt$3(e),o=r.length,i=0;o>i;)k$4.f(t,n=r[i++],e[n]);return t},$t$3=st$4("document","documentElement"),Jt$3=J$4("IE_PROTO"),Qt$3=function(){},Zt$3=function(t){return "<script>"+t+"<\/script>"},te$4=function(){try{Vt$3=document.domain&&new ActiveXObject("htmlfile");}catch(t){}var t,e;te$4=Vt$3?function(t){t.write(Zt$3("")),t.close();var e=t.parentWindow.Object;return t=null,e}(Vt$3):((e=_$4("iframe")).style.display="none",$t$3.appendChild(e),e.src=String("javascript:"),(t=e.contentWindow.document).open(),t.write(Zt$3("document.F=Object")),t.close(),t.F);for(var n=St$4.length;n--;)delete te$4.prototype[St$4[n]];return te$4()};Q$4[Jt$3]=!0;var ee$4,ne$4=Object.create||function(t,e){var n;return null!==t?(Qt$3.prototype=H$4(t),n=new Qt$3,Qt$3.prototype=null,n[Jt$3]=t):n=te$4(),void 0===e?n:Xt$3(n,e)},re$4=(T$3(Kt$3,ee$4="unscopables")&&(Ut$3||"string"==typeof Kt$3[ee$4])||(Ut$3&&T$3(Yt$3,ee$4)?Kt$3[ee$4]=Yt$3[ee$4]:Kt$3[ee$4]=Gt$3("Symbol."+ee$4)),Kt$3[ee$4]),oe$4=Array.prototype;null==oe$4[re$4]&&k$4.f(oe$4,re$4,{configurable:!0,value:ne$4(null)});var ie$4,ue$4=bt$4.includes;function le$4(t){if("bulleted-list"===t)return "ul";if("numbered-list"===t)return "ol";if("list-item"===t)return "li";throw new Error("list type '"+t+"' is invalid")}function ce$4(t){var n=fi$1.getNodeType(t);return ["bulleted-list","numbered-list"].includes(n)}function ae$4(t){return function(e,n,o){var i=le$4(t);return jsx(i,null,n)}}Rt$4({target:"Array",proto:!0},{includes:function(t){return ue$4(this,t,arguments.length>1?arguments[1]:void 0)}}),ie$4="includes",oe$4[re$4][ie$4]=!0;var fe$4={type:"bulleted-list",renderElem:ae$4("bulleted-list")},se$4={type:"numbered-list",renderElem:ae$4("numbered-list")},pe$4={type:"list-item",renderElem:ae$4("list-item")};function de$4(t){var e=le$4(t);return function(t,n,r){return "<"+e+">"+n+"</"+e+">"}}var ye$4={type:"bulleted-list",elemToHtml:de$4("bulleted-list")},ve$4={type:"numbered-list",elemToHtml:de$4("numbered-list")},he$4={type:"list-item",elemToHtml:de$4("list-item")},ge$4=function(t,e){return (ge$4=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e;}||function(t,e){for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n]);})(t,e)};function me$4(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Class extends value "+String(e)+" is not a constructor or null");function n(){this.constructor=t;}ge$4(t,e),t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n);}function be$4(t,e){var n="function"==typeof Symbol&&t[Symbol.iterator];if(!n)return t;var r,o,i=n.call(t),u=[];try{for(;(void 0===e||e-- >0)&&!(r=i.next()).done;)u.push(r.value);}catch(t){o={error:t};}finally{try{r&&!r.done&&(n=i.return)&&n.call(i);}finally{if(o)throw o.error}}return u}var we$4=function(){var t=H$4(this),e="";return t.global&&(e+="g"),t.ignoreCase&&(e+="i"),t.multiline&&(e+="m"),t.dotAll&&(e+="s"),t.unicode&&(e+="u"),t.sticky&&(e+="y"),e};function Oe$4(t,e){return RegExp(t,e)}var Se$4,xe$4,je$4={UNSUPPORTED_Y:p$1((function(){var t=Oe$4("a","y");return t.lastIndex=2,null!=t.exec("abcd")})),BROKEN_CARET:p$1((function(){var t=Oe$4("^r","gy");return t.lastIndex=2,null!=t.exec("str")}))},Ee$4=RegExp.prototype.exec,Te$4=Y$4("native-string-replace",String.prototype.replace),Ne$4=Ee$4,Pe$4=(Se$4=/a/,xe$4=/b*/g,Ee$4.call(Se$4,"a"),Ee$4.call(xe$4,"a"),0!==Se$4.lastIndex||0!==xe$4.lastIndex),_e$4=je$4.UNSUPPORTED_Y||je$4.BROKEN_CARET,Me$4=void 0!==/()??/.exec("")[1];(Pe$4||Me$4||_e$4)&&(Ne$4=function(t){var e,n,r,o,i=this,u=_e$4&&i.sticky,l=we$4.call(i),c=i.source,a=0,f=t;return u&&(-1===(l=l.replace("y","")).indexOf("g")&&(l+="g"),f=String(t).slice(i.lastIndex),i.lastIndex>0&&(!i.multiline||i.multiline&&"\n"!==t[i.lastIndex-1])&&(c="(?: "+c+")",f=" "+f,a++),n=new RegExp("^(?:"+c+")",l)),Me$4&&(n=new RegExp("^"+c+"$(?!\\s)",l)),Pe$4&&(e=i.lastIndex),r=Ee$4.call(u?n:i,f),u?r?(r.input=r.input.slice(a),r[0]=r[0].slice(a),r.index=i.lastIndex,i.lastIndex+=r[0].length):i.lastIndex=0:Pe$4&&r&&(i.lastIndex=i.global?r.index+r[0].length:e),Me$4&&r&&r.length>1&&Te$4.call(r[0],n,(function(){for(o=1;o<arguments.length-2;o++)void 0===arguments[o]&&(r[o]=void 0);})),r});Rt$4({target:"RegExp",proto:!0,forced:/./.exec!==Ne$4},{exec:Ne$4});var Ie$4=function(){function t(){this.tag="button";}return t.prototype.getListNode=function(t){var n=this.type;return fi$1.getSelectedNodeByType(t,n)},t.prototype.getValue=function(t){return ""},t.prototype.isActive=function(t){return !!this.getListNode(t)},t.prototype.isDisabled=function(t){return null==t.selection||!!be$4(Editor.nodes(t,{match:function(n){var r=fi$1.getNodeType(n);return "pre"===r||(!!Editor.isVoid(t,n)||"table"===r)},universal:!0}),1)[0]},t.prototype.getMatchListType=function(t){var n=be$4(Editor.nodes(t,{match:function(t){return ce$4(t)},universal:!0}),1)[0];if(null==n)return "";var r=be$4(n,1)[0];return fi$1.getNodeType(r)},t.prototype.exec=function(t,e){var n=this.type,r=this.isActive(t);Transforms.unwrapNodes(t,{match:function(t){return ce$4(t)},split:!0}),Transforms.setNodes(t,{type:r?"paragraph":"list-item"});var o={type:n,children:[]};r||Transforms.wrapNodes(t,o);var u=this.getMatchListType(t);""!=u&&u!==n&&Transforms.wrapNodes(t,o);},t}(),ze$4='<svg viewBox="0 0 1024 1024"><path d="M384 64h640v128H384V64z m0 384h640v128H384v-128z m0 384h640v128H384v-128zM0 128a128 128 0 1 1 256 0 128 128 0 0 1-256 0z m0 384a128 128 0 1 1 256 0 128 128 0 0 1-256 0z m0 384a128 128 0 1 1 256 0 128 128 0 0 1-256 0z"></path></svg>',He$4='<svg viewBox="0 0 1024 1024"><path d="M384 832h640v128H384z m0-384h640v128H384z m0-384h640v128H384zM192 0v256H128V64H64V0zM128 526.016v50.016h128v64H64v-146.016l128-60V384H64v-64h192v146.016zM256 704v320H64v-64h128v-64H64v-64h128v-64H64v-64z"></path></svg>',Le$4=function(t){function e(){var e=null!==t&&t.apply(this,arguments)||this;return e.type="bulleted-list",e.title=qc$1("listModule.unOrderedList"),e.iconSvg=ze$4,e}return me$4(e,t),e}(Ie$4),ke$4=function(t){function e(){var e=null!==t&&t.apply(this,arguments)||this;return e.type="numbered-list",e.title=qc$1("listModule.orderedList"),e.iconSvg=He$4,e}return me$4(e,t),e}(Ie$4);var Re$4={renderElems:[fe$4,se$4,pe$4],elemsToHtml:[ye$4,ve$4,he$4],menus:[{key:"bulletedList",factory:function(){return new Le$4}},{key:"numberedList",factory:function(){return new ke$4}}],editorPlugin:function(t){var n=t.insertBreak,r=t.deleteBackward,c=t;return c.insertBreak=function(){var t=fi$1.getSelectedNodeByType(c,"list-item");if(null!=t){var r=fi$1.getParentNode(c,t),o=(null==r?void 0:r.children)||[];if(t===o[o.length-1])if(""===Node$1.string(t)){Transforms.removeNodes(c,{match:function(t){return fi$1.checkNodeType(t,"list-item")}});return void Transforms.insertNodes(c,{type:"paragraph",children:[{text:""}]},{mode:"highest"})}n();}else n();},c.deleteBackward=function(t){(function(t){var e=be$4(Editor.nodes(t,{match:function(e){return t.children[0]===e},mode:"highest"}),1)[0];if(null==e)return !1;var n=e[0];return !(!Element$1.isElement(n)||Node$1.string(n)||!ce$4(n)||(Transforms.unwrapNodes(t,{match:function(t){return ce$4(t)},split:!0}),Transforms.setNodes(t,{type:"paragraph"}),0))})(c)||r(t);},c}};

  Kc$1("en",{tableModule:{deleteCol:"Delete column",deleteRow:"Delete row",deleteTable:"Delete table",widthAuto:"Width auto",insertCol:"Insert column",insertRow:"Insert row",insertTable:"Insert table",header:"Header"}}),Kc$1("zh-CN",{tableModule:{deleteCol:"删除列",deleteRow:"删除行",deleteTable:"删除表格",widthAuto:"宽度自适应",insertCol:"插入列",insertRow:"插入行",insertTable:"插入表格",header:"表头"}});var E$3="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:{};function N$3(t){var e={exports:{}};return t(e,e.exports),e.exports}var M$3=function(t){return t&&t.Math==Math&&t},V$3=M$3("object"==typeof globalThis&&globalThis)||M$3("object"==typeof window&&window)||M$3("object"==typeof self&&self)||M$3("object"==typeof E$3&&E$3)||function(){return this}()||Function("return this")(),z$3=function(t){try{return !!t()}catch(t){return !0}},O$3=!z$3((function(){return 7!=Object.defineProperty({},1,{get:function(){return 7}})[1]})),H$3={}.propertyIsEnumerable,L$3=Object.getOwnPropertyDescriptor,C$3={f:L$3&&!H$3.call({1:2},1)?function(t){var e=L$3(this,t);return !!e&&e.enumerable}:H$3},j$3=function(t,e){return {enumerable:!(1&t),configurable:!(2&t),writable:!(4&t),value:e}},P$3={}.toString,A$3=function(t){return P$3.call(t).slice(8,-1)},D$3="".split,I$3=z$3((function(){return !Object("z").propertyIsEnumerable(0)}))?function(t){return "String"==A$3(t)?D$3.call(t,""):Object(t)}:Object,k$3=function(t){if(null==t)throw TypeError("Can't call method on "+t);return t},R$3=function(t){return I$3(k$3(t))},B$3=function(t){return "object"==typeof t?null!==t:"function"==typeof t},_$3=function(t,e){if(!B$3(t))return t;var n,r;if(e&&"function"==typeof(n=t.toString)&&!B$3(r=n.call(t)))return r;if("function"==typeof(n=t.valueOf)&&!B$3(r=n.call(t)))return r;if(!e&&"function"==typeof(n=t.toString)&&!B$3(r=n.call(t)))return r;throw TypeError("Can't convert object to primitive value")},W$3=function(t){return Object(k$3(t))},F$3={}.hasOwnProperty,G$3=Object.hasOwn||function(t,e){return F$3.call(W$3(t),e)},q$3=V$3.document,U$3=B$3(q$3)&&B$3(q$3.createElement),$$3=function(t){return U$3?q$3.createElement(t):{}},K$3=!O$3&&!z$3((function(){return 7!=Object.defineProperty($$3("div"),"a",{get:function(){return 7}}).a})),Y$3=Object.getOwnPropertyDescriptor,J$3={f:O$3?Y$3:function(t,e){if(t=R$3(t),e=_$3(e,!0),K$3)try{return Y$3(t,e)}catch(t){}if(G$3(t,e))return j$3(!C$3.f.call(t,e),t[e])}},X$3=function(t){if(!B$3(t))throw TypeError(String(t)+" is not an object");return t},Q$3=Object.defineProperty,Z$3={f:O$3?Q$3:function(t,e,n){if(X$3(t),e=_$3(e,!0),X$3(n),K$3)try{return Q$3(t,e,n)}catch(t){}if("get"in n||"set"in n)throw TypeError("Accessors not supported");return "value"in n&&(t[e]=n.value),t}},tt$3=O$3?function(t,e,n){return Z$3.f(t,e,j$3(1,n))}:function(t,e,n){return t[e]=n,t},et$3=function(t,e){try{tt$3(V$3,t,e);}catch(n){V$3[t]=e;}return e},nt$3=V$3["__core-js_shared__"]||et$3("__core-js_shared__",{}),rt$3=Function.toString;"function"!=typeof nt$3.inspectSource&&(nt$3.inspectSource=function(t){return rt$3.call(t)});var ot$3,it$3,at$3,lt$3=nt$3.inspectSource,ct$3=V$3.WeakMap,ut$3="function"==typeof ct$3&&/native code/.test(lt$3(ct$3)),st$3=N$3((function(t){(t.exports=function(t,e){return nt$3[t]||(nt$3[t]=void 0!==e?e:{})})("versions",[]).push({version:"3.13.1",mode:"global",copyright:"© 2021 Denis Pushkarev (zloirock.ru)"});})),ft$3=0,dt$3=Math.random(),ht$3=function(t){return "Symbol("+String(void 0===t?"":t)+")_"+(++ft$3+dt$3).toString(36)},pt$3=st$3("keys"),vt$3=function(t){return pt$3[t]||(pt$3[t]=ht$3(t))},yt$3={},gt$3=V$3.WeakMap;if(ut$3||nt$3.state){var bt$3=nt$3.state||(nt$3.state=new gt$3),mt$3=bt$3.get,wt$3=bt$3.has,St$3=bt$3.set;ot$3=function(t,e){if(wt$3.call(bt$3,t))throw new TypeError("Object already initialized");return e.facade=t,St$3.call(bt$3,t,e),e},it$3=function(t){return mt$3.call(bt$3,t)||{}},at$3=function(t){return wt$3.call(bt$3,t)};}else {var xt$3=vt$3("state");yt$3[xt$3]=!0,ot$3=function(t,e){if(G$3(t,xt$3))throw new TypeError("Object already initialized");return e.facade=t,tt$3(t,xt$3,e),e},it$3=function(t){return G$3(t,xt$3)?t[xt$3]:{}},at$3=function(t){return G$3(t,xt$3)};}var Tt$3,Et$3={set:ot$3,get:it$3,has:at$3,enforce:function(t){return at$3(t)?it$3(t):ot$3(t,{})},getterFor:function(t){return function(e){var n;if(!B$3(e)||(n=it$3(e)).type!==t)throw TypeError("Incompatible receiver, "+t+" required");return n}}},Nt$3=N$3((function(t){var e=Et$3.get,n=Et$3.enforce,r=String(String).split("String");(t.exports=function(t,e,o,i){var a,l=!!i&&!!i.unsafe,c=!!i&&!!i.enumerable,u=!!i&&!!i.noTargetGet;"function"==typeof o&&("string"!=typeof e||G$3(o,"name")||tt$3(o,"name",e),(a=n(o)).source||(a.source=r.join("string"==typeof e?e:""))),t!==V$3?(l?!u&&t[e]&&(c=!0):delete t[e],c?t[e]=o:tt$3(t,e,o)):c?t[e]=o:et$3(e,o);})(Function.prototype,"toString",(function(){return "function"==typeof this&&e(this).source||lt$3(this)}));})),Mt$3=V$3,Vt$2=function(t){return "function"==typeof t?t:void 0},zt$2=function(t,e){return arguments.length<2?Vt$2(Mt$3[t])||Vt$2(V$3[t]):Mt$3[t]&&Mt$3[t][e]||V$3[t]&&V$3[t][e]},Ot$3=Math.ceil,Ht$2=Math.floor,Lt$3=function(t){return isNaN(t=+t)?0:(t>0?Ht$2:Ot$3)(t)},Ct$3=Math.min,jt$2=function(t){return t>0?Ct$3(Lt$3(t),9007199254740991):0},Pt$3=Math.max,At$3=Math.min,Dt$3=function(t,e){var n=Lt$3(t);return n<0?Pt$3(n+e,0):At$3(n,e)},It$3=function(t){return function(e,n,r){var o,i=R$3(e),a=jt$2(i.length),l=Dt$3(r,a);if(t&&n!=n){for(;a>l;)if((o=i[l++])!=o)return !0}else for(;a>l;l++)if((t||l in i)&&i[l]===n)return t||l||0;return !t&&-1}},kt$3={includes:It$3(!0),indexOf:It$3(!1)}.indexOf,Rt$3=function(t,e){var n,r=R$3(t),o=0,i=[];for(n in r)!G$3(yt$3,n)&&G$3(r,n)&&i.push(n);for(;e.length>o;)G$3(r,n=e[o++])&&(~kt$3(i,n)||i.push(n));return i},Bt$2=["constructor","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","toLocaleString","toString","valueOf"],_t$3=Bt$2.concat("length","prototype"),Wt$2={f:Object.getOwnPropertyNames||function(t){return Rt$3(t,_t$3)}},Ft$3={f:Object.getOwnPropertySymbols},Gt$2=zt$2("Reflect","ownKeys")||function(t){var e=Wt$2.f(X$3(t)),n=Ft$3.f;return n?e.concat(n(t)):e},qt$2=function(t,e){for(var n=Gt$2(e),r=Z$3.f,o=J$3.f,i=0;i<n.length;i++){var a=n[i];G$3(t,a)||r(t,a,o(e,a));}},Ut$2=/#|\.prototype\./,$t$2=function(t,e){var n=Yt$2[Kt$2(t)];return n==Xt$2||n!=Jt$2&&("function"==typeof e?z$3(e):!!e)},Kt$2=$t$2.normalize=function(t){return String(t).replace(Ut$2,".").toLowerCase()},Yt$2=$t$2.data={},Jt$2=$t$2.NATIVE="N",Xt$2=$t$2.POLYFILL="P",Qt$2=$t$2,Zt$2=J$3.f,te$3=function(t,e){var n,r,o,i,a,l=t.target,c=t.global,u=t.stat;if(n=c?V$3:u?V$3[l]||et$3(l,{}):(V$3[l]||{}).prototype)for(r in e){if(i=e[r],o=t.noTargetGet?(a=Zt$2(n,r))&&a.value:n[r],!Qt$2(c?r:l+(u?".":"#")+r,t.forced)&&void 0!==o){if(typeof i==typeof o)continue;qt$2(i,o);}(t.sham||o&&o.sham)&&tt$3(i,"sham",!0),Nt$3(n,r,i,t);}},ee$3=/"/g;te$3({target:"String",proto:!0,forced:(Tt$3="anchor",z$3((function(){var t=""[Tt$3]('"');return t!==t.toLowerCase()||t.split('"').length>3})))},{anchor:function(t){return e="a",n="name",r=t,o=String(k$3(this)),i="<"+e,""!==n&&(i+=" "+n+'="'+String(r).replace(ee$3,"&quot;")+'"'),i+">"+o+"</"+e+">";var e,n,r,o,i;}});var ne$3,re$3,oe$3=zt$2("navigator","userAgent")||"",ie$3=V$3.process,ae$3=ie$3&&ie$3.versions,le$3=ae$3&&ae$3.v8;le$3?re$3=(ne$3=le$3.split("."))[0]<4?1:ne$3[0]+ne$3[1]:oe$3&&(!(ne$3=oe$3.match(/Edge\/(\d+)/))||ne$3[1]>=74)&&(ne$3=oe$3.match(/Chrome\/(\d+)/))&&(re$3=ne$3[1]);var ce$3,ue$3=re$3&&+re$3,se$3=!!Object.getOwnPropertySymbols&&!z$3((function(){var t=Symbol();return !String(t)||!(Object(t)instanceof Symbol)||!Symbol.sham&&ue$3&&ue$3<41})),fe$3=se$3&&!Symbol.sham&&"symbol"==typeof Symbol.iterator,de$3=st$3("wks"),he$3=V$3.Symbol,pe$3=fe$3?he$3:he$3&&he$3.withoutSetter||ht$3,ve$3=function(t){return G$3(de$3,t)&&(se$3||"string"==typeof de$3[t])||(se$3&&G$3(he$3,t)?de$3[t]=he$3[t]:de$3[t]=pe$3("Symbol."+t)),de$3[t]},ye$3=ve$3("match"),ge$3=function(t){if(function(t){var e;return B$3(t)&&(void 0!==(e=t[ye$3])?!!e:"RegExp"==A$3(t))}(t))throw TypeError("The method doesn't accept regular expressions");return t},be$3=ve$3("match"),me$3=J$3.f,we$3="".startsWith,Se$3=Math.min,xe$3=function(t){var e=/./;try{"/./"[t](e);}catch(n){try{return e[be$3]=!1,"/./"[t](e)}catch(t){}}return !1}("startsWith");te$3({target:"String",proto:!0,forced:!!(xe$3||(ce$3=me$3(String.prototype,"startsWith"),!ce$3||ce$3.writable))&&!xe$3},{startsWith:function(t){var e=String(k$3(this));ge$3(t);var n=jt$2(Se$3(arguments.length>1?arguments[1]:void 0,e.length)),r=String(t);return we$3?we$3.call(e,r,n):e.slice(n,n+r.length)===r}});var Te$3=function(t,e,n){if(function(t){if("function"!=typeof t)throw TypeError(String(t)+" is not a function")}(t),void 0===e)return t;switch(n){case 0:return function(){return t.call(e)};case 1:return function(n){return t.call(e,n)};case 2:return function(n,r){return t.call(e,n,r)};case 3:return function(n,r,o){return t.call(e,n,r,o)}}return function(){return t.apply(e,arguments)}},Ee$3=Array.isArray||function(t){return "Array"==A$3(t)},Ne$3=ve$3("species"),Me$3=function(t,e){var n;return Ee$3(t)&&("function"!=typeof(n=t.constructor)||n!==Array&&!Ee$3(n.prototype)?B$3(n)&&null===(n=n[Ne$3])&&(n=void 0):n=void 0),new(void 0===n?Array:n)(0===e?0:e)},Ve$3=[].push,ze$3=function(t){var e=1==t,n=2==t,r=3==t,o=4==t,i=6==t,a=7==t,l=5==t||i;return function(c,u,s,f){for(var d,h,p=W$3(c),v=I$3(p),y=Te$3(u,s,3),g=jt$2(v.length),b=0,m=f||Me$3,w=e?m(c,g):n||a?m(c,0):void 0;g>b;b++)if((l||b in v)&&(h=y(d=v[b],b,p),t))if(e)w[b]=h;else if(h)switch(t){case 3:return !0;case 5:return d;case 6:return b;case 2:Ve$3.call(w,d);}else switch(t){case 4:return !1;case 7:Ve$3.call(w,d);}return i?-1:r||o?o:w}},Oe$3={forEach:ze$3(0),map:ze$3(1),filter:ze$3(2),some:ze$3(3),every:ze$3(4),find:ze$3(5),findIndex:ze$3(6),filterOut:ze$3(7)},He$3=function(t,e){var n=[][t];return !!n&&z$3((function(){n.call(null,e||function(){throw 1},1);}))},Le$3=Oe$3.forEach,Ce$3=He$3("forEach")?[].forEach:function(t){return Le$3(this,t,arguments.length>1?arguments[1]:void 0)};for(var je$3 in {CSSRuleList:0,CSSStyleDeclaration:0,CSSValueList:0,ClientRectList:0,DOMRectList:0,DOMStringList:0,DOMTokenList:1,DataTransferItemList:0,FileList:0,HTMLAllCollection:0,HTMLCollection:0,HTMLFormElement:0,HTMLSelectElement:0,MediaList:0,MimeTypeArray:0,NamedNodeMap:0,NodeList:1,PaintRequestList:0,Plugin:0,PluginArray:0,SVGLengthList:0,SVGNumberList:0,SVGPathSegList:0,SVGPointList:0,SVGStringList:0,SVGTransformList:0,SourceBufferList:0,StyleSheetList:0,TextTrackCueList:0,TextTrackList:0,TouchList:0}){var Pe$3=V$3[je$3],Ae$3=Pe$3&&Pe$3.prototype;if(Ae$3&&Ae$3.forEach!==Ce$3)try{tt$3(Ae$3,"forEach",Ce$3);}catch(t){Ae$3.forEach=Ce$3;}}var De$3=function(t,e,n){var r=_$3(e);r in t?Z$3.f(t,r,j$3(0,n)):t[r]=n;},Ie$3=ve$3("species"),ke$3=function(t){return ue$3>=51||!z$3((function(){var e=[];return (e.constructor={})[Ie$3]=function(){return {foo:1}},1!==e[t](Boolean).foo}))},Re$3=ve$3("isConcatSpreadable"),Be$3=ue$3>=51||!z$3((function(){var t=[];return t[Re$3]=!1,t.concat()[0]!==t})),_e$3=ke$3("concat"),We$3=function(t){if(!B$3(t))return !1;var e=t[Re$3];return void 0!==e?!!e:Ee$3(t)};
  /*! *****************************************************************************
  Copyright (c) Microsoft Corporation.

  Permission to use, copy, modify, and/or distribute this software for any
  purpose with or without fee is hereby granted.

  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
  PERFORMANCE OF THIS SOFTWARE.
  ***************************************************************************** */
  function Fe$3(t,e){var n="function"==typeof Symbol&&t[Symbol.iterator];if(!n)return t;var r,o,i=n.call(t),a=[];try{for(;(void 0===e||e-- >0)&&!(r=i.next()).done;)a.push(r.value);}catch(t){o={error:t};}finally{try{r&&!r.done&&(n=i.return)&&n.call(i);}finally{if(o)throw o.error}}return a}function Ge$3(t){var n=t.selection;if(null==n)return !1;var r=Fe$3(Editor.nodes(t,{match:function(t){return fi$1.checkNodeType(t,"table-cell")}}),1)[0];if(r){var o=Fe$3(r,2)[1],l=Editor.start(t,o);if(Point.equals(n.anchor,l))return !0}return !1}te$3({target:"Array",proto:!0,forced:!Be$3||!_e$3},{concat:function(t){var e,n,r,o,i,a=W$3(this),l=Me$3(a,0),c=0;for(e=-1,r=arguments.length;e<r;e++)if(We$3(i=-1===e?a:arguments[e])){if(c+(o=jt$2(i.length))>9007199254740991)throw TypeError("Maximum allowed index exceeded");for(n=0;n<o;n++,c++)n in i&&De$3(l,c,i[n]);}else {if(c>=9007199254740991)throw TypeError("Maximum allowed index exceeded");De$3(l,c++,i);}return l.length=c,l}});var qe$3=[].join,Ue$3=I$3!=Object,$e$3=He$3("join",",");te$3({target:"Array",proto:!0,forced:Ue$3||!$e$3},{join:function(t){return qe$3.call(R$3(this),void 0===t?",":t)}});var Ke$3,Ye$3={type:"table",renderElem:function(t,e,n){var r=t,o=r.withHeader,i=void 0!==o&&o,a=r.fullWidth,l=void 0!==a&&a,c=[];return i&&c.push("with-header"),l&&c.push("full-width"),jsx("table",{className:c.join(" ")},jsx("tbody",null,e))}},Je$3={type:"table-row",renderElem:function(t,e,n){return jsx("tr",null,e)}},Xe$3={type:"table-cell",renderElem:function(t,e,n){var r=t,o=r.colSpan,i=void 0===o?1:o,a=r.rowSpan;return jsx("td",{colSpan:i,rowSpan:void 0===a?1:a},e)}},Qe$3=Object.keys||function(t){return Rt$3(t,Bt$2)},Ze$3=O$3?Object.defineProperties:function(t,e){X$3(t);for(var n,r=Qe$3(e),o=r.length,i=0;o>i;)Z$3.f(t,n=r[i++],e[n]);return t},tn$1=zt$2("document","documentElement"),en$1=vt$3("IE_PROTO"),nn$1=function(){},rn$1=function(t){return "<script>"+t+"<\/script>"},on$1=function(){try{Ke$3=document.domain&&new ActiveXObject("htmlfile");}catch(t){}var t,e;on$1=Ke$3?function(t){t.write(rn$1("")),t.close();var e=t.parentWindow.Object;return t=null,e}(Ke$3):((e=$$3("iframe")).style.display="none",tn$1.appendChild(e),e.src=String("javascript:"),(t=e.contentWindow.document).open(),t.write(rn$1("document.F=Object")),t.close(),t.F);for(var n=Bt$2.length;n--;)delete on$1.prototype[Bt$2[n]];return on$1()};yt$3[en$1]=!0;var an$1=Object.create||function(t,e){var n;return null!==t?(nn$1.prototype=X$3(t),n=new nn$1,nn$1.prototype=null,n[en$1]=t):n=on$1(),void 0===e?n:Ze$3(n,e)},ln$1=ve$3("unscopables"),cn$1=Array.prototype;null==cn$1[ln$1]&&Z$3.f(cn$1,ln$1,{configurable:!0,value:an$1(null)});var un$1,sn$1=Oe$3.findIndex,fn$1=!0;"findIndex"in[]&&Array(1).findIndex((function(){fn$1=!1;})),te$3({target:"Array",proto:!0,forced:fn$1},{findIndex:function(t){return sn$1(this,t,arguments.length>1?arguments[1]:void 0)}}),un$1="findIndex",cn$1[ln$1][un$1]=!0;var dn$1={type:"table",elemToHtml:function(t,e,n){var r=t.fullWidth,o="";return void 0!==r&&r&&(o+="width: 100%;"),'<table style="'+o+'"><tbody>'+e+"</tbody></table>"}},hn$1={type:"table-row",elemToHtml:function(t,e,n){return "<tr>"+e+"</tr>"}},pn$1={type:"table-cell",elemToHtml:function(t,n,r){var o=t,i=o.colSpan,a=void 0===i?1:i,l=o.rowSpan,c=void 0===l?1:l,u="td",s=fi$1.getParentNode(r,t);if(null==s)throw new Error("Cannot get table row node by cell node "+JSON.stringify(t));var f=fi$1.getParentNode(r,s);if(null==f)throw new Error("Cannot get table node by cell node "+JSON.stringify(t));return f.withHeader&&0===f.children.findIndex((function(t){return t===s}))&&(u="th"),"<"+u+' colSpan="'+a+'" rowSpan="'+c+'">'+n+"</"+u+">"}},vn$1=function(){var t=X$3(this),e="";return t.global&&(e+="g"),t.ignoreCase&&(e+="i"),t.multiline&&(e+="m"),t.dotAll&&(e+="s"),t.unicode&&(e+="u"),t.sticky&&(e+="y"),e};function yn$1(t,e){return RegExp(t,e)}var gn$1,bn$1,mn$1={UNSUPPORTED_Y:z$3((function(){var t=yn$1("a","y");return t.lastIndex=2,null!=t.exec("abcd")})),BROKEN_CARET:z$3((function(){var t=yn$1("^r","gy");return t.lastIndex=2,null!=t.exec("str")}))},wn$1=RegExp.prototype.exec,Sn$1=st$3("native-string-replace",String.prototype.replace),xn$1=wn$1,Tn$1=(gn$1=/a/,bn$1=/b*/g,wn$1.call(gn$1,"a"),wn$1.call(bn$1,"a"),0!==gn$1.lastIndex||0!==bn$1.lastIndex),En$1=mn$1.UNSUPPORTED_Y||mn$1.BROKEN_CARET,Nn$1=void 0!==/()??/.exec("")[1];(Tn$1||Nn$1||En$1)&&(xn$1=function(t){var e,n,r,o,i=this,a=En$1&&i.sticky,l=vn$1.call(i),c=i.source,u=0,s=t;return a&&(-1===(l=l.replace("y","")).indexOf("g")&&(l+="g"),s=String(t).slice(i.lastIndex),i.lastIndex>0&&(!i.multiline||i.multiline&&"\n"!==t[i.lastIndex-1])&&(c="(?: "+c+")",s=" "+s,u++),n=new RegExp("^(?:"+c+")",l)),Nn$1&&(n=new RegExp("^"+c+"$(?!\\s)",l)),Tn$1&&(e=i.lastIndex),r=wn$1.call(a?n:i,s),a?r?(r.input=r.input.slice(u),r[0]=r[0].slice(u),r.index=i.lastIndex,i.lastIndex+=r[0].length):i.lastIndex=0:Tn$1&&r&&(i.lastIndex=i.global?r.index+r[0].length:e),Nn$1&&r&&r.length>1&&Sn$1.call(r[0],n,(function(){for(o=1;o<arguments.length-2;o++)void 0===arguments[o]&&(r[o]=void 0);})),r});te$3({target:"RegExp",proto:!0,forced:/./.exec!==xn$1},{exec:xn$1});var Mn$1={};Mn$1[ve$3("toStringTag")]="z";var Vn$1="[object z]"===String(Mn$1),zn$1=ve$3("toStringTag"),On$1="Arguments"==A$3(function(){return arguments}()),Hn$1=Vn$1?A$3:function(t){var e,n,r;return void 0===t?"Undefined":null===t?"Null":"string"==typeof(n=function(t,e){try{return t[e]}catch(t){}}(e=Object(t),zn$1))?n:On$1?A$3(e):"Object"==(r=A$3(e))&&"function"==typeof e.callee?"Arguments":r},Ln$1=Vn$1?{}.toString:function(){return "[object "+Hn$1(this)+"]"};Vn$1||Nt$3(Object.prototype,"toString",Ln$1,{unsafe:!0});var Cn$1=RegExp.prototype,jn$1=Cn$1.toString,Pn$1=z$3((function(){return "/a/b"!=jn$1.call({source:"a",flags:"b"})})),An$1="toString"!=jn$1.name;(Pn$1||An$1)&&Nt$3(RegExp.prototype,"toString",(function(){var t=X$3(this),e=String(t.source),n=t.flags;return "/"+e+"/"+String(void 0===n&&t instanceof RegExp&&!("flags"in Cn$1)?vn$1.call(t):n)}),{unsafe:!0}),$$6.fn.append=append,$$6.fn.on=on$4,$$6.fn.focus=focus,$$6.fn.attr=attr,$$6.fn.val=val,$$6.fn.html=html,$$6.fn.dataset=dataset,$$6.fn.addClass=addClass,$$6.fn.removeClass=removeClass,$$6.fn.children=children,$$6.fn.each=each;var Dn$1=ke$3("slice"),In$1=ve$3("species"),kn$1=[].slice,Rn$1=Math.max;te$3({target:"Array",proto:!0,forced:!Dn$1},{slice:function(t,e){var n,r,o,i=R$3(this),a=jt$2(i.length),l=Dt$3(t,a),c=Dt$3(void 0===e?a:e,a);if(Ee$3(i)&&("function"!=typeof(n=i.constructor)||n!==Array&&!Ee$3(n.prototype)?B$3(n)&&null===(n=n[In$1])&&(n=void 0):n=void 0,n===Array||void 0===n))return kn$1.call(i,l,c);for(r=new(void 0===n?Array:n)(Rn$1(c-l,0)),o=0;l<c;l++,o++)l in i&&De$3(r,o,i[l]);return r.length=o,r}});var Bn$1=function(){function t(){this.title=qc$1("tableModule.insertTable"),this.iconSvg='<svg viewBox="0 0 1024 1024"><path d="M0 64v896h1024V64H0z m384 576v-192h256v192h-256z m256 64v192h-256v-192h256z m0-512v192h-256V192h256zM320 192v192H64V192h256z m-256 256h256v192H64v-192z m640 0h256v192h-256v-192z m0-64V192h256v192h-256zM64 704h256v192H64v-192z m640 192v-192h256v192h-256z"></path></svg>',this.tag="button",this.showDropPanel=!0,this.$content=null;}return t.prototype.getValue=function(t){return ""},t.prototype.isActive=function(t){return !1},t.prototype.exec=function(t,e){},t.prototype.isDisabled=function(t){var n=t.selection;return null==n||(!Range.isCollapsed(n)||null!=Fe$3(Editor.nodes(t,{match:function(t){return fi$1.checkNodeType(t,"table")},universal:!0}),1)[0])},t.prototype.getPanelContentElem=function(t){var e=this;if(this.$content)return this.$content;for(var n=$$6('<div class="w-e-panel-content-table"></div>'),r=$$6("<table></table>"),o=0;o<10;o++){for(var i=$$6("<tr></tr>"),a=0;a<10;a++){var l=$$6("<td></td>");l.attr("data-x",a.toString()),l.attr("data-y",o.toString()),i.append(l),l.on("mouseenter",(function(t){var e=t.target;if(null!=e){var n=$$6(e).dataset(),o=n.x,i=n.y;r.children().each((function(t){$$6(t).children().each((function(t){var e=$$6(t),n=e.dataset(),r=n.x,a=n.y;r<=o&&a<=i?e.addClass("active"):e.removeClass("active");}));}));}})),l.on("mousedown",(function(n){n.preventDefault();var r=n.target;if(null!=r){var o=$$6(r).dataset(),i=o.x,a=o.y;e.insertTable(t,a+1,i+1);}}));}r.append(i);}return n.append(r),this.$content=n,n},t.prototype.insertTable=function(t,n,o){var i=parseInt(n,10),a=parseInt(o,10);if(i&&a&&!(i<=0||a<=0)){var l=fi$1.getSelectedNodeByType(t,"paragraph");l&&""===Node$1.string(l)&&Transforms.removeNodes(t,{mode:"highest"});var u=function(t,e){for(var n=[],r=0;r<t;r++){for(var o=[],i=0;i<e;i++)o.push({type:"table-cell",children:[{text:""}]});n.push({type:"table-row",children:o});}return {type:"table",withHeader:!0,children:n}}(i,a);Transforms.insertNodes(t,u,{mode:"highest"});}},t}(),_n$1=function(){function t(){this.title=qc$1("tableModule.deleteTable"),this.iconSvg='<svg viewBox="0 0 1024 1024"><path d="M826.8032 356.5312c-19.328 0-36.3776 15.6928-36.3776 35.0464v524.2624c0 19.328-16 34.56-35.328 34.56H264.9344c-19.328 0-35.5072-15.3088-35.5072-34.56V390.0416c0-19.328-14.1568-35.0464-33.5104-35.0464s-33.5104 15.6928-33.5104 35.0464V915.712c0 57.9328 44.6208 108.288 102.528 108.288H755.2c57.9328 0 108.0832-50.4576 108.0832-108.288V391.4752c-0.1024-19.2512-17.1264-34.944-36.48-34.944z" p-id="9577"></path><path d="M437.1712 775.7568V390.6048c0-19.328-14.1568-35.0464-33.5104-35.0464s-33.5104 15.616-33.5104 35.0464v385.152c0 19.328 14.1568 35.0464 33.5104 35.0464s33.5104-15.7184 33.5104-35.0464zM649.7024 775.7568V390.6048c0-19.328-17.0496-35.0464-36.3776-35.0464s-36.3776 15.616-36.3776 35.0464v385.152c0 19.328 17.0496 35.0464 36.3776 35.0464s36.3776-15.7184 36.3776-35.0464zM965.0432 217.0368h-174.6176V145.5104c0-57.9328-47.2064-101.76-104.6528-101.76h-350.976c-57.8304 0-105.3952 43.8528-105.3952 101.76v71.5264H54.784c-19.4304 0-35.0464 14.1568-35.0464 33.5104 0 19.328 15.616 33.5104 35.0464 33.5104h910.3616c19.328 0 35.0464-14.1568 35.0464-33.5104 0-19.3536-15.6928-33.5104-35.1488-33.5104z m-247.3728 0H297.3952V145.5104c0-19.328 18.2016-34.7648 37.4272-34.7648h350.976c19.1488 0 31.872 15.1296 31.872 34.7648v71.5264z"></path></svg>',this.tag="button";}return t.prototype.getValue=function(t){return ""},t.prototype.isActive=function(t){return !1},t.prototype.isDisabled=function(t){return null==t.selection||null==fi$1.getSelectedNodeByType(t,"table")},t.prototype.exec=function(t,e){this.isDisabled(t)||Transforms.removeNodes(t,{mode:"highest"});},t}(),Wn$1=function(){function t(){this.title=qc$1("tableModule.insertRow"),this.iconSvg='<svg viewBox="0 0 1048 1024"><path d="M707.7888 521.0112h-147.456v-147.456H488.2432v147.456h-147.456v68.8128h147.456v147.456h72.0896v-147.456h147.456zM0 917.504V0h1048.576v917.504H0zM327.68 65.536H65.536v196.608H327.68V65.536z m327.68 0H393.216v196.608h262.144V65.536z m327.68 0h-262.144v196.608h262.144V65.536z m0 258.8672H65.536v462.0288H983.04V324.4032z"></path></svg>',this.tag="button";}return t.prototype.getValue=function(t){return ""},t.prototype.isActive=function(t){return !1},t.prototype.isDisabled=function(t){var n=t.selection;return null==n||(!Range.isCollapsed(n)||null==fi$1.getSelectedNodeByType(t,"table"))},t.prototype.exec=function(t,n){if(!this.isDisabled(t)){var o=Fe$3(Editor.nodes(t,{match:function(t){return fi$1.checkNodeType(t,"table-cell")},universal:!0}),1),a=Fe$3(o[0],2),l=a[0],c=a[1],s=fi$1.getParentNode(t,l),f=(null==s?void 0:s.children.length)||0;if(0!==f){for(var d={type:"table-row",children:[]},h=0;h<f;h++){d.children.push({type:"table-cell",children:[{text:""}]});}var p=Path.parent(c),v=Path.next(p);Transforms.insertNodes(t,d,{at:v});}}},t}(),Fn$1=function(){function t(){this.title=qc$1("tableModule.deleteRow"),this.iconSvg='<svg viewBox="0 0 1048 1024"><path d="M907.6736 586.5472L747.1104 425.984l163.84-163.84-78.6432-78.6432-163.84 163.84L507.904 186.7776 429.2608 262.144l163.84 163.84-167.1168 167.1168 78.6432 78.6432 167.1168-167.1168 160.5632 160.5632 75.3664-78.6432zM0 917.504V0h1048.576v917.504H0z m983.04-327.68h-22.9376l-65.536-65.536H983.04V327.68h-91.7504l65.536-65.536h26.2144V65.536H65.536v196.608h317.8496l65.536 65.536H65.536v196.608h380.1088l-65.536 65.536H65.536v196.608H983.04v-196.608z"></path></svg>',this.tag="button";}return t.prototype.getValue=function(t){return ""},t.prototype.isActive=function(t){return !1},t.prototype.isDisabled=function(t){var n=t.selection;return null==n||(!Range.isCollapsed(n)||null==fi$1.getSelectedNodeByType(t,"table-row"))},t.prototype.exec=function(t,n){if(!this.isDisabled(t)){var o=Fe$3(Editor.nodes(t,{match:function(t){return fi$1.checkNodeType(t,"table-row")},universal:!0}),1),a=Fe$3(o[0],2),l=a[0],c=a[1],u=fi$1.getParentNode(t,l);((null==u?void 0:u.children.length)||0)<=1?Transforms.removeNodes(t,{mode:"highest"}):Transforms.removeNodes(t,{at:c});}},t}(),Gn$1=function(){function t(){this.title=qc$1("tableModule.insertCol"),this.iconSvg='<svg viewBox="0 0 1048 1024"><path d="M327.68 193.3312v186.7776H140.9024v91.7504H327.68v186.7776h88.4736V471.8592h190.0544V380.1088H416.1536V193.3312zM0 917.504V0h1048.576v917.504H0zM655.36 65.536H65.536v720.896H655.36V65.536z m327.68 0h-262.144v196.608h262.144V65.536z m0 262.144h-262.144v196.608h262.144V327.68z m0 262.144h-262.144v196.608h262.144v-196.608z"></path></svg>',this.tag="button";}return t.prototype.getValue=function(t){return ""},t.prototype.isActive=function(t){return !1},t.prototype.isDisabled=function(t){var n=t.selection;return null==n||(!Range.isCollapsed(n)||null==fi$1.getSelectedNodeByType(t,"table"))},t.prototype.exec=function(t,n){if(!this.isDisabled(t)){var a=Fe$3(Editor.nodes(t,{match:function(t){return fi$1.checkNodeType(t,"table-cell")},universal:!0}),1),l=Fe$3(a[0],2),c=l[0],u=l[1],s=u.slice(0,1);fi$1.recordChangingPath(t,s);var f=fi$1.getParentNode(t,c);if(null!=f){var d=fi$1.getParentNode(t,f);if(null!=d)(d.children||[]).forEach((function(n){Element$1.isElement(n)&&(n.children||[]).forEach((function(n){var o=fi$1.findPath(t,n);if(o.length===u.length&&lodash_isequal(o.slice(-1),u.slice(-1))){Transforms.insertNodes(t,{type:"table-cell",children:[{text:""}]},{at:o});}}));})),fi$1.deleteChangingPath(t);}}},t}(),qn$1=function(){function t(){this.title=qc$1("tableModule.deleteCol"),this.iconSvg='<svg viewBox="0 0 1048 1024"><path d="M327.68 510.976L393.216 445.44v-13.1072L327.68 366.7968V510.976z m327.68-78.4384l65.536-65.536V507.904L655.36 442.368v-9.8304z m393.216 484.9664V0H0v917.504h1048.576z m-65.536-131.072h-262.144v-52.4288l-13.1072 13.1072-52.4288-52.4288v91.7504H393.216v-91.7504l-52.4288 52.4288-13.1072-13.1072v52.4288H65.536V65.536H327.68v121.2416l36.0448-36.0448 29.4912 29.4912V62.2592h262.144V180.224l49.152-49.152 16.384 16.384V62.2592h262.144V786.432z m-294.912-108.1344l-160.5632-160.5632-167.1168 167.1168-78.6432-78.6432 167.1168-167.1168L288.3584 278.528l78.6432-78.6432 160.5632 160.5632 163.84-163.84 78.6432 78.6432-163.84 163.84 160.5632 160.5632-78.6432 78.6432z"></path></svg>',this.tag="button";}return t.prototype.getValue=function(t){return ""},t.prototype.isActive=function(t){return !1},t.prototype.isDisabled=function(t){var n=t.selection;return null==n||(!Range.isCollapsed(n)||null==fi$1.getSelectedNodeByType(t,"table-cell"))},t.prototype.exec=function(t,n){if(!this.isDisabled(t)){var a=Fe$3(Editor.nodes(t,{match:function(t){return fi$1.checkNodeType(t,"table-cell")},universal:!0}),1),l=Fe$3(a[0],2),c=l[0],u=l[1],s=fi$1.getParentNode(t,c),f=(null==s?void 0:s.children.length)||0;if(!s||f<=1)Transforms.removeNodes(t,{mode:"highest"});else {var d=u.slice(0,1);fi$1.recordChangingPath(t,d);var h=fi$1.getParentNode(t,s);if(null!=h)(h.children||[]).forEach((function(n){Element$1.isElement(n)&&(n.children||[]).forEach((function(n){var o=fi$1.findPath(t,n);o.length===u.length&&lodash_isequal(o.slice(-1),u.slice(-1))&&Transforms.removeNodes(t,{at:o});}));})),fi$1.deleteChangingPath(t);}}},t}(),Un$1=function(){function t(){this.title=qc$1("tableModule.header"),this.iconSvg='<svg viewBox="0 0 1024 1024"><path d="M704 128l-64 0L384 128 320 128 0 128l0 256 0 64 0 192 0 64 0 256 320 0 64 0 256 0 64 0 320 0 0-256 0-64L1024 448 1024 384 1024 128 704 128zM640 640 384 640 384 448l256 0L640 640zM64 448l256 0 0 192L64 640 64 448zM320 896 64 896l0-192 256 0L320 896zM640 896 384 896l0-192 256 0L640 896zM960 896l-256 0 0-192 256 0L960 896zM960 640l-256 0L704 448l256 0L960 640z"></path></svg>',this.tag="button";}return t.prototype.getValue=function(t){var n=fi$1.getSelectedNodeByType(t,"table");return null!=n&&!!n.withHeader},t.prototype.isActive=function(t){return !!this.getValue(t)},t.prototype.isDisabled=function(t){var n=t.selection;return null==n||(!Range.isCollapsed(n)||null==fi$1.getSelectedNodeByType(t,"table"))},t.prototype.exec=function(t,e){if(!this.isDisabled(t)){var n={withHeader:!e||null};Transforms.setNodes(t,n,{mode:"highest"});}},t}(),$n$1=function(){function t(){this.title=qc$1("tableModule.widthAuto"),this.iconSvg='<svg viewBox="0 0 1228 1024"><path d="M862.514337 563.200461H404.581995v121.753478a13.311987 13.311987 0 0 1-6.655993 11.468789 10.23999 10.23999 0 0 1-12.083188-1.433599l-204.799795-179.199821a13.721586 13.721586 0 0 1 0-20.479979l204.799795-179.302221a10.23999 10.23999 0 0 1 12.185588-1.535998 13.209587 13.209587 0 0 1 6.553593 11.673588v115.097485h457.932342V319.693504a11.571188 11.571188 0 0 1 18.841582-10.239989l204.799795 179.19982a13.721586 13.721586 0 0 1 0 20.47998l-204.799795 179.199821a10.23999 10.23999 0 0 1-12.185588 1.535998 13.311987 13.311987 0 0 1-6.655994-11.571188V563.200461zM136.499064 14.951409v993.893406a15.257585 15.257585 0 0 1-15.155185 15.052785H15.155185A15.155185 15.155185 0 0 1 0 1008.844815V14.951409a15.257585 15.257585 0 0 1 15.155185-15.052785h106.086294a15.155185 15.155185 0 0 1 15.257585 15.155185zM1228.798771 14.951409v993.893406a15.257585 15.257585 0 0 1-15.155185 15.052785h-106.188693a15.155185 15.155185 0 0 1-15.155185-15.052785V14.951409a15.257585 15.257585 0 0 1 15.155185-15.052785h106.086293A15.155185 15.155185 0 0 1 1228.798771 15.053809z"></path></svg>',this.tag="button";}return t.prototype.getValue=function(t){var n=fi$1.getSelectedNodeByType(t,"table");return null!=n&&!!n.fullWidth},t.prototype.isActive=function(t){return !!this.getValue(t)},t.prototype.isDisabled=function(t){var n=t.selection;return null==n||(!Range.isCollapsed(n)||null==fi$1.getSelectedNodeByType(t,"table"))},t.prototype.exec=function(t,e){if(!this.isDisabled(t)){var n={fullWidth:!e||null};Transforms.setNodes(t,n,{mode:"highest"});}},t}(),Kn$1={renderElems:[Ye$3,Je$3,Xe$3],elemsToHtml:[dn$1,hn$1,pn$1],menus:[{key:"insertTable",factory:function(){return new Bn$1}},{key:"deleteTable",factory:function(){return new _n$1}},{key:"insertTableRow",factory:function(){return new Wn$1}},{key:"deleteTableRow",factory:function(){return new Fn$1}},{key:"insertTableCol",factory:function(){return new Gn$1}},{key:"deleteTableCol",factory:function(){return new qn$1}},{key:"tableHeader",factory:function(){return new Un$1}},{key:"tableFullWidth",factory:function(){return new $n$1}}],editorPlugin:function(t){var n=t.insertBreak,a=t.deleteBackward,l=t.deleteForward,c=t.normalizeNode,u=t.insertData,s=t;return s.insertBreak=function(){null==fi$1.getSelectedNodeByType(s,"table")?n():s.insertText("\n");},s.deleteBackward=function(t){Ge$3(s)||a(t);},s.deleteForward=function(t){Ge$3(s)||l(t);},s.normalizeNode=function(t){var n=Fe$3(t,2),i=n[0],a=n[1];if("table"!==fi$1.getNodeType(i))return c([i,a]);var l=i.children,u=void 0===l?[]:l,f=s.children||[],d=f.length;if(f[0]===i){var h={type:"paragraph",children:[{text:""}]};Transforms.insertNodes(s,h,{at:a});}if(f[d-1]===i){h={type:"paragraph",children:[{text:""}]};Transforms.insertNodes(s,h,{at:[a[0]+1]});}var p=f[a[0]+1]||{};if(Element$1.isElement(p)){var v=p.type,y=void 0===v?"":v;if("paragraph"!==y&&"blockquote"!==y&&!y.startsWith("header")){h={type:"paragraph",children:[{text:""}]};var g=[a[0]+1];Transforms.insertNodes(s,h,{at:g});}}var b=f[a[0]-1]||{};if(Element$1.isElement(b)&&("table"===fi$1.getNodeType(b)||s.isVoid(b))){h={type:"paragraph",children:[{text:""}]};Transforms.insertNodes(s,h,{at:a});}if(fi$1.isChangingPath(s,a))return c([i,a]);var m=0;u.forEach((function(t){if(Element$1.isElement(t)){var e=(t.children||[]).length;m<e&&(m=e);}})),u.forEach((function(t,e){if(Element$1.isElement(t)){var n=t.children||[],i=a.concat(e);if(n.length<m)for(var l=n.length;l<m;l++){var c=i.concat(l);Transforms.insertNodes(s,{type:"table-cell",children:[{text:""}]},{at:c});}n.forEach((function(t,e){if(Element$1.isElement(t)&&"table-cell"!==t.type){var n=i.concat(e);Transforms.setNodes(s,{type:"table-cell"},{at:n});}}));}}));},s.insertData=function(t){if(null!=fi$1.getSelectedNodeByType(s,"table")){var n=t.getData("text/plain");Editor.insertText(s,n);}else u(t);},s}};

  Kc$1("en",{videoModule:{delete:"Delete",insertVideo:"Insert video",videoSrc:"video source",insertPlaceHolder:"video file url, or third-party <iframe>",ok:"Ok"}}),Kc$1("zh-CN",{videoModule:{delete:"删除视频",insertVideo:"插入视频",videoSrc:"视频地址",insertPlaceHolder:"视频文件 url 或第三方 <iframe>",ok:"确定"}});var h$1="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:{};function g$2(t){var e={exports:{}};return t(e,e.exports),e.exports}var y$2=function(t){return t&&t.Math==Math&&t},m$2=y$2("object"==typeof globalThis&&globalThis)||y$2("object"==typeof window&&window)||y$2("object"==typeof self&&self)||y$2("object"==typeof h$1&&h$1)||function(){return this}()||Function("return this")(),b$2=function(t){try{return !!t()}catch(t){return !0}},S$2=!b$2((function(){return 7!=Object.defineProperty({},1,{get:function(){return 7}})[1]})),x$2={}.propertyIsEnumerable,E$2=Object.getOwnPropertyDescriptor,w$2={f:E$2&&!x$2.call({1:2},1)?function(t){var e=E$2(this,t);return !!e&&e.enumerable}:x$2},O$2=function(t,e){return {enumerable:!(1&t),configurable:!(2&t),writable:!(4&t),value:e}},T$2={}.toString,M$2=function(t){return T$2.call(t).slice(8,-1)},P$2="".split,I$2=b$2((function(){return !Object("z").propertyIsEnumerable(0)}))?function(t){return "String"==M$2(t)?P$2.call(t,""):Object(t)}:Object,j$2=function(t){if(null==t)throw TypeError("Can't call method on "+t);return t},A$2=function(t){return I$2(j$2(t))},R$2=function(t){return "object"==typeof t?null!==t:"function"==typeof t},N$2=function(t,e){if(!R$2(t))return t;var r,n;if(e&&"function"==typeof(r=t.toString)&&!R$2(n=r.call(t)))return n;if("function"==typeof(r=t.valueOf)&&!R$2(n=r.call(t)))return n;if(!e&&"function"==typeof(r=t.toString)&&!R$2(n=r.call(t)))return n;throw TypeError("Can't convert object to primitive value")},_$2=function(t){return Object(j$2(t))},k$2={}.hasOwnProperty,V$2=Object.hasOwn||function(t,e){return k$2.call(_$2(t),e)},C$2=m$2.document,$$2=R$2(C$2)&&R$2(C$2.createElement),z$2=!S$2&&!b$2((function(){return 7!=Object.defineProperty((t="div",$$2?C$2.createElement(t):{}),"a",{get:function(){return 7}}).a;var t;})),D$2=Object.getOwnPropertyDescriptor,U$2={f:S$2?D$2:function(t,e){if(t=A$2(t),e=N$2(e,!0),z$2)try{return D$2(t,e)}catch(t){}if(V$2(t,e))return O$2(!w$2.f.call(t,e),t[e])}},H$2=function(t){if(!R$2(t))throw TypeError(String(t)+" is not an object");return t},L$2=Object.defineProperty,B$2={f:S$2?L$2:function(t,e,r){if(H$2(t),e=N$2(e,!0),H$2(r),z$2)try{return L$2(t,e,r)}catch(t){}if("get"in r||"set"in r)throw TypeError("Accessors not supported");return "value"in r&&(t[e]=r.value),t}},W$2=S$2?function(t,e,r){return B$2.f(t,e,O$2(1,r))}:function(t,e,r){return t[e]=r,t},F$2=function(t,e){try{W$2(m$2,t,e);}catch(r){m$2[t]=e;}return e},G$2=m$2["__core-js_shared__"]||F$2("__core-js_shared__",{}),K$2=Function.toString;"function"!=typeof G$2.inspectSource&&(G$2.inspectSource=function(t){return K$2.call(t)});var Y$2,q$2,X$2,J$2,Q$2=G$2.inspectSource,Z$2=m$2.WeakMap,tt$2="function"==typeof Z$2&&/native code/.test(Q$2(Z$2)),et$2=g$2((function(t){(t.exports=function(t,e){return G$2[t]||(G$2[t]=void 0!==e?e:{})})("versions",[]).push({version:"3.13.1",mode:"global",copyright:"© 2021 Denis Pushkarev (zloirock.ru)"});})),rt$2=0,nt$2=Math.random(),ot$2=function(t){return "Symbol("+String(void 0===t?"":t)+")_"+(++rt$2+nt$2).toString(36)},it$2=et$2("keys"),ct$2={},at$2=m$2.WeakMap;if(tt$2||G$2.state){var ut$2=G$2.state||(G$2.state=new at$2),lt$2=ut$2.get,ft$2=ut$2.has,st$2=ut$2.set;Y$2=function(t,e){if(ft$2.call(ut$2,t))throw new TypeError("Object already initialized");return e.facade=t,st$2.call(ut$2,t,e),e},q$2=function(t){return lt$2.call(ut$2,t)||{}},X$2=function(t){return ft$2.call(ut$2,t)};}else {var dt$2=it$2[J$2="state"]||(it$2[J$2]=ot$2(J$2));ct$2[dt$2]=!0,Y$2=function(t,e){if(V$2(t,dt$2))throw new TypeError("Object already initialized");return e.facade=t,W$2(t,dt$2,e),e},q$2=function(t){return V$2(t,dt$2)?t[dt$2]:{}},X$2=function(t){return V$2(t,dt$2)};}var pt$2,vt$2,ht$2={set:Y$2,get:q$2,has:X$2,enforce:function(t){return X$2(t)?q$2(t):Y$2(t,{})},getterFor:function(t){return function(e){var r;if(!R$2(e)||(r=q$2(e)).type!==t)throw TypeError("Incompatible receiver, "+t+" required");return r}}},gt$2=g$2((function(t){var e=ht$2.get,r=ht$2.enforce,n=String(String).split("String");(t.exports=function(t,e,o,i){var c,a=!!i&&!!i.unsafe,u=!!i&&!!i.enumerable,l=!!i&&!!i.noTargetGet;"function"==typeof o&&("string"!=typeof e||V$2(o,"name")||W$2(o,"name",e),(c=r(o)).source||(c.source=n.join("string"==typeof e?e:""))),t!==m$2?(a?!l&&t[e]&&(u=!0):delete t[e],u?t[e]=o:W$2(t,e,o)):u?t[e]=o:F$2(e,o);})(Function.prototype,"toString",(function(){return "function"==typeof this&&e(this).source||Q$2(this)}));})),yt$2=m$2,mt$2=function(t){return "function"==typeof t?t:void 0},bt$2=function(t,e){return arguments.length<2?mt$2(yt$2[t])||mt$2(m$2[t]):yt$2[t]&&yt$2[t][e]||m$2[t]&&m$2[t][e]},St$2=Math.ceil,xt$2=Math.floor,Et$2=function(t){return isNaN(t=+t)?0:(t>0?xt$2:St$2)(t)},wt$2=Math.min,Ot$2=function(t){return t>0?wt$2(Et$2(t),9007199254740991):0},Tt$2=Math.max,Mt$2=Math.min,Pt$2=function(t,e){var r=Et$2(t);return r<0?Tt$2(r+e,0):Mt$2(r,e)},It$2=function(t){return function(e,r,n){var o,i=A$2(e),c=Ot$2(i.length),a=Pt$2(n,c);if(t&&r!=r){for(;c>a;)if((o=i[a++])!=o)return !0}else for(;c>a;a++)if((t||a in i)&&i[a]===r)return t||a||0;return !t&&-1}},jt$1={includes:It$2(!0),indexOf:It$2(!1)}.indexOf,At$2=["constructor","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","toLocaleString","toString","valueOf"].concat("length","prototype"),Rt$2={f:Object.getOwnPropertyNames||function(t){return function(t,e){var r,n=A$2(t),o=0,i=[];for(r in n)!V$2(ct$2,r)&&V$2(n,r)&&i.push(r);for(;e.length>o;)V$2(n,r=e[o++])&&(~jt$1(i,r)||i.push(r));return i}(t,At$2)}},Nt$2={f:Object.getOwnPropertySymbols},_t$2=bt$2("Reflect","ownKeys")||function(t){var e=Rt$2.f(H$2(t)),r=Nt$2.f;return r?e.concat(r(t)):e},kt$2=function(t,e){for(var r=_t$2(e),n=B$2.f,o=U$2.f,i=0;i<r.length;i++){var c=r[i];V$2(t,c)||n(t,c,o(e,c));}},Vt$1=/#|\.prototype\./,Ct$2=function(t,e){var r=zt$1[$t$1(t)];return r==Ut$1||r!=Dt$2&&("function"==typeof e?b$2(e):!!e)},$t$1=Ct$2.normalize=function(t){return String(t).replace(Vt$1,".").toLowerCase()},zt$1=Ct$2.data={},Dt$2=Ct$2.NATIVE="N",Ut$1=Ct$2.POLYFILL="P",Ht$1=Ct$2,Lt$2=U$2.f,Bt$1=function(t,e){var r,n,o,i,c,a=t.target,u=t.global,l=t.stat;if(r=u?m$2:l?m$2[a]||F$2(a,{}):(m$2[a]||{}).prototype)for(n in e){if(i=e[n],o=t.noTargetGet?(c=Lt$2(r,n))&&c.value:r[n],!Ht$1(u?n:a+(l?".":"#")+n,t.forced)&&void 0!==o){if(typeof i==typeof o)continue;kt$2(i,o);}(t.sham||o&&o.sham)&&W$2(i,"sham",!0),gt$2(r,n,i,t);}},Wt$1=bt$2("navigator","userAgent")||"",Ft$2=m$2.process,Gt$1=Ft$2&&Ft$2.versions,Kt$1=Gt$1&&Gt$1.v8;Kt$1?vt$2=(pt$2=Kt$1.split("."))[0]<4?1:pt$2[0]+pt$2[1]:Wt$1&&(!(pt$2=Wt$1.match(/Edge\/(\d+)/))||pt$2[1]>=74)&&(pt$2=Wt$1.match(/Chrome\/(\d+)/))&&(vt$2=pt$2[1]);var Yt$1,qt$1=vt$2&&+vt$2,Xt$1=!!Object.getOwnPropertySymbols&&!b$2((function(){var t=Symbol();return !String(t)||!(Object(t)instanceof Symbol)||!Symbol.sham&&qt$1&&qt$1<41})),Jt$1=Xt$1&&!Symbol.sham&&"symbol"==typeof Symbol.iterator,Qt$1=et$2("wks"),Zt$1=m$2.Symbol,te$2=Jt$1?Zt$1:Zt$1&&Zt$1.withoutSetter||ot$2,ee$2=function(t){return V$2(Qt$1,t)&&(Xt$1||"string"==typeof Qt$1[t])||(Xt$1&&V$2(Zt$1,t)?Qt$1[t]=Zt$1[t]:Qt$1[t]=te$2("Symbol."+t)),Qt$1[t]},re$2=ee$2("match"),ne$2=function(t){if(function(t){var e;return R$2(t)&&(void 0!==(e=t[re$2])?!!e:"RegExp"==M$2(t))}(t))throw TypeError("The method doesn't accept regular expressions");return t},oe$2=ee$2("match"),ie$2=U$2.f,ce$2="".startsWith,ae$2=Math.min,ue$2=function(t){var e=/./;try{"/./"[t](e);}catch(r){try{return e[oe$2]=!1,"/./"[t](e)}catch(t){}}return !1}("startsWith");
  /*! *****************************************************************************
  Copyright (c) Microsoft Corporation.

  Permission to use, copy, modify, and/or distribute this software for any
  purpose with or without fee is hereby granted.

  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
  PERFORMANCE OF THIS SOFTWARE.
  ***************************************************************************** */
  function le$2(t,e,r,n){return new(r||(r=Promise))((function(o,i){function c(t){try{u(n.next(t));}catch(t){i(t);}}function a(t){try{u(n.throw(t));}catch(t){i(t);}}function u(t){var e;t.done?o(t.value):(e=t.value,e instanceof r?e:new r((function(t){t(e);}))).then(c,a);}u((n=n.apply(t,e||[])).next());}))}function fe$2(t,e){var r,n,o,i,c={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return i={next:a(0),throw:a(1),return:a(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function a(i){return function(a){return function(i){if(r)throw new TypeError("Generator is already executing.");for(;c;)try{if(r=1,n&&(o=2&i[0]?n.return:i[0]?n.throw||((o=n.return)&&o.call(n),0):n.next)&&!(o=o.call(n,i[1])).done)return o;switch(n=0,o&&(i=[2&i[0],o.value]),i[0]){case 0:case 1:o=i;break;case 4:return c.label++,{value:i[1],done:!1};case 5:c.label++,n=i[1],i=[0];continue;case 7:i=c.ops.pop(),c.trys.pop();continue;default:if(!(o=c.trys,(o=o.length>0&&o[o.length-1])||6!==i[0]&&2!==i[0])){c=0;continue}if(3===i[0]&&(!o||i[1]>o[0]&&i[1]<o[3])){c.label=i[1];break}if(6===i[0]&&c.label<o[1]){c.label=o[1],o=i;break}if(o&&c.label<o[2]){c.label=o[2],c.ops.push(i);break}o[2]&&c.ops.pop(),c.trys.pop();continue}i=e.call(t,c);}catch(t){i=[6,t],n=0;}finally{r=o=0;}if(5&i[0])throw i[1];return {value:i[0]?i[1]:void 0,done:!0}}([i,a])}}}function se$2(t,e){var r="function"==typeof Symbol&&t[Symbol.iterator];if(!r)return t;var n,o,i=r.call(t),c=[];try{for(;(void 0===e||e-- >0)&&!(n=i.next()).done;)c.push(n.value);}catch(t){o={error:t};}finally{try{n&&!n.done&&(r=i.return)&&r.call(i);}finally{if(o)throw o.error}}return c}Bt$1({target:"String",proto:!0,forced:!!(ue$2||(Yt$1=ie$2(String.prototype,"startsWith"),!Yt$1||Yt$1.writable))&&!ue$2},{startsWith:function(t){var e=String(j$2(this));ne$2(t);var r=Ot$2(ae$2(arguments.length>1?arguments[1]:void 0,e.length)),n=String(t);return ce$2?ce$2.call(e,n,r):e.slice(r,r+n.length)===n}});var de$2,pe$2="\t\n\v\f\r                　\u2028\u2029\ufeff",ve$2="["+pe$2+"]",he$2=RegExp("^"+ve$2+ve$2+"*"),ge$2=RegExp(ve$2+ve$2+"*$"),ye$2=function(t){return function(e){var r=String(j$2(e));return 1&t&&(r=r.replace(he$2,"")),2&t&&(r=r.replace(ge$2,"")),r}},me$2={start:ye$2(1),end:ye$2(2),trim:ye$2(3)},be$2=me$2.trim;Bt$1({target:"String",proto:!0,forced:(de$2="trim",b$2((function(){return !!pe$2[de$2]()||"​᠎"!="​᠎"[de$2]()||pe$2[de$2].name!==de$2})))},{trim:function(){return be$2(this)}});var Se$2={type:"video",renderElem:function(t,r,n){var o=t.src,i=void 0===o?"":o,c=fi$1.isNodeSelected(n,t);return 0===i.trim().indexOf("<iframe")?jsx("div",{contentEditable:!1,className:"w-e-textarea-video-container","data-selected":c?"true":"",innerHTML:i}):jsx("div",{contentEditable:!1,className:"w-e-textarea-video-container","data-selected":c?"true":""},jsx("video",{controls:!0},jsx("source",{src:i,type:"video/mp4"}),"Sorry, your browser doesn't support embedded videos.\n 抱歉，浏览器不支持 video 视频"))}};var xe$2={type:"video",elemToHtml:function(t,e,r){var n=t.src,o=void 0===n?"":n,i='<div class="wangeditor-video-container">\n';return 0===o.trim().indexOf("<iframe")?i+=o:i+='<video controls><source src="'+o+'" type="video/mp4"/></video>',i+="\n</div>"}},Ee$2=function(){var t=H$2(this),e="";return t.global&&(e+="g"),t.ignoreCase&&(e+="i"),t.multiline&&(e+="m"),t.dotAll&&(e+="s"),t.unicode&&(e+="u"),t.sticky&&(e+="y"),e};function we$2(t,e){return RegExp(t,e)}var Oe$2,Te$2,Me$2={UNSUPPORTED_Y:b$2((function(){var t=we$2("a","y");return t.lastIndex=2,null!=t.exec("abcd")})),BROKEN_CARET:b$2((function(){var t=we$2("^r","gy");return t.lastIndex=2,null!=t.exec("str")}))},Pe$2=RegExp.prototype.exec,Ie$2=et$2("native-string-replace",String.prototype.replace),je$2=Pe$2,Ae$2=(Oe$2=/a/,Te$2=/b*/g,Pe$2.call(Oe$2,"a"),Pe$2.call(Te$2,"a"),0!==Oe$2.lastIndex||0!==Te$2.lastIndex),Re$2=Me$2.UNSUPPORTED_Y||Me$2.BROKEN_CARET,Ne$2=void 0!==/()??/.exec("")[1];(Ae$2||Ne$2||Re$2)&&(je$2=function(t){var e,r,n,o,i=this,c=Re$2&&i.sticky,a=Ee$2.call(i),u=i.source,l=0,f=t;return c&&(-1===(a=a.replace("y","")).indexOf("g")&&(a+="g"),f=String(t).slice(i.lastIndex),i.lastIndex>0&&(!i.multiline||i.multiline&&"\n"!==t[i.lastIndex-1])&&(u="(?: "+u+")",f=" "+f,l++),r=new RegExp("^(?:"+u+")",a)),Ne$2&&(r=new RegExp("^"+u+"$(?!\\s)",a)),Ae$2&&(e=i.lastIndex),n=Pe$2.call(c?r:i,f),c?n?(n.input=n.input.slice(l),n[0]=n[0].slice(l),n.index=i.lastIndex,i.lastIndex+=n[0].length):i.lastIndex=0:Ae$2&&n&&(i.lastIndex=i.global?n.index+n[0].length:e),Ne$2&&n&&n.length>1&&Ie$2.call(n[0],r,(function(){for(o=1;o<arguments.length-2;o++)void 0===arguments[o]&&(n[o]=void 0);})),n});var _e$2=je$2;Bt$1({target:"RegExp",proto:!0,forced:/./.exec!==_e$2},{exec:_e$2}),$$6.fn.append=append,$$6.fn.on=on$4,$$6.fn.focus=focus,$$6.fn.attr=attr,$$6.fn.val=val,$$6.fn.html=html;var ke$2=Array.isArray||function(t){return "Array"==M$2(t)},Ve$2=function(t,e,r){var n=N$2(e);n in t?B$2.f(t,n,O$2(0,r)):t[n]=r;},Ce$2=ee$2("species"),$e$2=function(t){return qt$1>=51||!b$2((function(){var e=[];return (e.constructor={})[Ce$2]=function(){return {foo:1}},1!==e[t](Boolean).foo}))}("slice"),ze$2=ee$2("species"),De$2=[].slice,Ue$2=Math.max;Bt$1({target:"Array",proto:!0,forced:!$e$2},{slice:function(t,e){var r,n,o,i=A$2(this),c=Ot$2(i.length),a=Pt$2(t,c),u=Pt$2(void 0===e?c:e,c);if(ke$2(i)&&("function"!=typeof(r=i.constructor)||r!==Array&&!ke$2(r.prototype)?R$2(r)&&null===(r=r[ze$2])&&(r=void 0):r=void 0,r===Array||void 0===r))return De$2.call(i,a,u);for(n=new(void 0===r?Array:r)(Ue$2(u-a,0)),o=0;a<u;a++,o++)a in i&&Ve$2(n,o,i[a]);return n.length=o,n}});var He$2={};He$2[ee$2("toStringTag")]="z";var Le$2="[object z]"===String(He$2),Be$2=ee$2("toStringTag"),We$2="Arguments"==M$2(function(){return arguments}()),Fe$2=Le$2?M$2:function(t){var e,r,n;return void 0===t?"Undefined":null===t?"Null":"string"==typeof(r=function(t,e){try{return t[e]}catch(t){}}(e=Object(t),Be$2))?r:We$2?M$2(e):"Object"==(n=M$2(e))&&"function"==typeof e.callee?"Arguments":n},Ge$2=Le$2?{}.toString:function(){return "[object "+Fe$2(this)+"]"};Le$2||gt$2(Object.prototype,"toString",Ge$2,{unsafe:!0});var Ke$2=RegExp.prototype,Ye$2=Ke$2.toString,qe$2=b$2((function(){return "/a/b"!=Ye$2.call({source:"a",flags:"b"})})),Xe$2="toString"!=Ye$2.name;(qe$2||Xe$2)&&gt$2(RegExp.prototype,"toString",(function(){var t=H$2(this),e=String(t.source),r=t.flags;return "/"+e+"/"+String(void 0===r&&t instanceof RegExp&&!("flags"in Ke$2)?Ee$2.call(t):r)}),{unsafe:!0});var Je$2=ee$2("species"),Qe$2=RegExp.prototype,Ze$2=!b$2((function(){var t=/./;return t.exec=function(){var t=[];return t.groups={a:"7"},t},"7"!=="".replace(t,"$<a>")})),tr$1="$0"==="a".replace(/./,"$0"),er$1=ee$2("replace"),rr$1=!!/./[er$1]&&""===/./[er$1]("a","$0"),nr$1=!b$2((function(){var t=/(?:)/,e=t.exec;t.exec=function(){return e.apply(this,arguments)};var r="ab".split(t);return 2!==r.length||"a"!==r[0]||"b"!==r[1]})),or$1=function(t){return function(e,r){var n,o,i=String(j$2(e)),c=Et$2(r),a=i.length;return c<0||c>=a?t?"":void 0:(n=i.charCodeAt(c))<55296||n>56319||c+1===a||(o=i.charCodeAt(c+1))<56320||o>57343?t?i.charAt(c):n:t?i.slice(c,c+2):o-56320+(n-55296<<10)+65536}},ir$1={codeAt:or$1(!1),charAt:or$1(!0)}.charAt,cr$1=function(t,e,r){return e+(r?ir$1(t,e).length:1)},ar$1=Math.floor,ur$1="".replace,lr$1=/\$([$&'`]|\d{1,2}|<[^>]*>)/g,fr$1=/\$([$&'`]|\d{1,2})/g,sr$1=function(t,e,r,n,o,i){var c=r+t.length,a=n.length,u=fr$1;return void 0!==o&&(o=_$2(o),u=lr$1),ur$1.call(i,u,(function(i,u){var l;switch(u.charAt(0)){case"$":return "$";case"&":return t;case"`":return e.slice(0,r);case"'":return e.slice(c);case"<":l=o[u.slice(1,-1)];break;default:var f=+u;if(0===f)return i;if(f>a){var s=ar$1(f/10);return 0===s?i:s<=a?void 0===n[s-1]?u.charAt(1):n[s-1]+u.charAt(1):i}l=n[f-1];}return void 0===l?"":l}))},dr$1=function(t,e){var r=t.exec;if("function"==typeof r){var n=r.call(t,e);if("object"!=typeof n)throw TypeError("RegExp exec method returned something other than an Object or null");return n}if("RegExp"!==M$2(t))throw TypeError("RegExp#exec called on incompatible receiver");return _e$2.call(t,e)},pr$1=Math.max,vr$1=Math.min;!function(t,e,r,n){var o=ee$2(t),i=!b$2((function(){var e={};return e[o]=function(){return 7},7!=""[t](e)})),c=i&&!b$2((function(){var e=!1,r=/a/;return "split"===t&&((r={}).constructor={},r.constructor[Je$2]=function(){return r},r.flags="",r[o]=/./[o]),r.exec=function(){return e=!0,null},r[o](""),!e}));if(!i||!c||"replace"===t&&(!Ze$2||!tr$1||rr$1)||"split"===t&&!nr$1){var a=/./[o],u=r(o,""[t],(function(t,e,r,n,o){var c=e.exec;return c===_e$2||c===Qe$2.exec?i&&!o?{done:!0,value:a.call(e,r,n)}:{done:!0,value:t.call(r,e,n)}:{done:!1}}),{REPLACE_KEEPS_$0:tr$1,REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE:rr$1}),l=u[0],f=u[1];gt$2(String.prototype,t,l),gt$2(Qe$2,o,2==e?function(t,e){return f.call(t,this,e)}:function(t){return f.call(t,this)});}n&&W$2(Qe$2[o],"sham",!0);}("replace",2,(function(t,e,r,n){var o=n.REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE,i=n.REPLACE_KEEPS_$0,c=o?"$":"$0";return [function(r,n){var o=j$2(this),i=null==r?void 0:r[t];return void 0!==i?i.call(r,o,n):e.call(String(o),r,n)},function(t,n){if(!o&&i||"string"==typeof n&&-1===n.indexOf(c)){var a=r(e,t,this,n);if(a.done)return a.value}var u=H$2(t),l=String(this),f="function"==typeof n;f||(n=String(n));var s=u.global;if(s){var d=u.unicode;u.lastIndex=0;}for(var p=[];;){var v=dr$1(u,l);if(null===v)break;if(p.push(v),!s)break;""===String(v[0])&&(u.lastIndex=cr$1(l,Ot$2(u.lastIndex),d));}for(var h,g="",y=0,m=0;m<p.length;m++){v=p[m];for(var b=String(v[0]),S=pr$1(vr$1(Et$2(v.index),l.length),0),x=[],E=1;E<v.length;E++)x.push(void 0===(h=v[E])?h:String(h));var w=v.groups;if(f){var O=[b].concat(x,S,l);void 0!==w&&O.push(w);var T=String(n.apply(void 0,O));}else T=sr$1(b,l,S,x,w,n);S>=y&&(g+=l.slice(y,S)+T,y=S+b.length);}return g+l.slice(y)}]}));function hr$1(){return void 0===(t="w-e-insert-video")&&(t="r"),t+"-"+Date.now().toString().slice(-5)+Math.random().toString(36).slice(-5);var t;}var gr$1=function(){function t(){this.title=qc$1("videoModule.insertVideo"),this.iconSvg='<svg viewBox="0 0 1024 1024"><path d="M981.184 160.096C837.568 139.456 678.848 128 512 128S186.432 139.456 42.816 160.096C15.296 267.808 0 386.848 0 512s15.264 244.16 42.816 351.904C186.464 884.544 345.152 896 512 896s325.568-11.456 469.184-32.096C1008.704 756.192 1024 637.152 1024 512s-15.264-244.16-42.816-351.904zM384 704V320l320 192-320 192z"></path></svg>',this.tag="button",this.showModal=!0,this.modalWidth=320,this.$content=null,this.srcInputId=hr$1(),this.buttonId=hr$1();}return t.prototype.getValue=function(t){return ""},t.prototype.isActive=function(t){return !1},t.prototype.exec=function(t,e){},t.prototype.isDisabled=function(t){var e=t.selection;return null==e||!Range.isCollapsed(e)},t.prototype.getModalPositionNode=function(t){return null},t.prototype.getModalContentElem=function(t){var e=this,i=this.srcInputId,c=this.buttonId,a=se$2(Au$1(qc$1("videoModule.videoSrc"),i,qc$1("videoModule.insertPlaceHolder")),2),l=a[0],f=a[1],s=se$2(Fu$1(c,qc$1("videoModule.ok")),1)[0];if(null==this.$content){var d=$$6("<div></div>");d.on("click","#"+c,(function(r){return le$2(e,void 0,void 0,(function(){var e;return fe$2(this,(function(n){switch(n.label){case 0:return r.preventDefault(),e=$$6("#"+i).val().trim(),[4,this.insertVideo(t,e)];case 1:return n.sent(),t.hidePanelOrModal(),[2]}}))}))})),this.$content=d;}var p=this.$content;return p.html(""),p.append(l),p.append(s),f.val(""),setTimeout((function(){$$6("#"+i).focus();})),p},t.prototype.insertVideo=function(t,e){return le$2(this,void 0,void 0,(function(){var r,n,o,c;return fe$2(this,(function(a){switch(a.label){case 0:return e?(t.restoreSelection(),this.isDisabled(t)?[2]:(r=t.getMenuConfig("insertVideo"),n=r.onInsertedVideo,[4,(0, r.checkVideo)(e)])):[2];case 1:return "string"==typeof(o=a.sent())?(t.alert(o,"error"),[2]):(null==o||(c={type:"video",src:(u=e,u.replace(/</g,"&lt;").replace(/>/g,"&gt;")),children:[{text:""}]},Transforms.insertNodes(t,c),n(c)),[2])}var u;}))}))},t}(),yr$1=function(){function t(){this.title=qc$1("videoModule.delete"),this.iconSvg='<svg viewBox="0 0 1024 1024"><path d="M826.8032 356.5312c-19.328 0-36.3776 15.6928-36.3776 35.0464v524.2624c0 19.328-16 34.56-35.328 34.56H264.9344c-19.328 0-35.5072-15.3088-35.5072-34.56V390.0416c0-19.328-14.1568-35.0464-33.5104-35.0464s-33.5104 15.6928-33.5104 35.0464V915.712c0 57.9328 44.6208 108.288 102.528 108.288H755.2c57.9328 0 108.0832-50.4576 108.0832-108.288V391.4752c-0.1024-19.2512-17.1264-34.944-36.48-34.944z" p-id="9577"></path><path d="M437.1712 775.7568V390.6048c0-19.328-14.1568-35.0464-33.5104-35.0464s-33.5104 15.616-33.5104 35.0464v385.152c0 19.328 14.1568 35.0464 33.5104 35.0464s33.5104-15.7184 33.5104-35.0464zM649.7024 775.7568V390.6048c0-19.328-17.0496-35.0464-36.3776-35.0464s-36.3776 15.616-36.3776 35.0464v385.152c0 19.328 17.0496 35.0464 36.3776 35.0464s36.3776-15.7184 36.3776-35.0464zM965.0432 217.0368h-174.6176V145.5104c0-57.9328-47.2064-101.76-104.6528-101.76h-350.976c-57.8304 0-105.3952 43.8528-105.3952 101.76v71.5264H54.784c-19.4304 0-35.0464 14.1568-35.0464 33.5104 0 19.328 15.616 33.5104 35.0464 33.5104h910.3616c19.328 0 35.0464-14.1568 35.0464-33.5104 0-19.3536-15.6928-33.5104-35.1488-33.5104z m-247.3728 0H297.3952V145.5104c0-19.328 18.2016-34.7648 37.4272-34.7648h350.976c19.1488 0 31.872 15.1296 31.872 34.7648v71.5264z"></path></svg>',this.tag="button";}return t.prototype.getValue=function(t){return ""},t.prototype.isActive=function(t){return !1},t.prototype.isDisabled=function(t){return null==t.selection||null==fi$1.getSelectedNodeByType(t,"video")},t.prototype.exec=function(t,r){this.isDisabled(t)||Transforms.removeNodes(t,{match:function(t){return fi$1.checkNodeType(t,"video")}});},t}();var mr$1={renderElems:[Se$2],elemsToHtml:[xe$2],menus:[{key:"insertVideo",factory:function(){return new gr$1},config:{onInsertedVideo:function(t){},checkVideo:function(t){return !0}}},{key:"deleteVideo",factory:function(){return new yr$1}}],editorPlugin:function(t){var r=t.isVoid,n=t.normalizeNode,o=t;return o.isVoid=function(t){return "video"===t.type||r(t)},o.normalizeNode=function(t){var r=se$2(t,2),c=r[0],a=r[1];if("video"===fi$1.getNodeType(c)){var u=(o.children||[])[a[0]+1]||{},l=fi$1.getNodeType(u);if("paragraph"!==l&&"blockquote"!==l&&!l.startsWith("header")){var f=[a[0]+1];Transforms.insertNodes(o,{type:"paragraph",children:[{text:""}]},{at:f});}}return n([c,a])},o}};

  Kc$1("en",{uploadImgModule:{uploadImage:"Upload Image",uploadError:"{{fileName}} upload error"}}),Kc$1("zh-CN",{uploadImgModule:{uploadImage:"上传图片",uploadError:"{{fileName}} 上传出错"}});var d$1="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:{};function v$1(t){var e={exports:{}};return t(e,e.exports),e.exports}var g$1=function(t){return t&&t.Math==Math&&t},y$1=g$1("object"==typeof globalThis&&globalThis)||g$1("object"==typeof window&&window)||g$1("object"==typeof self&&self)||g$1("object"==typeof d$1&&d$1)||function(){return this}()||Function("return this")(),m$1=function(t){try{return !!t()}catch(t){return !0}},b$1=!m$1((function(){return 7!=Object.defineProperty({},1,{get:function(){return 7}})[1]})),S$1={}.propertyIsEnumerable,E$1=Object.getOwnPropertyDescriptor,x$1={f:E$1&&!S$1.call({1:2},1)?function(t){var e=E$1(this,t);return !!e&&e.enumerable}:S$1},w$1=function(t,e){return {enumerable:!(1&t),configurable:!(2&t),writable:!(4&t),value:e}},O$1={}.toString,I$1=function(t){return O$1.call(t).slice(8,-1)},j$1="".split,T$1=m$1((function(){return !Object("z").propertyIsEnumerable(0)}))?function(t){return "String"==I$1(t)?j$1.call(t,""):Object(t)}:Object,A$1=function(t){if(null==t)throw TypeError("Can't call method on "+t);return t},R$1=function(t){return T$1(A$1(t))},P$1=function(t){return "object"==typeof t?null!==t:"function"==typeof t},_$1=function(t,e){if(!P$1(t))return t;var n,r;if(e&&"function"==typeof(n=t.toString)&&!P$1(r=n.call(t)))return r;if("function"==typeof(n=t.valueOf)&&!P$1(r=n.call(t)))return r;if(!e&&"function"==typeof(n=t.toString)&&!P$1(r=n.call(t)))return r;throw TypeError("Can't convert object to primitive value")},L$1=function(t){return Object(A$1(t))},M$1={}.hasOwnProperty,k$1=Object.hasOwn||function(t,e){return M$1.call(L$1(t),e)},C$1=y$1.document,z$1=P$1(C$1)&&P$1(C$1.createElement),D$1=function(t){return z$1?C$1.createElement(t):{}},N$1=!b$1&&!m$1((function(){return 7!=Object.defineProperty(D$1("div"),"a",{get:function(){return 7}}).a})),F$1=Object.getOwnPropertyDescriptor,U$1={f:b$1?F$1:function(t,e){if(t=R$1(t),e=_$1(e,!0),N$1)try{return F$1(t,e)}catch(t){}if(k$1(t,e))return w$1(!x$1.f.call(t,e),t[e])}},W$1=function(t){if(!P$1(t))throw TypeError(String(t)+" is not an object");return t},V$1=Object.defineProperty,B$1={f:b$1?V$1:function(t,e,n){if(W$1(t),e=_$1(e,!0),W$1(n),N$1)try{return V$1(t,e,n)}catch(t){}if("get"in n||"set"in n)throw TypeError("Accessors not supported");return "value"in n&&(t[e]=n.value),t}},G$1=b$1?function(t,e,n){return B$1.f(t,e,w$1(1,n))}:function(t,e,n){return t[e]=n,t},K$1=function(t,e){try{G$1(y$1,t,e);}catch(n){y$1[t]=e;}return e},H$1=y$1["__core-js_shared__"]||K$1("__core-js_shared__",{}),Y$1=Function.toString;"function"!=typeof H$1.inspectSource&&(H$1.inspectSource=function(t){return Y$1.call(t)});var $$1,Q$1,X$1,q$1=H$1.inspectSource,J$1=y$1.WeakMap,Z$1="function"==typeof J$1&&/native code/.test(q$1(J$1)),tt$1=v$1((function(t){(t.exports=function(t,e){return H$1[t]||(H$1[t]=void 0!==e?e:{})})("versions",[]).push({version:"3.13.1",mode:"global",copyright:"© 2021 Denis Pushkarev (zloirock.ru)"});})),et$1=0,nt$1=Math.random(),rt$1=function(t){return "Symbol("+String(void 0===t?"":t)+")_"+(++et$1+nt$1).toString(36)},ot$1=tt$1("keys"),it$1=function(t){return ot$1[t]||(ot$1[t]=rt$1(t))},ut$1={},at$1=y$1.WeakMap;if(Z$1||H$1.state){var ct$1=H$1.state||(H$1.state=new at$1),lt$1=ct$1.get,ft$1=ct$1.has,st$1=ct$1.set;$$1=function(t,e){if(ft$1.call(ct$1,t))throw new TypeError("Object already initialized");return e.facade=t,st$1.call(ct$1,t,e),e},Q$1=function(t){return lt$1.call(ct$1,t)||{}},X$1=function(t){return ft$1.call(ct$1,t)};}else {var pt$1=it$1("state");ut$1[pt$1]=!0,$$1=function(t,e){if(k$1(t,pt$1))throw new TypeError("Object already initialized");return e.facade=t,G$1(t,pt$1,e),e},Q$1=function(t){return k$1(t,pt$1)?t[pt$1]:{}},X$1=function(t){return k$1(t,pt$1)};}var ht$1,dt$1,vt$1={set:$$1,get:Q$1,has:X$1,enforce:function(t){return X$1(t)?Q$1(t):$$1(t,{})},getterFor:function(t){return function(e){var n;if(!P$1(e)||(n=Q$1(e)).type!==t)throw TypeError("Incompatible receiver, "+t+" required");return n}}},gt$1=v$1((function(t){var e=vt$1.get,n=vt$1.enforce,r=String(String).split("String");(t.exports=function(t,e,o,i){var u,a=!!i&&!!i.unsafe,c=!!i&&!!i.enumerable,l=!!i&&!!i.noTargetGet;"function"==typeof o&&("string"!=typeof e||k$1(o,"name")||G$1(o,"name",e),(u=n(o)).source||(u.source=r.join("string"==typeof e?e:""))),t!==y$1?(a?!l&&t[e]&&(c=!0):delete t[e],c?t[e]=o:G$1(t,e,o)):c?t[e]=o:K$1(e,o);})(Function.prototype,"toString",(function(){return "function"==typeof this&&e(this).source||q$1(this)}));})),yt$1=y$1,mt$1=function(t){return "function"==typeof t?t:void 0},bt$1=function(t,e){return arguments.length<2?mt$1(yt$1[t])||mt$1(y$1[t]):yt$1[t]&&yt$1[t][e]||y$1[t]&&y$1[t][e]},St$1=Math.ceil,Et$1=Math.floor,xt$1=function(t){return isNaN(t=+t)?0:(t>0?Et$1:St$1)(t)},wt$1=Math.min,Ot$1=function(t){return t>0?wt$1(xt$1(t),9007199254740991):0},It$1=Math.max,jt=Math.min,Tt$1=function(t,e){var n=xt$1(t);return n<0?It$1(n+e,0):jt(n,e)},At$1=function(t){return function(e,n,r){var o,i=R$1(e),u=Ot$1(i.length),a=Tt$1(r,u);if(t&&n!=n){for(;u>a;)if((o=i[a++])!=o)return !0}else for(;u>a;a++)if((t||a in i)&&i[a]===n)return t||a||0;return !t&&-1}},Rt$1={includes:At$1(!0),indexOf:At$1(!1)}.indexOf,Pt$1=function(t,e){var n,r=R$1(t),o=0,i=[];for(n in r)!k$1(ut$1,n)&&k$1(r,n)&&i.push(n);for(;e.length>o;)k$1(r,n=e[o++])&&(~Rt$1(i,n)||i.push(n));return i},_t$1=["constructor","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","toLocaleString","toString","valueOf"],Lt$1=_t$1.concat("length","prototype"),Mt$1={f:Object.getOwnPropertyNames||function(t){return Pt$1(t,Lt$1)}},kt$1={f:Object.getOwnPropertySymbols},Ct$1=bt$1("Reflect","ownKeys")||function(t){var e=Mt$1.f(W$1(t)),n=kt$1.f;return n?e.concat(n(t)):e},zt=function(t,e){for(var n=Ct$1(e),r=B$1.f,o=U$1.f,i=0;i<n.length;i++){var u=n[i];k$1(t,u)||r(t,u,o(e,u));}},Dt$1=/#|\.prototype\./,Nt$1=function(t,e){var n=Ut[Ft$1(t)];return n==Vt||n!=Wt&&("function"==typeof e?m$1(e):!!e)},Ft$1=Nt$1.normalize=function(t){return String(t).replace(Dt$1,".").toLowerCase()},Ut=Nt$1.data={},Wt=Nt$1.NATIVE="N",Vt=Nt$1.POLYFILL="P",Bt=Nt$1,Gt=U$1.f,Kt=function(t,e){var n,r,o,i,u,a=t.target,c=t.global,l=t.stat;if(n=c?y$1:l?y$1[a]||K$1(a,{}):(y$1[a]||{}).prototype)for(r in e){if(i=e[r],o=t.noTargetGet?(u=Gt(n,r))&&u.value:n[r],!Bt(c?r:a+(l?".":"#")+r,t.forced)&&void 0!==o){if(typeof i==typeof o)continue;zt(i,o);}(t.sham||o&&o.sham)&&G$1(i,"sham",!0),gt$1(n,r,i,t);}},Ht=Array.isArray||function(t){return "Array"==I$1(t)},Yt=bt$1("navigator","userAgent")||"",$t=y$1.process,Qt=$t&&$t.versions,Xt=Qt&&Qt.v8;Xt?dt$1=(ht$1=Xt.split("."))[0]<4?1:ht$1[0]+ht$1[1]:Yt&&(!(ht$1=Yt.match(/Edge\/(\d+)/))||ht$1[1]>=74)&&(ht$1=Yt.match(/Chrome\/(\d+)/))&&(dt$1=ht$1[1]);var qt=dt$1&&+dt$1,Jt=!!Object.getOwnPropertySymbols&&!m$1((function(){var t=Symbol();return !String(t)||!(Object(t)instanceof Symbol)||!Symbol.sham&&qt&&qt<41})),Zt=Jt&&!Symbol.sham&&"symbol"==typeof Symbol.iterator,te$1=tt$1("wks"),ee$1=y$1.Symbol,ne$1=Zt?ee$1:ee$1&&ee$1.withoutSetter||rt$1,re$1=function(t){return k$1(te$1,t)&&(Jt||"string"==typeof te$1[t])||(Jt&&k$1(ee$1,t)?te$1[t]=ee$1[t]:te$1[t]=ne$1("Symbol."+t)),te$1[t]},oe$1=re$1("species"),ie$1=function(t){return qt>=51||!m$1((function(){var e=[];return (e.constructor={})[oe$1]=function(){return {foo:1}},1!==e[t](Boolean).foo}))}("slice"),ue$1=re$1("species"),ae$1=[].slice,ce$1=Math.max;Kt({target:"Array",proto:!0,forced:!ie$1},{slice:function(t,e){var n,r,o,i,u,a,c,l=R$1(this),f=Ot$1(l.length),s=Tt$1(t,f),p=Tt$1(void 0===e?f:e,f);if(Ht(l)&&("function"!=typeof(n=l.constructor)||n!==Array&&!Ht(n.prototype)?P$1(n)&&null===(n=n[ue$1])&&(n=void 0):n=void 0,n===Array||void 0===n))return ae$1.call(l,s,p);for(r=new(void 0===n?Array:n)(ce$1(p-s,0)),o=0;s<p;s++,o++)s in l&&(i=r,u=o,a=l[s],c=void 0,(c=_$1(u))in i?B$1.f(i,c,w$1(0,a)):i[c]=a);return r.length=o,r}});var le$1=function(){var t=W$1(this),e="";return t.global&&(e+="g"),t.ignoreCase&&(e+="i"),t.multiline&&(e+="m"),t.dotAll&&(e+="s"),t.unicode&&(e+="u"),t.sticky&&(e+="y"),e};function fe$1(t,e){return RegExp(t,e)}var se$1,pe$1,he$1={UNSUPPORTED_Y:m$1((function(){var t=fe$1("a","y");return t.lastIndex=2,null!=t.exec("abcd")})),BROKEN_CARET:m$1((function(){var t=fe$1("^r","gy");return t.lastIndex=2,null!=t.exec("str")}))},de$1=RegExp.prototype.exec,ve$1=tt$1("native-string-replace",String.prototype.replace),ge$1=de$1,ye$1=(se$1=/a/,pe$1=/b*/g,de$1.call(se$1,"a"),de$1.call(pe$1,"a"),0!==se$1.lastIndex||0!==pe$1.lastIndex),me$1=he$1.UNSUPPORTED_Y||he$1.BROKEN_CARET,be$1=void 0!==/()??/.exec("")[1];(ye$1||be$1||me$1)&&(ge$1=function(t){var e,n,r,o,i=this,u=me$1&&i.sticky,a=le$1.call(i),c=i.source,l=0,f=t;return u&&(-1===(a=a.replace("y","")).indexOf("g")&&(a+="g"),f=String(t).slice(i.lastIndex),i.lastIndex>0&&(!i.multiline||i.multiline&&"\n"!==t[i.lastIndex-1])&&(c="(?: "+c+")",f=" "+f,l++),n=new RegExp("^(?:"+c+")",a)),be$1&&(n=new RegExp("^"+c+"$(?!\\s)",a)),ye$1&&(e=i.lastIndex),r=de$1.call(u?n:i,f),u?r?(r.input=r.input.slice(l),r[0]=r[0].slice(l),r.index=i.lastIndex,i.lastIndex+=r[0].length):i.lastIndex=0:ye$1&&r&&(i.lastIndex=i.global?r.index+r[0].length:e),be$1&&r&&r.length>1&&ve$1.call(r[0],n,(function(){for(o=1;o<arguments.length-2;o++)void 0===arguments[o]&&(r[o]=void 0);})),r});var Se$1=ge$1;Kt({target:"RegExp",proto:!0,forced:/./.exec!==Se$1},{exec:Se$1});var Ee$1=re$1("species"),xe$1=RegExp.prototype,we$1=!m$1((function(){var t=/./;return t.exec=function(){var t=[];return t.groups={a:"7"},t},"7"!=="".replace(t,"$<a>")})),Oe$1="$0"==="a".replace(/./,"$0"),Ie$1=re$1("replace"),je$1=!!/./[Ie$1]&&""===/./[Ie$1]("a","$0"),Te$1=!m$1((function(){var t=/(?:)/,e=t.exec;t.exec=function(){return e.apply(this,arguments)};var n="ab".split(t);return 2!==n.length||"a"!==n[0]||"b"!==n[1]})),Ae$1=re$1("match"),Re$1=function(t){var e;return P$1(t)&&(void 0!==(e=t[Ae$1])?!!e:"RegExp"==I$1(t))},Pe$1=function(t){if("function"!=typeof t)throw TypeError(String(t)+" is not a function");return t},_e$1=re$1("species"),Le$1=function(t){return function(e,n){var r,o,i=String(A$1(e)),u=xt$1(n),a=i.length;return u<0||u>=a?t?"":void 0:(r=i.charCodeAt(u))<55296||r>56319||u+1===a||(o=i.charCodeAt(u+1))<56320||o>57343?t?i.charAt(u):r:t?i.slice(u,u+2):o-56320+(r-55296<<10)+65536}},Me$1={codeAt:Le$1(!1),charAt:Le$1(!0)},ke$1=Me$1.charAt,Ce$1=function(t,e,n){return e+(n?ke$1(t,e).length:1)},ze$1=function(t,e){var n=t.exec;if("function"==typeof n){var r=n.call(t,e);if("object"!=typeof r)throw TypeError("RegExp exec method returned something other than an Object or null");return r}if("RegExp"!==I$1(t))throw TypeError("RegExp#exec called on incompatible receiver");return Se$1.call(t,e)},De$1=he$1.UNSUPPORTED_Y,Ne$1=[].push,Fe$1=Math.min;!function(t,e,n,r){var o=re$1(t),i=!m$1((function(){var e={};return e[o]=function(){return 7},7!=""[t](e)})),u=i&&!m$1((function(){var e=!1,n=/a/;return "split"===t&&((n={}).constructor={},n.constructor[Ee$1]=function(){return n},n.flags="",n[o]=/./[o]),n.exec=function(){return e=!0,null},n[o](""),!e}));if(!i||!u||"replace"===t&&(!we$1||!Oe$1||je$1)||"split"===t&&!Te$1){var a=/./[o],c=n(o,""[t],(function(t,e,n,r,o){var u=e.exec;return u===Se$1||u===xe$1.exec?i&&!o?{done:!0,value:a.call(e,n,r)}:{done:!0,value:t.call(n,e,r)}:{done:!1}}),{REPLACE_KEEPS_$0:Oe$1,REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE:je$1}),l=c[0],f=c[1];gt$1(String.prototype,t,l),gt$1(xe$1,o,2==e?function(t,e){return f.call(t,this,e)}:function(t){return f.call(t,this)});}r&&G$1(xe$1[o],"sham",!0);}("split",2,(function(t,e,n){var r;return r="c"=="abbc".split(/(b)*/)[1]||4!="test".split(/(?:)/,-1).length||2!="ab".split(/(?:ab)*/).length||4!=".".split(/(.?)(.?)/).length||".".split(/()()/).length>1||"".split(/.?/).length?function(t,n){var r=String(A$1(this)),o=void 0===n?4294967295:n>>>0;if(0===o)return [];if(void 0===t)return [r];if(!Re$1(t))return e.call(r,t,o);for(var i,u,a,c=[],l=(t.ignoreCase?"i":"")+(t.multiline?"m":"")+(t.unicode?"u":"")+(t.sticky?"y":""),f=0,s=new RegExp(t.source,l+"g");(i=Se$1.call(s,r))&&!((u=s.lastIndex)>f&&(c.push(r.slice(f,i.index)),i.length>1&&i.index<r.length&&Ne$1.apply(c,i.slice(1)),a=i[0].length,f=u,c.length>=o));)s.lastIndex===i.index&&s.lastIndex++;return f===r.length?!a&&s.test("")||c.push(""):c.push(r.slice(f)),c.length>o?c.slice(0,o):c}:"0".split(void 0,0).length?function(t,n){return void 0===t&&0===n?[]:e.call(this,t,n)}:e,[function(e,n){var o=A$1(this),i=null==e?void 0:e[t];return void 0!==i?i.call(e,o,n):r.call(String(o),e,n)},function(t,o){var i=n(r,t,this,o,r!==e);if(i.done)return i.value;var u=W$1(t),a=String(this),c=function(t,e){var n,r=W$1(t).constructor;return void 0===r||null==(n=W$1(r)[_e$1])?e:Pe$1(n)}(u,RegExp),l=u.unicode,f=(u.ignoreCase?"i":"")+(u.multiline?"m":"")+(u.unicode?"u":"")+(De$1?"g":"y"),s=new c(De$1?"^(?:"+u.source+")":u,f),p=void 0===o?4294967295:o>>>0;if(0===p)return [];if(0===a.length)return null===ze$1(s,a)?[a]:[];for(var h=0,d=0,v=[];d<a.length;){s.lastIndex=De$1?0:d;var g,y=ze$1(s,De$1?a.slice(d):a);if(null===y||(g=Fe$1(Ot$1(s.lastIndex+(De$1?d:0)),a.length))===h)d=Ce$1(a,d,l);else {if(v.push(a.slice(h,d)),v.length===p)return v;for(var m=1;m<=y.length-1;m++)if(v.push(y[m]),v.length===p)return v;d=h=g;}}return v.push(a.slice(h)),v}]}),De$1);
  /*! *****************************************************************************
  Copyright (c) Microsoft Corporation.

  Permission to use, copy, modify, and/or distribute this software for any
  purpose with or without fee is hereby granted.

  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
  PERFORMANCE OF THIS SOFTWARE.
  ***************************************************************************** */
  var Ue$1=function(){return (Ue$1=Object.assign||function(t){for(var e,n=1,r=arguments.length;n<r;n++)for(var o in e=arguments[n])Object.prototype.hasOwnProperty.call(e,o)&&(t[o]=e[o]);return t}).apply(this,arguments)};function We$1(t,e){var n="function"==typeof Symbol&&t[Symbol.iterator];if(!n)return t;var r,o,i=n.call(t),u=[];try{for(;(void 0===e||e-- >0)&&!(r=i.next()).done;)u.push(r.value);}catch(t){o={error:t};}finally{try{r&&!r.done&&(n=i.return)&&n.call(i);}finally{if(o)throw o.error}}return u}var Ve$1,Be$1=function(t){if(Re$1(t))throw TypeError("The method doesn't accept regular expressions");return t},Ge$1=re$1("match"),Ke$1=U$1.f,He$1="".startsWith,Ye$1=Math.min,$e$1=function(t){var e=/./;try{"/./"[t](e);}catch(n){try{return e[Ge$1]=!1,"/./"[t](e)}catch(t){}}return !1}("startsWith"),Qe$1=!($e$1||(Ve$1=Ke$1(String.prototype,"startsWith"),!Ve$1||Ve$1.writable));function Xe$1(t){var n=t.selection;return null==n||(!Range.isCollapsed(n)||!!We$1(Editor.nodes(t,{match:function(n){var r=fi$1.getNodeType(n);return "code"===r||("pre"===r||("link"===r||("list-item"===r||(!!r.startsWith("header")||("blockquote"===r||!!Editor.isVoid(t,n))))))},universal:!0}),1)[0])}Kt({target:"String",proto:!0,forced:!Qe$1&&!$e$1},{startsWith:function(t){var e=String(A$1(this));Be$1(t);var n=Ot$1(Ye$1(arguments.length>1?arguments[1]:void 0,e.length)),r=String(t);return He$1?He$1.call(e,r,n):e.slice(n,n+r.length)===r}});var qe$1,Je$1=Object.keys||function(t){return Pt$1(t,_t$1)},Ze$1=b$1?Object.defineProperties:function(t,e){W$1(t);for(var n,r=Je$1(e),o=r.length,i=0;o>i;)B$1.f(t,n=r[i++],e[n]);return t},tn=bt$1("document","documentElement"),en=it$1("IE_PROTO"),nn=function(){},rn=function(t){return "<script>"+t+"<\/script>"},on=function(){try{qe$1=document.domain&&new ActiveXObject("htmlfile");}catch(t){}var t,e;on=qe$1?function(t){t.write(rn("")),t.close();var e=t.parentWindow.Object;return t=null,e}(qe$1):((e=D$1("iframe")).style.display="none",tn.appendChild(e),e.src=String("javascript:"),(t=e.contentWindow.document).open(),t.write(rn("document.F=Object")),t.close(),t.F);for(var n=_t$1.length;n--;)delete on.prototype[_t$1[n]];return on()};ut$1[en]=!0;var un=Object.create||function(t,e){var n;return null!==t?(nn.prototype=W$1(t),n=new nn,nn.prototype=null,n[en]=t):n=on(),void 0===e?n:Ze$1(n,e)},an=re$1("unscopables"),cn=Array.prototype;null==cn[an]&&B$1.f(cn,an,{configurable:!0,value:un(null)});var ln,fn,sn,pn=function(t){cn[an][t]=!0;},hn={},dn=!m$1((function(){function t(){}return t.prototype.constructor=null,Object.getPrototypeOf(new t)!==t.prototype})),vn=it$1("IE_PROTO"),gn=Object.prototype,yn=dn?Object.getPrototypeOf:function(t){return t=L$1(t),k$1(t,vn)?t[vn]:"function"==typeof t.constructor&&t instanceof t.constructor?t.constructor.prototype:t instanceof Object?gn:null},mn=re$1("iterator"),bn=!1;[].keys&&("next"in(sn=[].keys())?(fn=yn(yn(sn)))!==Object.prototype&&(ln=fn):bn=!0),(null==ln||m$1((function(){var t={};return ln[mn].call(t)!==t})))&&(ln={}),k$1(ln,mn)||G$1(ln,mn,(function(){return this}));var Sn={IteratorPrototype:ln,BUGGY_SAFARI_ITERATORS:bn},En=B$1.f,xn=re$1("toStringTag"),wn=function(t,e,n){t&&!k$1(t=n?t:t.prototype,xn)&&En(t,xn,{configurable:!0,value:e});},On=Sn.IteratorPrototype,In=function(){return this},jn=Object.setPrototypeOf||("__proto__"in{}?function(){var t,e=!1,n={};try{(t=Object.getOwnPropertyDescriptor(Object.prototype,"__proto__").set).call(n,[]),e=n instanceof Array;}catch(t){}return function(n,r){return W$1(n),function(t){if(!P$1(t)&&null!==t)throw TypeError("Can't set "+String(t)+" as a prototype")}(r),e?t.call(n,r):n.__proto__=r,n}}():void 0),Tn=Sn.IteratorPrototype,An=Sn.BUGGY_SAFARI_ITERATORS,Rn=re$1("iterator"),Pn=function(){return this},_n=function(t,e,n,r,o,i,u){!function(t,e,n){var r=e+" Iterator";t.prototype=un(On,{next:w$1(1,n)}),wn(t,r,!1),hn[r]=In;}(n,e,r);var a,c,l,f=function(t){if(t===o&&v)return v;if(!An&&t in h)return h[t];switch(t){case"keys":case"values":case"entries":return function(){return new n(this,t)}}return function(){return new n(this)}},s=e+" Iterator",p=!1,h=t.prototype,d=h[Rn]||h["@@iterator"]||o&&h[o],v=!An&&d||f(o),g="Array"==e&&h.entries||d;if(g&&(a=yn(g.call(new t)),Tn!==Object.prototype&&a.next&&(yn(a)!==Tn&&(jn?jn(a,Tn):"function"!=typeof a[Rn]&&G$1(a,Rn,Pn)),wn(a,s,!0))),"values"==o&&d&&"values"!==d.name&&(p=!0,v=function(){return d.call(this)}),h[Rn]!==v&&G$1(h,Rn,v),hn[e]=v,o)if(c={values:f("values"),keys:i?v:f("keys"),entries:f("entries")},u)for(l in c)(An||p||!(l in h))&&gt$1(h,l,c[l]);else Kt({target:e,proto:!0,forced:An||p},c);return c},Ln=vt$1.set,Mn=vt$1.getterFor("Array Iterator"),kn=_n(Array,"Array",(function(t,e){Ln(this,{type:"Array Iterator",target:R$1(t),index:0,kind:e});}),(function(){var t=Mn(this),e=t.target,n=t.kind,r=t.index++;return !e||r>=e.length?(t.target=void 0,{value:void 0,done:!0}):"keys"==n?{value:r,done:!1}:"values"==n?{value:e[r],done:!1}:{value:[r,e[r]],done:!1}}),"values");hn.Arguments=hn.Array,pn("keys"),pn("values"),pn("entries");var Cn={};Cn[re$1("toStringTag")]="z";var zn="[object z]"===String(Cn),Dn=re$1("toStringTag"),Nn="Arguments"==I$1(function(){return arguments}()),Fn=zn?I$1:function(t){var e,n,r;return void 0===t?"Undefined":null===t?"Null":"string"==typeof(n=function(t,e){try{return t[e]}catch(t){}}(e=Object(t),Dn))?n:Nn?I$1(e):"Object"==(r=I$1(e))&&"function"==typeof e.callee?"Arguments":r},Un=zn?{}.toString:function(){return "[object "+Fn(this)+"]"};zn||gt$1(Object.prototype,"toString",Un,{unsafe:!0});var Wn=Me$1.charAt,Vn=vt$1.set,Bn=vt$1.getterFor("String Iterator");_n(String,"String",(function(t){Vn(this,{type:"String Iterator",string:String(t),index:0});}),(function(){var t,e=Bn(this),n=e.string,r=e.index;return r>=n.length?{value:void 0,done:!0}:(t=Wn(n,r),e.index+=t.length,{value:t,done:!1})}));var Gn=function(t,e,n){for(var r in e)gt$1(t,r,e[r],n);return t},Kn=!m$1((function(){return Object.isExtensible(Object.preventExtensions({}))})),Hn=v$1((function(t){var e=B$1.f,n=rt$1("meta"),r=0,o=Object.isExtensible||function(){return !0},i=function(t){e(t,n,{value:{objectID:"O"+ ++r,weakData:{}}});},u=t.exports={REQUIRED:!1,fastKey:function(t,e){if(!P$1(t))return "symbol"==typeof t?t:("string"==typeof t?"S":"P")+t;if(!k$1(t,n)){if(!o(t))return "F";if(!e)return "E";i(t);}return t[n].objectID},getWeakData:function(t,e){if(!k$1(t,n)){if(!o(t))return !0;if(!e)return !1;i(t);}return t[n].weakData},onFreeze:function(t){return Kn&&u.REQUIRED&&o(t)&&!k$1(t,n)&&i(t),t}};ut$1[n]=!0;})),Yn=re$1("iterator"),$n=Array.prototype,Qn=function(t,e,n){if(Pe$1(t),void 0===e)return t;switch(n){case 0:return function(){return t.call(e)};case 1:return function(n){return t.call(e,n)};case 2:return function(n,r){return t.call(e,n,r)};case 3:return function(n,r,o){return t.call(e,n,r,o)}}return function(){return t.apply(e,arguments)}},Xn=re$1("iterator"),qn=function(t){var e=t.return;if(void 0!==e)return W$1(e.call(t)).value},Jn=function(t,e){this.stopped=t,this.result=e;},Zn=function(t,e,n){var r,o,i,u,a,c,l,f,s=n&&n.that,p=!(!n||!n.AS_ENTRIES),h=!(!n||!n.IS_ITERATOR),d=!(!n||!n.INTERRUPTED),v=Qn(e,s,1+p+d),g=function(t){return r&&qn(r),new Jn(!0,t)},y=function(t){return p?(W$1(t),d?v(t[0],t[1],g):v(t[0],t[1])):d?v(t,g):v(t)};if(h)r=t;else {if("function"!=typeof(o=function(t){if(null!=t)return t[Xn]||t["@@iterator"]||hn[Fn(t)]}(t)))throw TypeError("Target is not iterable");if(void 0!==(f=o)&&(hn.Array===f||$n[Yn]===f)){for(i=0,u=Ot$1(t.length);u>i;i++)if((a=y(t[i]))&&a instanceof Jn)return a;return new Jn(!1)}r=o.call(t);}for(c=r.next;!(l=c.call(r)).done;){try{a=y(l.value);}catch(t){throw qn(r),t}if("object"==typeof a&&a&&a instanceof Jn)return a}return new Jn(!1)},tr=function(t,e,n){if(!(t instanceof e))throw TypeError("Incorrect "+(n?n+" ":"")+"invocation");return t},er=re$1("iterator"),nr=!1;try{var rr=0,or={next:function(){return {done:!!rr++}},return:function(){nr=!0;}};or[er]=function(){return this},Array.from(or,(function(){throw 2}));}catch(t){}var ir=function(t,e,n){var r=-1!==t.indexOf("Map"),o=-1!==t.indexOf("Weak"),i=r?"set":"add",u=y$1[t],a=u&&u.prototype,c=u,l={},f=function(t){var e=a[t];gt$1(a,t,"add"==t?function(t){return e.call(this,0===t?0:t),this}:"delete"==t?function(t){return !(o&&!P$1(t))&&e.call(this,0===t?0:t)}:"get"==t?function(t){return o&&!P$1(t)?void 0:e.call(this,0===t?0:t)}:"has"==t?function(t){return !(o&&!P$1(t))&&e.call(this,0===t?0:t)}:function(t,n){return e.call(this,0===t?0:t,n),this});};if(Bt(t,"function"!=typeof u||!(o||a.forEach&&!m$1((function(){(new u).entries().next();})))))c=n.getConstructor(e,t,r,i),Hn.REQUIRED=!0;else if(Bt(t,!0)){var s=new c,p=s[i](o?{}:-0,1)!=s,h=m$1((function(){s.has(1);})),d=function(t,e){if(!e&&!nr)return !1;var n=!1;try{var r={};r[er]=function(){return {next:function(){return {done:n=!0}}}},t(r);}catch(t){}return n}((function(t){new u(t);})),v=!o&&m$1((function(){for(var t=new u,e=5;e--;)t[i](e,e);return !t.has(-0)}));d||((c=e((function(e,n){tr(e,c,t);var o=function(t,e,n){var r,o;return jn&&"function"==typeof(r=e.constructor)&&r!==n&&P$1(o=r.prototype)&&o!==n.prototype&&jn(t,o),t}(new u,e,c);return null!=n&&Zn(n,o[i],{that:o,AS_ENTRIES:r}),o}))).prototype=a,a.constructor=c),(h||v)&&(f("delete"),f("has"),r&&f("get")),(v||p)&&f(i),o&&a.clear&&delete a.clear;}return l[t]=c,Kt({global:!0,forced:c!=u},l),wn(c,t),o||n.setStrong(c,t,r),c},ur=re$1("species"),ar=function(t,e){var n;return Ht(t)&&("function"!=typeof(n=t.constructor)||n!==Array&&!Ht(n.prototype)?P$1(n)&&null===(n=n[ur])&&(n=void 0):n=void 0),new(void 0===n?Array:n)(0===e?0:e)},cr=[].push,lr=function(t){var e=1==t,n=2==t,r=3==t,o=4==t,i=6==t,u=7==t,a=5==t||i;return function(c,l,f,s){for(var p,h,d=L$1(c),v=T$1(d),g=Qn(l,f,3),y=Ot$1(v.length),m=0,b=s||ar,S=e?b(c,y):n||u?b(c,0):void 0;y>m;m++)if((a||m in v)&&(h=g(p=v[m],m,d),t))if(e)S[m]=h;else if(h)switch(t){case 3:return !0;case 5:return p;case 6:return m;case 2:cr.call(S,p);}else switch(t){case 4:return !1;case 7:cr.call(S,p);}return i?-1:r||o?o:S}},fr={forEach:lr(0),map:lr(1),filter:lr(2),some:lr(3),every:lr(4),find:lr(5),findIndex:lr(6),filterOut:lr(7)},sr=Hn.getWeakData,pr=vt$1.set,hr=vt$1.getterFor,dr=fr.find,vr=fr.findIndex,gr=0,yr=function(t){return t.frozen||(t.frozen=new mr)},mr=function(){this.entries=[];},br=function(t,e){return dr(t.entries,(function(t){return t[0]===e}))};mr.prototype={get:function(t){var e=br(this,t);if(e)return e[1]},has:function(t){return !!br(this,t)},set:function(t,e){var n=br(this,t);n?n[1]=e:this.entries.push([t,e]);},delete:function(t){var e=vr(this.entries,(function(e){return e[0]===t}));return ~e&&this.entries.splice(e,1),!!~e}};var Sr={getConstructor:function(t,e,n,r){var o=t((function(t,i){tr(t,o,e),pr(t,{type:e,id:gr++,frozen:void 0}),null!=i&&Zn(i,t[r],{that:t,AS_ENTRIES:n});})),i=hr(e),u=function(t,e,n){var r=i(t),o=sr(W$1(e),!0);return !0===o?yr(r).set(e,n):o[r.id]=n,t};return Gn(o.prototype,{delete:function(t){var e=i(this);if(!P$1(t))return !1;var n=sr(t);return !0===n?yr(e).delete(t):n&&k$1(n,e.id)&&delete n[e.id]},has:function(t){var e=i(this);if(!P$1(t))return !1;var n=sr(t);return !0===n?yr(e).has(t):n&&k$1(n,e.id)}}),Gn(o.prototype,n?{get:function(t){var e=i(this);if(P$1(t)){var n=sr(t);return !0===n?yr(e).get(t):n?n[e.id]:void 0}},set:function(t,e){return u(this,t,e)}}:{add:function(t){return u(this,t,!0)}}),o}};v$1((function(t){var e,n=vt$1.enforce,r=!y$1.ActiveXObject&&"ActiveXObject"in y$1,o=Object.isExtensible,i=function(t){return function(){return t(this,arguments.length?arguments[0]:void 0)}},u=t.exports=ir("WeakMap",i,Sr);if(Z$1&&r){e=Sr.getConstructor(i,"WeakMap",!0),Hn.REQUIRED=!0;var a=u.prototype,c=a.delete,l=a.has,f=a.get,s=a.set;Gn(a,{delete:function(t){if(P$1(t)&&!o(t)){var r=n(this);return r.frozen||(r.frozen=new e),c.call(this,t)||r.frozen.delete(t)}return c.call(this,t)},has:function(t){if(P$1(t)&&!o(t)){var r=n(this);return r.frozen||(r.frozen=new e),l.call(this,t)||r.frozen.has(t)}return l.call(this,t)},get:function(t){if(P$1(t)&&!o(t)){var r=n(this);return r.frozen||(r.frozen=new e),l.call(this,t)?f.call(this,t):r.frozen.get(t)}return f.call(this,t)},set:function(t,r){if(P$1(t)&&!o(t)){var i=n(this);i.frozen||(i.frozen=new e),l.call(this,t)?s.call(this,t,r):i.frozen.set(t,r);}else s.call(this,t,r);return this}});}}));var Er={CSSRuleList:0,CSSStyleDeclaration:0,CSSValueList:0,ClientRectList:0,DOMRectList:0,DOMStringList:0,DOMTokenList:1,DataTransferItemList:0,FileList:0,HTMLAllCollection:0,HTMLCollection:0,HTMLFormElement:0,HTMLSelectElement:0,MediaList:0,MimeTypeArray:0,NamedNodeMap:0,NodeList:1,PaintRequestList:0,Plugin:0,PluginArray:0,SVGLengthList:0,SVGNumberList:0,SVGPathSegList:0,SVGPointList:0,SVGStringList:0,SVGTransformList:0,SourceBufferList:0,StyleSheetList:0,TextTrackCueList:0,TextTrackList:0,TouchList:0},xr=re$1("iterator"),wr=re$1("toStringTag"),Or=kn.values;for(var Ir in Er){var jr=y$1[Ir],Tr=jr&&jr.prototype;if(Tr){if(Tr[xr]!==Or)try{G$1(Tr,xr,Or);}catch(t){Tr[xr]=Or;}if(Tr[wr]||G$1(Tr,wr,Ir),Er[Ir])for(var Ar in kn)if(Tr[Ar]!==kn[Ar])try{G$1(Tr,Ar,kn[Ar]);}catch(t){Tr[Ar]=kn[Ar];}}}var Rr=RegExp.prototype,Pr=Rr.toString,_r=m$1((function(){return "/a/b"!=Pr.call({source:"a",flags:"b"})})),Lr="toString"!=Pr.name;(_r||Lr)&&gt$1(RegExp.prototype,"toString",(function(){var t=W$1(this),e=String(t.source),n=t.flags;return "/"+e+"/"+String(void 0===n&&t instanceof RegExp&&!("flags"in Rr)?le$1.call(t):n)}),{unsafe:!0});var Mr=B$1.f,kr=Function.prototype,Cr=kr.toString,zr=/^\s*function ([^ (]*)/;b$1&&!("name"in kr)&&Mr(kr,"name",{configurable:!0,get:function(){try{return Cr.call(this).match(zr)[1]}catch(t){return ""}}});var Dr=function(t,e){var n=[][t];return !!n&&m$1((function(){n.call(null,e||function(){throw 1},1);}))},Nr=fr.forEach,Fr=Dr("forEach")?[].forEach:function(t){return Nr(this,t,arguments.length>1?arguments[1]:void 0)};for(var Ur in Er){var Wr=y$1[Ur],Vr=Wr&&Wr.prototype;if(Vr&&Vr.forEach!==Fr)try{G$1(Vr,"forEach",Fr);}catch(t){Vr.forEach=Fr;}}var Br=new WeakMap;function Gr(t){return t.getMenuConfig("uploadImage")}function Kr(t,e){if(null!=e){var o=Array.prototype.slice.call(e),i=[],a=Gr(t),c=a.customUpload,l=a.base64LimitKB;l?o.forEach((function(e){e.size/1024>l?i.push(e):function(t,e){var n=new FileReader;n.readAsDataURL(e),n.onload=function(){var r=n.result;if(r){var o=r.toString();di(t,o,e.name,o);}};}(t,e);})):i=o,c?c(i,(function(e,n,r){return di(t,e,n,r)})):function(t,e){var o=Gr(t),i=o.onSuccess,a=o.onProgress,c=o.onFailed,l=o.customInsert,f=o.onError,s=Br.get(t);null==s&&(s=tc$1(Ue$1(Ue$1({},o),{onProgress:function(e){t.showProgressBar(e),a&&a(e);},onSuccess:function(e,n){if(l)l(n,(function(e,n,r){return di(t,e,n,r)}));else {var r=n.errno,o=void 0===r?1:r,a=n.message,f=void 0===a?"上传失败\nUpload failed":a,s=n.data,p=void 0===s?[]:s;if(0!==o)return console.error("'"+e.name+"' upload failed",n),t.alert(f,"error"),void c(e,n);p.forEach((function(e){var n=e.url,r=void 0===n?"":n,o=e.alt,i=void 0===o?"":o,a=e.href;di(t,r,i,void 0===a?"":a);})),i(e,n);}},onError:function(e,n,o){var i=e.name;console.error("'"+i+" upload error",n,o);var u=qc$1("uploadImgModule.uploadError",{fileName:i});t.alert(u,"error"),f&&f(e,n,o);}})),Br.set(t,s)),e.forEach((function(t){if(null!=s){var e=t.name,n=t.type,r=t.size;s.addFile({name:e,type:n,size:r,data:t}),s.upload();}}));}(t,i);}}var Hr=[].join,Yr=T$1!=Object,$r=Dr("join",",");Kt({target:"Array",proto:!0,forced:Yr||!$r},{join:function(t){return Hr.call(R$1(this),void 0===t?",":t)}});$$6.fn.append=append,$$6.fn.on=on$4,$$6.fn.remove=remove,$$6.fn.val=val,$$6.fn.click=click,$$6.fn.hide=hide;var Qr=function(){function t(){this.title=qc$1("uploadImgModule.uploadImage"),this.iconSvg='<svg viewBox="0 0 1024 1024"><path d="M828.708571 585.045333a48.761905 48.761905 0 0 0-48.737523 48.761905v18.529524l-72.143238-72.167619a135.972571 135.972571 0 0 0-191.585524 0l-34.133334 34.133333-120.880762-120.953905a138.898286 138.898286 0 0 0-191.585523 0l-72.167619 72.167619V292.400762a48.786286 48.786286 0 0 1 48.761904-48.761905h341.23581a48.737524 48.737524 0 0 0 34.474667-83.285333 48.737524 48.737524 0 0 0-34.474667-14.287238H146.236952A146.212571 146.212571 0 0 0 0 292.400762v585.289143A146.358857 146.358857 0 0 0 146.236952 1024h584.996572a146.212571 146.212571 0 0 0 146.236952-146.310095V633.807238a48.786286 48.786286 0 0 0-48.761905-48.761905zM146.261333 926.45181a48.737524 48.737524 0 0 1-48.761904-48.761905v-174.128762l141.409523-141.458286a38.497524 38.497524 0 0 1 53.126096 0l154.526476 154.624 209.627428 209.724953H146.236952z m633.734096-48.761905c-0.073143 9.337905-3.145143 18.383238-8.777143 25.843809l-219.843048-220.94019 34.133333-34.133334a37.546667 37.546667 0 0 1 53.613715 0l140.873143 141.897143V877.714286zM1009.615238 160.231619L863.329524 13.897143a48.737524 48.737524 0 0 0-16.091429-10.24c-11.849143-4.87619-25.161143-4.87619-37.059047 0a48.761905 48.761905 0 0 0-16.067048 10.24l-146.236952 146.334476a49.005714 49.005714 0 0 0 69.217523 69.241905l62.902858-63.390476v272.627809a48.761905 48.761905 0 1 0 97.475047 0V166.083048l62.902857 63.390476a48.737524 48.737524 0 0 0 69.217524 0 48.761905 48.761905 0 0 0 0-69.241905z"></path></svg>',this.tag="button";}return t.prototype.getValue=function(t){return ""},t.prototype.isActive=function(t){return !1},t.prototype.isDisabled=function(t){return Xe$1(t)},t.prototype.getMenuConfig=function(t){return t.getMenuConfig("uploadImage")},t.prototype.exec=function(t,e){var n=this.getMenuConfig(t),r=n.allowedFileTypes,o=void 0===r?[]:r,i=n.customBrowseAndUpload;if(i)i((function(e,n,r){return di(t,e,n,r)}));else {var c="";o.length>0&&(c='accept="'+o.join(", ")+'"');var l=$$6("body"),f=$$6('<input type="file" '+c+" multiple/>");f.hide(),l.append(f),f.click(),f.on("change",(function(){var e=f[0].files;Kr(t,e);}));}},t}();var Xr={menus:[{key:"uploadImage",factory:function(){return new Qr},config:{server:"",fieldName:"wangeditor-uploaded-file",maxFileSize:2097152,maxNumberOfFiles:100,allowedFileTypes:["image/*"],meta:{},metaWithUrl:!1,headers:{},withCredentials:!1,timeout:1e4,onBeforeUpload:function(t){return t},onProgress:function(t){},onSuccess:function(t,e){},onFailed:function(t,e){},onError:function(t,e,n){},base64LimitKB:0}}],editorPlugin:function(t){var e=t.insertData,n=t;return n.insertData=function(r){if(Xe$1(n))e(r);else {var o=r.files;if(o.length<=0)e(r);else Array.prototype.slice.call(o).some((function(t){return "image"===We$1(t.type.split("/"),1)[0]}))?Kr(t,o):e(r);}},n}};

  Kc$1("en",{highLightModule:{selectLang:"Language"}}),Kc$1("zh-CN",{highLightModule:{selectLang:"选择语言"}});var s="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:{};function o(e){var t={exports:{}};return e(t,t.exports),t.exports}var l,u,c=function(e){return e&&e.Math==Math&&e},d=c("object"==typeof globalThis&&globalThis)||c("object"==typeof window&&window)||c("object"==typeof self&&self)||c("object"==typeof s&&s)||function(){return this}()||Function("return this")(),p=function(e,t,n){if(function(e){if("function"!=typeof e)throw TypeError(String(e)+" is not a function")}(e),void 0===t)return e;switch(n){case 0:return function(){return e.call(t)};case 1:return function(n){return e.call(t,n)};case 2:return function(n,a){return e.call(t,n,a)};case 3:return function(n,a,r){return e.call(t,n,a,r)}}return function(){return e.apply(t,arguments)}},g=function(e){try{return !!e()}catch(e){return !0}},f={}.toString,b=function(e){return f.call(e).slice(8,-1)},m="".split,h=g((function(){return !Object("z").propertyIsEnumerable(0)}))?function(e){return "String"==b(e)?m.call(e,""):Object(e)}:Object,y=function(e){if(null==e)throw TypeError("Can't call method on "+e);return e},E=function(e){return Object(y(e))},S=Math.ceil,v=Math.floor,k=function(e){return isNaN(e=+e)?0:(e>0?v:S)(e)},w=Math.min,A=function(e){return e>0?w(k(e),9007199254740991):0},T=function(e){return "object"==typeof e?null!==e:"function"==typeof e},_=Array.isArray||function(e){return "Array"==b(e)},x=!g((function(){return 7!=Object.defineProperty({},1,{get:function(){return 7}})[1]})),I=d.document,O=T(I)&&T(I.createElement),R=!x&&!g((function(){return 7!=Object.defineProperty((e="div",O?I.createElement(e):{}),"a",{get:function(){return 7}}).a;var e;})),N=function(e){if(!T(e))throw TypeError(String(e)+" is not an object");return e},L=function(e,t){if(!T(e))return e;var n,a;if(t&&"function"==typeof(n=e.toString)&&!T(a=n.call(e)))return a;if("function"==typeof(n=e.valueOf)&&!T(a=n.call(e)))return a;if(!t&&"function"==typeof(n=e.toString)&&!T(a=n.call(e)))return a;throw TypeError("Can't convert object to primitive value")},P=Object.defineProperty,C={f:x?P:function(e,t,n){if(N(e),t=L(t,!0),N(n),R)try{return P(e,t,n)}catch(e){}if("get"in n||"set"in n)throw TypeError("Accessors not supported");return "value"in n&&(e[t]=n.value),e}},F=function(e,t){return {enumerable:!(1&e),configurable:!(2&e),writable:!(4&e),value:t}},D=x?function(e,t,n){return C.f(e,t,F(1,n))}:function(e,t,n){return e[t]=n,e},M=function(e,t){try{D(d,e,t);}catch(n){d[e]=t;}return t},$=d["__core-js_shared__"]||M("__core-js_shared__",{}),B=o((function(e){(e.exports=function(e,t){return $[e]||($[e]=void 0!==t?t:{})})("versions",[]).push({version:"3.13.1",mode:"global",copyright:"© 2021 Denis Pushkarev (zloirock.ru)"});})),U={}.hasOwnProperty,z=Object.hasOwn||function(e,t){return U.call(E(e),t)},j=0,G=Math.random(),H=function(e){return "Symbol("+String(void 0===e?"":e)+")_"+(++j+G).toString(36)},q=d,Y=function(e){return "function"==typeof e?e:void 0},V=function(e,t){return arguments.length<2?Y(q[e])||Y(d[e]):q[e]&&q[e][t]||d[e]&&d[e][t]},W=V("navigator","userAgent")||"",X=d.process,Z=X&&X.versions,K=Z&&Z.v8;K?u=(l=K.split("."))[0]<4?1:l[0]+l[1]:W&&(!(l=W.match(/Edge\/(\d+)/))||l[1]>=74)&&(l=W.match(/Chrome\/(\d+)/))&&(u=l[1]);var J,Q,ee=u&&+u,te=!!Object.getOwnPropertySymbols&&!g((function(){var e=Symbol();return !String(e)||!(Object(e)instanceof Symbol)||!Symbol.sham&&ee&&ee<41})),ne=te&&!Symbol.sham&&"symbol"==typeof Symbol.iterator,ae=B("wks"),re=d.Symbol,ie=ne?re:re&&re.withoutSetter||H,se=function(e){return z(ae,e)&&(te||"string"==typeof ae[e])||(te&&z(re,e)?ae[e]=re[e]:ae[e]=ie("Symbol."+e)),ae[e]},oe=se("species"),le=function(e,t){var n;return _(e)&&("function"!=typeof(n=e.constructor)||n!==Array&&!_(n.prototype)?T(n)&&null===(n=n[oe])&&(n=void 0):n=void 0),new(void 0===n?Array:n)(0===t?0:t)},ue=[].push,ce=function(e){var t=1==e,n=2==e,a=3==e,r=4==e,i=6==e,s=7==e,o=5==e||i;return function(l,u,c,d){for(var g,f,b=E(l),m=h(b),y=p(u,c,3),S=A(m.length),v=0,k=d||le,w=t?k(l,S):n||s?k(l,0):void 0;S>v;v++)if((o||v in m)&&(f=y(g=m[v],v,b),e))if(t)w[v]=f;else if(f)switch(e){case 3:return !0;case 5:return g;case 6:return v;case 2:ue.call(w,g);}else switch(e){case 4:return !1;case 7:ue.call(w,g);}return i?-1:a||r?r:w}},de={forEach:ce(0),map:ce(1),filter:ce(2),some:ce(3),every:ce(4),find:ce(5),findIndex:ce(6),filterOut:ce(7)}.forEach,pe=!!(Q=[]["forEach"])&&g((function(){Q.call(null,J||function(){throw 1},1);}))?[].forEach:function(e){return de(this,e,arguments.length>1?arguments[1]:void 0)};for(var ge in {CSSRuleList:0,CSSStyleDeclaration:0,CSSValueList:0,ClientRectList:0,DOMRectList:0,DOMStringList:0,DOMTokenList:1,DataTransferItemList:0,FileList:0,HTMLAllCollection:0,HTMLCollection:0,HTMLFormElement:0,HTMLSelectElement:0,MediaList:0,MimeTypeArray:0,NamedNodeMap:0,NodeList:1,PaintRequestList:0,Plugin:0,PluginArray:0,SVGLengthList:0,SVGNumberList:0,SVGPathSegList:0,SVGPointList:0,SVGStringList:0,SVGTransformList:0,SourceBufferList:0,StyleSheetList:0,TextTrackCueList:0,TextTrackList:0,TouchList:0}){var fe=d[ge],be=fe&&fe.prototype;if(be&&be.forEach!==pe)try{D(be,"forEach",pe);}catch(e){be.forEach=pe;}}var me={}.propertyIsEnumerable,he=Object.getOwnPropertyDescriptor,ye={f:he&&!me.call({1:2},1)?function(e){var t=he(this,e);return !!t&&t.enumerable}:me},Ee=function(e){return h(y(e))},Se=Object.getOwnPropertyDescriptor,ve={f:x?Se:function(e,t){if(e=Ee(e),t=L(t,!0),R)try{return Se(e,t)}catch(e){}if(z(e,t))return F(!ye.f.call(e,t),e[t])}},ke=Function.toString;"function"!=typeof $.inspectSource&&($.inspectSource=function(e){return ke.call(e)});var we,Ae,Te,_e,xe=$.inspectSource,Ie=d.WeakMap,Oe="function"==typeof Ie&&/native code/.test(xe(Ie)),Re=B("keys"),Ne={},Le=d.WeakMap;if(Oe||$.state){var Pe=$.state||($.state=new Le),Ce=Pe.get,Fe=Pe.has,De=Pe.set;we=function(e,t){if(Fe.call(Pe,e))throw new TypeError("Object already initialized");return t.facade=e,De.call(Pe,e,t),t},Ae=function(e){return Ce.call(Pe,e)||{}},Te=function(e){return Fe.call(Pe,e)};}else {var Me=Re[_e="state"]||(Re[_e]=H(_e));Ne[Me]=!0,we=function(e,t){if(z(e,Me))throw new TypeError("Object already initialized");return t.facade=e,D(e,Me,t),t},Ae=function(e){return z(e,Me)?e[Me]:{}},Te=function(e){return z(e,Me)};}var $e={set:we,get:Ae,has:Te,enforce:function(e){return Te(e)?Ae(e):we(e,{})},getterFor:function(e){return function(t){var n;if(!T(t)||(n=Ae(t)).type!==e)throw TypeError("Incompatible receiver, "+e+" required");return n}}},Be=o((function(e){var t=$e.get,n=$e.enforce,a=String(String).split("String");(e.exports=function(e,t,r,i){var s,o=!!i&&!!i.unsafe,l=!!i&&!!i.enumerable,u=!!i&&!!i.noTargetGet;"function"==typeof r&&("string"!=typeof t||z(r,"name")||D(r,"name",t),(s=n(r)).source||(s.source=a.join("string"==typeof t?t:""))),e!==d?(o?!u&&e[t]&&(l=!0):delete e[t],l?e[t]=r:D(e,t,r)):l?e[t]=r:M(t,r);})(Function.prototype,"toString",(function(){return "function"==typeof this&&t(this).source||xe(this)}));})),Ue=Math.max,ze=Math.min,je=function(e){return function(t,n,a){var r,i=Ee(t),s=A(i.length),o=function(e,t){var n=k(e);return n<0?Ue(n+t,0):ze(n,t)}(a,s);if(e&&n!=n){for(;s>o;)if((r=i[o++])!=r)return !0}else for(;s>o;o++)if((e||o in i)&&i[o]===n)return e||o||0;return !e&&-1}},Ge={includes:je(!0),indexOf:je(!1)}.indexOf,He=function(e,t){var n,a=Ee(e),r=0,i=[];for(n in a)!z(Ne,n)&&z(a,n)&&i.push(n);for(;t.length>r;)z(a,n=t[r++])&&(~Ge(i,n)||i.push(n));return i},qe=["constructor","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","toLocaleString","toString","valueOf"],Ye=qe.concat("length","prototype"),Ve={f:Object.getOwnPropertyNames||function(e){return He(e,Ye)}},We={f:Object.getOwnPropertySymbols},Xe=V("Reflect","ownKeys")||function(e){var t=Ve.f(N(e)),n=We.f;return n?t.concat(n(e)):t},Ze=function(e,t){for(var n=Xe(t),a=C.f,r=ve.f,i=0;i<n.length;i++){var s=n[i];z(e,s)||a(e,s,r(t,s));}},Ke=/#|\.prototype\./,Je=function(e,t){var n=et[Qe(e)];return n==nt||n!=tt&&("function"==typeof t?g(t):!!t)},Qe=Je.normalize=function(e){return String(e).replace(Ke,".").toLowerCase()},et=Je.data={},tt=Je.NATIVE="N",nt=Je.POLYFILL="P",at=Je,rt=ve.f,it=function(e,t){var n,a,r,i,s,o=e.target,l=e.global,u=e.stat;if(n=l?d:u?d[o]||M(o,{}):(d[o]||{}).prototype)for(a in t){if(i=t[a],r=e.noTargetGet?(s=rt(n,a))&&s.value:n[a],!at(l?a:o+(u?".":"#")+a,e.forced)&&void 0!==r){if(typeof i==typeof r)continue;Ze(i,r);}(e.sham||r&&r.sham)&&D(i,"sham",!0),Be(n,a,i,e);}},st=Object.keys||function(e){return He(e,qe)},ot=Object.assign,lt=Object.defineProperty,ut=!ot||g((function(){if(x&&1!==ot({b:1},ot(lt({},"a",{enumerable:!0,get:function(){lt(this,"b",{value:3,enumerable:!1});}}),{b:2})).b)return !0;var e={},t={},n=Symbol(),a="abcdefghijklmnopqrst";return e[n]=7,a.split("").forEach((function(e){t[e]=e;})),7!=ot({},e)[n]||st(ot({},t)).join("")!=a}))?function(e,t){for(var n=E(e),a=arguments.length,r=1,i=We.f,s=ye.f;a>r;)for(var o,l=h(arguments[r++]),u=i?st(l).concat(i(l)):st(l),c=u.length,d=0;c>d;)o=u[d++],x&&!s.call(l,o)||(n[o]=l[o]);return n}:ot;it({target:"Object",stat:!0,forced:Object.assign!==ut},{assign:ut});var ct=o((function(e){var t=function(e){var t=/\blang(?:uage)?-([\w-]+)\b/i,n=0,a={},r={manual:e.Prism&&e.Prism.manual,disableWorkerMessageHandler:e.Prism&&e.Prism.disableWorkerMessageHandler,util:{encode:function e(t){return t instanceof i?new i(t.type,e(t.content),t.alias):Array.isArray(t)?t.map(e):t.replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/\u00a0/g," ")},type:function(e){return Object.prototype.toString.call(e).slice(8,-1)},objId:function(e){return e.__id||Object.defineProperty(e,"__id",{value:++n}),e.__id},clone:function e(t,n){var a,i;switch(n=n||{},r.util.type(t)){case"Object":if(i=r.util.objId(t),n[i])return n[i];for(var s in a={},n[i]=a,t)t.hasOwnProperty(s)&&(a[s]=e(t[s],n));return a;case"Array":return i=r.util.objId(t),n[i]?n[i]:(a=[],n[i]=a,t.forEach((function(t,r){a[r]=e(t,n);})),a);default:return t}},getLanguage:function(e){for(;e&&!t.test(e.className);)e=e.parentElement;return e?(e.className.match(t)||[,"none"])[1].toLowerCase():"none"},currentScript:function(){if("undefined"==typeof document)return null;if("currentScript"in document)return document.currentScript;try{throw new Error}catch(a){var e=(/at [^(\r\n]*\((.*):.+:.+\)$/i.exec(a.stack)||[])[1];if(e){var t=document.getElementsByTagName("script");for(var n in t)if(t[n].src==e)return t[n]}return null}},isActive:function(e,t,n){for(var a="no-"+t;e;){var r=e.classList;if(r.contains(t))return !0;if(r.contains(a))return !1;e=e.parentElement;}return !!n}},languages:{plain:a,plaintext:a,text:a,txt:a,extend:function(e,t){var n=r.util.clone(r.languages[e]);for(var a in t)n[a]=t[a];return n},insertBefore:function(e,t,n,a){var i=(a=a||r.languages)[e],s={};for(var o in i)if(i.hasOwnProperty(o)){if(o==t)for(var l in n)n.hasOwnProperty(l)&&(s[l]=n[l]);n.hasOwnProperty(o)||(s[o]=i[o]);}var u=a[e];return a[e]=s,r.languages.DFS(r.languages,(function(t,n){n===u&&t!=e&&(this[t]=s);})),s},DFS:function e(t,n,a,i){i=i||{};var s=r.util.objId;for(var o in t)if(t.hasOwnProperty(o)){n.call(t,o,t[o],a||o);var l=t[o],u=r.util.type(l);"Object"!==u||i[s(l)]?"Array"!==u||i[s(l)]||(i[s(l)]=!0,e(l,n,o,i)):(i[s(l)]=!0,e(l,n,null,i));}}},plugins:{},highlightAll:function(e,t){r.highlightAllUnder(document,e,t);},highlightAllUnder:function(e,t,n){var a={callback:n,container:e,selector:'code[class*="language-"], [class*="language-"] code, code[class*="lang-"], [class*="lang-"] code'};r.hooks.run("before-highlightall",a),a.elements=Array.prototype.slice.apply(a.container.querySelectorAll(a.selector)),r.hooks.run("before-all-elements-highlight",a);for(var i,s=0;i=a.elements[s++];)r.highlightElement(i,!0===t,a.callback);},highlightElement:function(n,a,i){var s=r.util.getLanguage(n),o=r.languages[s];n.className=n.className.replace(t,"").replace(/\s+/g," ")+" language-"+s;var l=n.parentElement;l&&"pre"===l.nodeName.toLowerCase()&&(l.className=l.className.replace(t,"").replace(/\s+/g," ")+" language-"+s);var u={element:n,language:s,grammar:o,code:n.textContent};function c(e){u.highlightedCode=e,r.hooks.run("before-insert",u),u.element.innerHTML=u.highlightedCode,r.hooks.run("after-highlight",u),r.hooks.run("complete",u),i&&i.call(u.element);}if(r.hooks.run("before-sanity-check",u),(l=u.element.parentElement)&&"pre"===l.nodeName.toLowerCase()&&!l.hasAttribute("tabindex")&&l.setAttribute("tabindex","0"),!u.code)return r.hooks.run("complete",u),void(i&&i.call(u.element));if(r.hooks.run("before-highlight",u),u.grammar)if(a&&e.Worker){var d=new Worker(r.filename);d.onmessage=function(e){c(e.data);},d.postMessage(JSON.stringify({language:u.language,code:u.code,immediateClose:!0}));}else c(r.highlight(u.code,u.grammar,u.language));else c(r.util.encode(u.code));},highlight:function(e,t,n){var a={code:e,grammar:t,language:n};return r.hooks.run("before-tokenize",a),a.tokens=r.tokenize(a.code,a.grammar),r.hooks.run("after-tokenize",a),i.stringify(r.util.encode(a.tokens),a.language)},tokenize:function(e,t){var n=t.rest;if(n){for(var a in n)t[a]=n[a];delete t.rest;}var r=new l;return u(r,r.head,e),o(e,r,t,r.head,0),function(e){var t=[],n=e.head.next;for(;n!==e.tail;)t.push(n.value),n=n.next;return t}(r)},hooks:{all:{},add:function(e,t){var n=r.hooks.all;n[e]=n[e]||[],n[e].push(t);},run:function(e,t){var n=r.hooks.all[e];if(n&&n.length)for(var a,i=0;a=n[i++];)a(t);}},Token:i};function i(e,t,n,a){this.type=e,this.content=t,this.alias=n,this.length=0|(a||"").length;}function s(e,t,n,a){e.lastIndex=t;var r=e.exec(n);if(r&&a&&r[1]){var i=r[1].length;r.index+=i,r[0]=r[0].slice(i);}return r}function o(e,t,n,a,l,d){for(var p in n)if(n.hasOwnProperty(p)&&n[p]){var g=n[p];g=Array.isArray(g)?g:[g];for(var f=0;f<g.length;++f){if(d&&d.cause==p+","+f)return;var b=g[f],m=b.inside,h=!!b.lookbehind,y=!!b.greedy,E=b.alias;if(y&&!b.pattern.global){var S=b.pattern.toString().match(/[imsuy]*$/)[0];b.pattern=RegExp(b.pattern.source,S+"g");}for(var v=b.pattern||b,k=a.next,w=l;k!==t.tail&&!(d&&w>=d.reach);w+=k.value.length,k=k.next){var A=k.value;if(t.length>e.length)return;if(!(A instanceof i)){var T,_=1;if(y){if(!(T=s(v,w,e,h)))break;var x=T.index,I=T.index+T[0].length,O=w;for(O+=k.value.length;x>=O;)O+=(k=k.next).value.length;if(w=O-=k.value.length,k.value instanceof i)continue;for(var R=k;R!==t.tail&&(O<I||"string"==typeof R.value);R=R.next)_++,O+=R.value.length;_--,A=e.slice(w,O),T.index-=w;}else if(!(T=s(v,0,A,h)))continue;x=T.index;var N=T[0],L=A.slice(0,x),P=A.slice(x+N.length),C=w+A.length;d&&C>d.reach&&(d.reach=C);var F=k.prev;if(L&&(F=u(t,F,L),w+=L.length),c(t,F,_),k=u(t,F,new i(p,m?r.tokenize(N,m):N,E,N)),P&&u(t,k,P),_>1){var D={cause:p+","+f,reach:C};o(e,t,n,k.prev,w,D),d&&D.reach>d.reach&&(d.reach=D.reach);}}}}}}function l(){var e={value:null,prev:null,next:null},t={value:null,prev:e,next:null};e.next=t,this.head=e,this.tail=t,this.length=0;}function u(e,t,n){var a=t.next,r={value:n,prev:t,next:a};return t.next=r,a.prev=r,e.length++,r}function c(e,t,n){for(var a=t.next,r=0;r<n&&a!==e.tail;r++)a=a.next;t.next=a,a.prev=t,e.length-=r;}if(e.Prism=r,i.stringify=function e(t,n){if("string"==typeof t)return t;if(Array.isArray(t)){var a="";return t.forEach((function(t){a+=e(t,n);})),a}var i={type:t.type,content:e(t.content,n),tag:"span",classes:["token",t.type],attributes:{},language:n},s=t.alias;s&&(Array.isArray(s)?Array.prototype.push.apply(i.classes,s):i.classes.push(s)),r.hooks.run("wrap",i);var o="";for(var l in i.attributes)o+=" "+l+'="'+(i.attributes[l]||"").replace(/"/g,"&quot;")+'"';return "<"+i.tag+' class="'+i.classes.join(" ")+'"'+o+">"+i.content+"</"+i.tag+">"},!e.document)return e.addEventListener?(r.disableWorkerMessageHandler||e.addEventListener("message",(function(t){var n=JSON.parse(t.data),a=n.language,i=n.code,s=n.immediateClose;e.postMessage(r.highlight(i,r.languages[a],a)),s&&e.close();}),!1),r):r;var d=r.util.currentScript();function p(){r.manual||r.highlightAll();}if(d&&(r.filename=d.src,d.hasAttribute("data-manual")&&(r.manual=!0)),!r.manual){var g=document.readyState;"loading"===g||"interactive"===g&&d&&d.defer?document.addEventListener("DOMContentLoaded",p):window.requestAnimationFrame?window.requestAnimationFrame(p):window.setTimeout(p,16);}return r}("undefined"!=typeof window?window:"undefined"!=typeof WorkerGlobalScope&&self instanceof WorkerGlobalScope?self:{});
  /**
   * Prism: Lightweight, robust, elegant syntax highlighting
   *
   * @license MIT <https://opensource.org/licenses/MIT>
   * @author Lea Verou <https://lea.verou.me>
   * @namespace
   * @public
   */e.exports&&(e.exports=t),void 0!==s&&(s.Prism=t),t.languages.markup={comment:/<!--[\s\S]*?-->/,prolog:/<\?[\s\S]+?\?>/,doctype:{pattern:/<!DOCTYPE(?:[^>"'[\]]|"[^"]*"|'[^']*')+(?:\[(?:[^<"'\]]|"[^"]*"|'[^']*'|<(?!!--)|<!--(?:[^-]|-(?!->))*-->)*\]\s*)?>/i,greedy:!0,inside:{"internal-subset":{pattern:/(^[^\[]*\[)[\s\S]+(?=\]>$)/,lookbehind:!0,greedy:!0,inside:null},string:{pattern:/"[^"]*"|'[^']*'/,greedy:!0},punctuation:/^<!|>$|[[\]]/,"doctype-tag":/^DOCTYPE/,name:/[^\s<>'"]+/}},cdata:/<!\[CDATA\[[\s\S]*?\]\]>/i,tag:{pattern:/<\/?(?!\d)[^\s>\/=$<%]+(?:\s(?:\s*[^\s>\/=]+(?:\s*=\s*(?:"[^"]*"|'[^']*'|[^\s'">=]+(?=[\s>]))|(?=[\s/>])))+)?\s*\/?>/,greedy:!0,inside:{tag:{pattern:/^<\/?[^\s>\/]+/,inside:{punctuation:/^<\/?/,namespace:/^[^\s>\/:]+:/}},"special-attr":[],"attr-value":{pattern:/=\s*(?:"[^"]*"|'[^']*'|[^\s'">=]+)/,inside:{punctuation:[{pattern:/^=/,alias:"attr-equals"},/"|'/]}},punctuation:/\/?>/,"attr-name":{pattern:/[^\s>\/]+/,inside:{namespace:/^[^\s>\/:]+:/}}}},entity:[{pattern:/&[\da-z]{1,8};/i,alias:"named-entity"},/&#x?[\da-f]{1,8};/i]},t.languages.markup.tag.inside["attr-value"].inside.entity=t.languages.markup.entity,t.languages.markup.doctype.inside["internal-subset"].inside=t.languages.markup,t.hooks.add("wrap",(function(e){"entity"===e.type&&(e.attributes.title=e.content.replace(/&amp;/,"&"));})),Object.defineProperty(t.languages.markup.tag,"addInlined",{value:function(e,n){var a={};a["language-"+n]={pattern:/(^<!\[CDATA\[)[\s\S]+?(?=\]\]>$)/i,lookbehind:!0,inside:t.languages[n]},a.cdata=/^<!\[CDATA\[|\]\]>$/i;var r={"included-cdata":{pattern:/<!\[CDATA\[[\s\S]*?\]\]>/i,inside:a}};r["language-"+n]={pattern:/[\s\S]+/,inside:t.languages[n]};var i={};i[e]={pattern:RegExp(/(<__[^>]*>)(?:<!\[CDATA\[(?:[^\]]|\](?!\]>))*\]\]>|(?!<!\[CDATA\[)[\s\S])*?(?=<\/__>)/.source.replace(/__/g,(function(){return e})),"i"),lookbehind:!0,greedy:!0,inside:r},t.languages.insertBefore("markup","cdata",i);}}),Object.defineProperty(t.languages.markup.tag,"addAttribute",{value:function(e,n){t.languages.markup.tag.inside["special-attr"].push({pattern:RegExp(/(^|["'\s])/.source+"(?:"+e+")"+/\s*=\s*(?:"[^"]*"|'[^']*'|[^\s'">=]+(?=[\s>]))/.source,"i"),lookbehind:!0,inside:{"attr-name":/^[^\s=]+/,"attr-value":{pattern:/=[\s\S]+/,inside:{value:{pattern:/(^=\s*(["']|(?!["'])))\S[\s\S]*(?=\2$)/,lookbehind:!0,alias:[n,"language-"+n],inside:t.languages[n]},punctuation:[{pattern:/^=/,alias:"attr-equals"},/"|'/]}}}});}}),t.languages.html=t.languages.markup,t.languages.mathml=t.languages.markup,t.languages.svg=t.languages.markup,t.languages.xml=t.languages.extend("markup",{}),t.languages.ssml=t.languages.xml,t.languages.atom=t.languages.xml,t.languages.rss=t.languages.xml,function(e){var t=/(?:"(?:\\(?:\r\n|[\s\S])|[^"\\\r\n])*"|'(?:\\(?:\r\n|[\s\S])|[^'\\\r\n])*')/;e.languages.css={comment:/\/\*[\s\S]*?\*\//,atrule:{pattern:/@[\w-](?:[^;{\s]|\s+(?![\s{]))*(?:;|(?=\s*\{))/,inside:{rule:/^@[\w-]+/,"selector-function-argument":{pattern:/(\bselector\s*\(\s*(?![\s)]))(?:[^()\s]|\s+(?![\s)])|\((?:[^()]|\([^()]*\))*\))+(?=\s*\))/,lookbehind:!0,alias:"selector"},keyword:{pattern:/(^|[^\w-])(?:and|not|only|or)(?![\w-])/,lookbehind:!0}}},url:{pattern:RegExp("\\burl\\((?:"+t.source+"|"+/(?:[^\\\r\n()"']|\\[\s\S])*/.source+")\\)","i"),greedy:!0,inside:{function:/^url/i,punctuation:/^\(|\)$/,string:{pattern:RegExp("^"+t.source+"$"),alias:"url"}}},selector:{pattern:RegExp("(^|[{}\\s])[^{}\\s](?:[^{};\"'\\s]|\\s+(?![\\s{])|"+t.source+")*(?=\\s*\\{)"),lookbehind:!0},string:{pattern:t,greedy:!0},property:{pattern:/(^|[^-\w\xA0-\uFFFF])(?!\s)[-_a-z\xA0-\uFFFF](?:(?!\s)[-\w\xA0-\uFFFF])*(?=\s*:)/i,lookbehind:!0},important:/!important\b/i,function:{pattern:/(^|[^-a-z0-9])[-a-z0-9]+(?=\()/i,lookbehind:!0},punctuation:/[(){};:,]/},e.languages.css.atrule.inside.rest=e.languages.css;var n=e.languages.markup;n&&(n.tag.addInlined("style","css"),n.tag.addAttribute("style","css"));}(t),t.languages.clike={comment:[{pattern:/(^|[^\\])\/\*[\s\S]*?(?:\*\/|$)/,lookbehind:!0,greedy:!0},{pattern:/(^|[^\\:])\/\/.*/,lookbehind:!0,greedy:!0}],string:{pattern:/(["'])(?:\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1/,greedy:!0},"class-name":{pattern:/(\b(?:class|interface|extends|implements|trait|instanceof|new)\s+|\bcatch\s+\()[\w.\\]+/i,lookbehind:!0,inside:{punctuation:/[.\\]/}},keyword:/\b(?:if|else|while|do|for|return|in|instanceof|function|new|try|throw|catch|finally|null|break|continue)\b/,boolean:/\b(?:true|false)\b/,function:/\b\w+(?=\()/,number:/\b0x[\da-f]+\b|(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:e[+-]?\d+)?/i,operator:/[<>]=?|[!=]=?=?|--?|\+\+?|&&?|\|\|?|[?*/~^%]/,punctuation:/[{}[\];(),.:]/},t.languages.javascript=t.languages.extend("clike",{"class-name":[t.languages.clike["class-name"],{pattern:/(^|[^$\w\xA0-\uFFFF])(?!\s)[_$A-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\.(?:prototype|constructor))/,lookbehind:!0}],keyword:[{pattern:/((?:^|\})\s*)catch\b/,lookbehind:!0},{pattern:/(^|[^.]|\.\.\.\s*)\b(?:as|assert(?=\s*\{)|async(?=\s*(?:function\b|\(|[$\w\xA0-\uFFFF]|$))|await|break|case|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally(?=\s*(?:\{|$))|for|from(?=\s*(?:['"]|$))|function|(?:get|set)(?=\s*(?:[#\[$\w\xA0-\uFFFF]|$))|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)\b/,lookbehind:!0}],function:/#?(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\s*(?:\.\s*(?:apply|bind|call)\s*)?\()/,number:/\b(?:(?:0[xX](?:[\dA-Fa-f](?:_[\dA-Fa-f])?)+|0[bB](?:[01](?:_[01])?)+|0[oO](?:[0-7](?:_[0-7])?)+)n?|(?:\d(?:_\d)?)+n|NaN|Infinity)\b|(?:\b(?:\d(?:_\d)?)+\.?(?:\d(?:_\d)?)*|\B\.(?:\d(?:_\d)?)+)(?:[Ee][+-]?(?:\d(?:_\d)?)+)?/,operator:/--|\+\+|\*\*=?|=>|&&=?|\|\|=?|[!=]==|<<=?|>>>?=?|[-+*/%&|^!=<>]=?|\.{3}|\?\?=?|\?\.?|[~:]/}),t.languages.javascript["class-name"][0].pattern=/(\b(?:class|interface|extends|implements|instanceof|new)\s+)[\w.\\]+/,t.languages.insertBefore("javascript","keyword",{regex:{pattern:/((?:^|[^$\w\xA0-\uFFFF."'\])\s]|\b(?:return|yield))\s*)\/(?:\[(?:[^\]\\\r\n]|\\.)*\]|\\.|[^/\\\[\r\n])+\/[dgimyus]{0,7}(?=(?:\s|\/\*(?:[^*]|\*(?!\/))*\*\/)*(?:$|[\r\n,.;:})\]]|\/\/))/,lookbehind:!0,greedy:!0,inside:{"regex-source":{pattern:/^(\/)[\s\S]+(?=\/[a-z]*$)/,lookbehind:!0,alias:"language-regex",inside:t.languages.regex},"regex-delimiter":/^\/|\/$/,"regex-flags":/^[a-z]+$/}},"function-variable":{pattern:/#?(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\s*[=:]\s*(?:async\s*)?(?:\bfunction\b|(?:\((?:[^()]|\([^()]*\))*\)|(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*)\s*=>))/,alias:"function"},parameter:[{pattern:/(function(?:\s+(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*)?\s*\(\s*)(?!\s)(?:[^()\s]|\s+(?![\s)])|\([^()]*\))+(?=\s*\))/,lookbehind:!0,inside:t.languages.javascript},{pattern:/(^|[^$\w\xA0-\uFFFF])(?!\s)[_$a-z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\s*=>)/i,lookbehind:!0,inside:t.languages.javascript},{pattern:/(\(\s*)(?!\s)(?:[^()\s]|\s+(?![\s)])|\([^()]*\))+(?=\s*\)\s*=>)/,lookbehind:!0,inside:t.languages.javascript},{pattern:/((?:\b|\s|^)(?!(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)(?![$\w\xA0-\uFFFF]))(?:(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*\s*)\(\s*|\]\s*\(\s*)(?!\s)(?:[^()\s]|\s+(?![\s)])|\([^()]*\))+(?=\s*\)\s*\{)/,lookbehind:!0,inside:t.languages.javascript}],constant:/\b[A-Z](?:[A-Z_]|\dx?)*\b/}),t.languages.insertBefore("javascript","string",{hashbang:{pattern:/^#!.*/,greedy:!0,alias:"comment"},"template-string":{pattern:/`(?:\\[\s\S]|\$\{(?:[^{}]|\{(?:[^{}]|\{[^}]*\})*\})+\}|(?!\$\{)[^\\`])*`/,greedy:!0,inside:{"template-punctuation":{pattern:/^`|`$/,alias:"string"},interpolation:{pattern:/((?:^|[^\\])(?:\\{2})*)\$\{(?:[^{}]|\{(?:[^{}]|\{[^}]*\})*\})+\}/,lookbehind:!0,inside:{"interpolation-punctuation":{pattern:/^\$\{|\}$/,alias:"punctuation"},rest:t.languages.javascript}},string:/[\s\S]+/}}}),t.languages.markup&&(t.languages.markup.tag.addInlined("script","javascript"),t.languages.markup.tag.addAttribute(/on(?:abort|blur|change|click|composition(?:end|start|update)|dblclick|error|focus(?:in|out)?|key(?:down|up)|load|mouse(?:down|enter|leave|move|out|over|up)|reset|resize|scroll|select|slotchange|submit|unload|wheel)/.source,"javascript")),t.languages.js=t.languages.javascript,function(){if(void 0!==t&&"undefined"!=typeof document){Element.prototype.matches||(Element.prototype.matches=Element.prototype.msMatchesSelector||Element.prototype.webkitMatchesSelector);var e={js:"javascript",py:"python",rb:"ruby",ps1:"powershell",psm1:"powershell",sh:"bash",bat:"batch",h:"c",tex:"latex"},n="data-src-status",a="loading",r="loaded",i='pre[data-src]:not([data-src-status="loaded"]):not([data-src-status="loading"])',s=/\blang(?:uage)?-([\w-]+)\b/i;t.hooks.add("before-highlightall",(function(e){e.selector+=", "+i;})),t.hooks.add("before-sanity-check",(function(s){var o=s.element;if(o.matches(i)){s.code="",o.setAttribute(n,a);var u=o.appendChild(document.createElement("CODE"));u.textContent="Loading…";var c=o.getAttribute("data-src"),d=s.language;if("none"===d){var p=(/\.(\w+)$/.exec(c)||[,"none"])[1];d=e[p]||p;}l(u,d),l(o,d);var g=t.plugins.autoloader;g&&g.loadLanguages(d);var f=new XMLHttpRequest;f.open("GET",c,!0),f.onreadystatechange=function(){var e,a;4==f.readyState&&(f.status<400&&f.responseText?(o.setAttribute(n,r),u.textContent=f.responseText,t.highlightElement(u)):(o.setAttribute(n,"failed"),f.status>=400?u.textContent=(e=f.status,a=f.statusText,"✖ Error "+e+" while fetching file: "+a):u.textContent="✖ Error: File does not exist or is empty"));},f.send(null);}})),t.plugins.fileHighlight={highlight:function(e){for(var n,a=(e||document).querySelectorAll(i),r=0;n=a[r++];)t.highlightElement(n);}};var o=!1;t.fileHighlight=function(){o||(console.warn("Prism.fileHighlight is deprecated. Use `Prism.plugins.fileHighlight.highlight` instead."),o=!0),t.plugins.fileHighlight.highlight.apply(this,arguments);};}function l(e,t){var n=e.className;n=n.replace(s," ")+" language-"+t,e.className=n.replace(/\s+/g," ").trim();}}();}));!function(e){var t=e.util.clone(e.languages.javascript),n=/(?:\s|\/\/.*(?!.)|\/\*(?:[^*]|\*(?!\/))\*\/)/.source,a=/(?:\{(?:\{(?:\{[^{}]*\}|[^{}])*\}|[^{}])*\})/.source,r=/(?:\{<S>*\.{3}(?:[^{}]|<BRACES>)*\})/.source;function i(e,t){return e=e.replace(/<S>/g,(function(){return n})).replace(/<BRACES>/g,(function(){return a})).replace(/<SPREAD>/g,(function(){return r})),RegExp(e,t)}r=i(r).source,e.languages.jsx=e.languages.extend("markup",t),e.languages.jsx.tag.pattern=i(/<\/?(?:[\w.:-]+(?:<S>+(?:[\w.:$-]+(?:=(?:"(?:\\[\s\S]|[^\\"])*"|'(?:\\[\s\S]|[^\\'])*'|[^\s{'"/>=]+|<BRACES>))?|<SPREAD>))*<S>*\/?)?>/.source),e.languages.jsx.tag.inside.tag.pattern=/^<\/?[^\s>\/]*/i,e.languages.jsx.tag.inside["attr-value"].pattern=/=(?!\{)(?:"(?:\\[\s\S]|[^\\"])*"|'(?:\\[\s\S]|[^\\'])*'|[^\s'">]+)/i,e.languages.jsx.tag.inside.tag.inside["class-name"]=/^[A-Z]\w*(?:\.[A-Z]\w*)*$/,e.languages.jsx.tag.inside.comment=t.comment,e.languages.insertBefore("inside","attr-name",{spread:{pattern:i(/<SPREAD>/.source),inside:e.languages.jsx}},e.languages.jsx.tag),e.languages.insertBefore("inside","special-attr",{script:{pattern:i(/=<BRACES>/.source),inside:{"script-punctuation":{pattern:/^=(?=\{)/,alias:"punctuation"},rest:e.languages.jsx},alias:"language-javascript"}},e.languages.jsx.tag);var s=function(e){return e?"string"==typeof e?e:"string"==typeof e.content?e.content:e.content.map(s).join(""):""},o=function(t){for(var n=[],a=0;a<t.length;a++){var r=t[a],i=!1;if("string"!=typeof r&&("tag"===r.type&&r.content[0]&&"tag"===r.content[0].type?"</"===r.content[0].content[0].content?n.length>0&&n[n.length-1].tagName===s(r.content[0].content[1])&&n.pop():"/>"===r.content[r.content.length-1].content||n.push({tagName:s(r.content[0].content[1]),openedBraces:0}):n.length>0&&"punctuation"===r.type&&"{"===r.content?n[n.length-1].openedBraces++:n.length>0&&n[n.length-1].openedBraces>0&&"punctuation"===r.type&&"}"===r.content?n[n.length-1].openedBraces--:i=!0),(i||"string"==typeof r)&&n.length>0&&0===n[n.length-1].openedBraces){var l=s(r);a<t.length-1&&("string"==typeof t[a+1]||"plain-text"===t[a+1].type)&&(l+=s(t[a+1]),t.splice(a+1,1)),a>0&&("string"==typeof t[a-1]||"plain-text"===t[a-1].type)&&(l=s(t[a-1])+l,t.splice(a-1,1),a--),t[a]=new e.Token("plain-text",l,null,l);}r.content&&"string"!=typeof r.content&&o(r.content);}};e.hooks.add("after-tokenize",(function(e){"jsx"!==e.language&&"tsx"!==e.language||o(e.tokens);}));}(Prism),function(e){e.languages.typescript=e.languages.extend("javascript",{"class-name":{pattern:/(\b(?:class|extends|implements|instanceof|interface|new|type)\s+)(?!keyof\b)(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?:\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>)?/,lookbehind:!0,greedy:!0,inside:null},builtin:/\b(?:string|Function|any|number|boolean|Array|symbol|console|Promise|unknown|never)\b/}),e.languages.typescript.keyword.push(/\b(?:abstract|as|declare|implements|is|keyof|readonly|require)\b/,/\b(?:asserts|infer|interface|module|namespace|type)(?!\s*[^\s_${}*a-zA-Z\xA0-\uFFFF])/),delete e.languages.typescript.parameter;var t=e.languages.extend("typescript",{});delete t["class-name"],e.languages.typescript["class-name"].inside=t,e.languages.insertBefore("typescript","function",{decorator:{pattern:/@[$\w\xA0-\uFFFF]+/,inside:{at:{pattern:/^@/,alias:"operator"},function:/^[\s\S]+/}},"generic-function":{pattern:/#?(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>(?=\s*\()/,greedy:!0,inside:{function:/^#?(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*/,generic:{pattern:/<[\s\S]+/,alias:"class-name",inside:t}}}}),e.languages.ts=e.languages.typescript;}(Prism),Prism.languages.markup={comment:/<!--[\s\S]*?-->/,prolog:/<\?[\s\S]+?\?>/,doctype:{pattern:/<!DOCTYPE(?:[^>"'[\]]|"[^"]*"|'[^']*')+(?:\[(?:[^<"'\]]|"[^"]*"|'[^']*'|<(?!!--)|<!--(?:[^-]|-(?!->))*-->)*\]\s*)?>/i,greedy:!0,inside:{"internal-subset":{pattern:/(^[^\[]*\[)[\s\S]+(?=\]>$)/,lookbehind:!0,greedy:!0,inside:null},string:{pattern:/"[^"]*"|'[^']*'/,greedy:!0},punctuation:/^<!|>$|[[\]]/,"doctype-tag":/^DOCTYPE/,name:/[^\s<>'"]+/}},cdata:/<!\[CDATA\[[\s\S]*?\]\]>/i,tag:{pattern:/<\/?(?!\d)[^\s>\/=$<%]+(?:\s(?:\s*[^\s>\/=]+(?:\s*=\s*(?:"[^"]*"|'[^']*'|[^\s'">=]+(?=[\s>]))|(?=[\s/>])))+)?\s*\/?>/,greedy:!0,inside:{tag:{pattern:/^<\/?[^\s>\/]+/,inside:{punctuation:/^<\/?/,namespace:/^[^\s>\/:]+:/}},"special-attr":[],"attr-value":{pattern:/=\s*(?:"[^"]*"|'[^']*'|[^\s'">=]+)/,inside:{punctuation:[{pattern:/^=/,alias:"attr-equals"},/"|'/]}},punctuation:/\/?>/,"attr-name":{pattern:/[^\s>\/]+/,inside:{namespace:/^[^\s>\/:]+:/}}}},entity:[{pattern:/&[\da-z]{1,8};/i,alias:"named-entity"},/&#x?[\da-f]{1,8};/i]},Prism.languages.markup.tag.inside["attr-value"].inside.entity=Prism.languages.markup.entity,Prism.languages.markup.doctype.inside["internal-subset"].inside=Prism.languages.markup,Prism.hooks.add("wrap",(function(e){"entity"===e.type&&(e.attributes.title=e.content.replace(/&amp;/,"&"));})),Object.defineProperty(Prism.languages.markup.tag,"addInlined",{value:function(e,t){var n={};n["language-"+t]={pattern:/(^<!\[CDATA\[)[\s\S]+?(?=\]\]>$)/i,lookbehind:!0,inside:Prism.languages[t]},n.cdata=/^<!\[CDATA\[|\]\]>$/i;var a={"included-cdata":{pattern:/<!\[CDATA\[[\s\S]*?\]\]>/i,inside:n}};a["language-"+t]={pattern:/[\s\S]+/,inside:Prism.languages[t]};var r={};r[e]={pattern:RegExp(/(<__[^>]*>)(?:<!\[CDATA\[(?:[^\]]|\](?!\]>))*\]\]>|(?!<!\[CDATA\[)[\s\S])*?(?=<\/__>)/.source.replace(/__/g,(function(){return e})),"i"),lookbehind:!0,greedy:!0,inside:a},Prism.languages.insertBefore("markup","cdata",r);}}),Object.defineProperty(Prism.languages.markup.tag,"addAttribute",{value:function(e,t){Prism.languages.markup.tag.inside["special-attr"].push({pattern:RegExp(/(^|["'\s])/.source+"(?:"+e+")"+/\s*=\s*(?:"[^"]*"|'[^']*'|[^\s'">=]+(?=[\s>]))/.source,"i"),lookbehind:!0,inside:{"attr-name":/^[^\s=]+/,"attr-value":{pattern:/=[\s\S]+/,inside:{value:{pattern:/(^=\s*(["']|(?!["'])))\S[\s\S]*(?=\2$)/,lookbehind:!0,alias:[t,"language-"+t],inside:Prism.languages[t]},punctuation:[{pattern:/^=/,alias:"attr-equals"},/"|'/]}}}});}}),Prism.languages.html=Prism.languages.markup,Prism.languages.mathml=Prism.languages.markup,Prism.languages.svg=Prism.languages.markup,Prism.languages.xml=Prism.languages.extend("markup",{}),Prism.languages.ssml=Prism.languages.xml,Prism.languages.atom=Prism.languages.xml,Prism.languages.rss=Prism.languages.xml,Prism.languages.go=Prism.languages.extend("clike",{string:{pattern:/(["'`])(?:\\[\s\S]|(?!\1)[^\\])*\1/,greedy:!0},keyword:/\b(?:break|case|chan|const|continue|default|defer|else|fallthrough|for|func|go(?:to)?|if|import|interface|map|package|range|return|select|struct|switch|type|var)\b/,boolean:/\b(?:_|iota|nil|true|false)\b/,number:/(?:\b0x[a-f\d]+|(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:e[-+]?\d+)?)i?/i,operator:/[*\/%^!=]=?|\+[=+]?|-[=-]?|\|[=|]?|&(?:=|&|\^=?)?|>(?:>=?|=)?|<(?:<=?|=|-)?|:=|\.\.\./,builtin:/\b(?:bool|byte|complex(?:64|128)|error|float(?:32|64)|rune|string|u?int(?:8|16|32|64)?|uintptr|append|cap|close|complex|copy|delete|imag|len|make|new|panic|print(?:ln)?|real|recover)\b/}),delete Prism.languages.go["class-name"],function(e){var t=/\/\*[\s\S]*?\*\/|\/\/.*|#(?!\[).*/,n=[{pattern:/\b(?:false|true)\b/i,alias:"boolean"},{pattern:/(::\s*)\b[a-z_]\w*\b(?!\s*\()/i,greedy:!0,lookbehind:!0},{pattern:/(\b(?:case|const)\s+)\b[a-z_]\w*(?=\s*[;=])/i,greedy:!0,lookbehind:!0},/\b(?:null)\b/i,/\b[A-Z_][A-Z0-9_]*\b(?!\s*\()/],a=/\b0b[01]+(?:_[01]+)*\b|\b0o[0-7]+(?:_[0-7]+)*\b|\b0x[\da-f]+(?:_[\da-f]+)*\b|(?:\b\d+(?:_\d+)*\.?(?:\d+(?:_\d+)*)?|\B\.\d+)(?:e[+-]?\d+)?/i,r=/<?=>|\?\?=?|\.{3}|\??->|[!=]=?=?|::|\*\*=?|--|\+\+|&&|\|\||<<|>>|[?~]|[/^|%*&<>.+-]=?/,i=/[{}\[\](),:;]/;e.languages.php={delimiter:{pattern:/\?>$|^<\?(?:php(?=\s)|=)?/i,alias:"important"},comment:t,variable:/\$+(?:\w+\b|(?=\{))/i,package:{pattern:/(namespace\s+|use\s+(?:function\s+)?)(?:\\?\b[a-z_]\w*)+\b(?!\\)/i,lookbehind:!0,inside:{punctuation:/\\/}},"class-name-definition":{pattern:/(\b(?:class|enum|interface|trait)\s+)\b[a-z_]\w*(?!\\)\b/i,lookbehind:!0,alias:"class-name"},"function-definition":{pattern:/(\bfunction\s+)[a-z_]\w*(?=\s*\()/i,lookbehind:!0,alias:"function"},keyword:[{pattern:/(\(\s*)\b(?:bool|boolean|int|integer|float|string|object|array)\b(?=\s*\))/i,alias:"type-casting",greedy:!0,lookbehind:!0},{pattern:/([(,?]\s*)\b(?:bool|int|float|string|object|array(?!\s*\()|mixed|self|static|callable|iterable|(?:null|false)(?=\s*\|))\b(?=\s*\$)/i,alias:"type-hint",greedy:!0,lookbehind:!0},{pattern:/([(,?]\s*[\w|]\|\s*)(?:null|false)\b(?=\s*\$)/i,alias:"type-hint",greedy:!0,lookbehind:!0},{pattern:/(\)\s*:\s*(?:\?\s*)?)\b(?:bool|int|float|string|object|void|array(?!\s*\()|mixed|self|static|callable|iterable|(?:null|false)(?=\s*\|))\b/i,alias:"return-type",greedy:!0,lookbehind:!0},{pattern:/(\)\s*:\s*(?:\?\s*)?[\w|]\|\s*)(?:null|false)\b/i,alias:"return-type",greedy:!0,lookbehind:!0},{pattern:/\b(?:bool|int|float|string|object|void|array(?!\s*\()|mixed|iterable|(?:null|false)(?=\s*\|))\b/i,alias:"type-declaration",greedy:!0},{pattern:/(\|\s*)(?:null|false)\b/i,alias:"type-declaration",greedy:!0,lookbehind:!0},{pattern:/\b(?:parent|self|static)(?=\s*::)/i,alias:"static-context",greedy:!0},{pattern:/(\byield\s+)from\b/i,lookbehind:!0},/\bclass\b/i,{pattern:/((?:^|[^\s>:]|(?:^|[^-])>|(?:^|[^:]):)\s*)\b(?:__halt_compiler|abstract|and|array|as|break|callable|case|catch|clone|const|continue|declare|default|die|do|echo|else|elseif|empty|enddeclare|endfor|endforeach|endif|endswitch|endwhile|enum|eval|exit|extends|final|finally|fn|for|foreach|function|global|goto|if|implements|include|include_once|instanceof|insteadof|interface|isset|list|namespace|match|new|or|parent|print|private|protected|public|require|require_once|return|self|static|switch|throw|trait|try|unset|use|var|while|xor|yield)\b/i,lookbehind:!0}],"argument-name":{pattern:/([(,]\s+)\b[a-z_]\w*(?=\s*:(?!:))/i,lookbehind:!0},"class-name":[{pattern:/(\b(?:extends|implements|instanceof|new(?!\s+self|\s+static))\s+|\bcatch\s*\()\b[a-z_]\w*(?!\\)\b/i,greedy:!0,lookbehind:!0},{pattern:/(\|\s*)\b[a-z_]\w*(?!\\)\b/i,greedy:!0,lookbehind:!0},{pattern:/\b[a-z_]\w*(?!\\)\b(?=\s*\|)/i,greedy:!0},{pattern:/(\|\s*)(?:\\?\b[a-z_]\w*)+\b/i,alias:"class-name-fully-qualified",greedy:!0,lookbehind:!0,inside:{punctuation:/\\/}},{pattern:/(?:\\?\b[a-z_]\w*)+\b(?=\s*\|)/i,alias:"class-name-fully-qualified",greedy:!0,inside:{punctuation:/\\/}},{pattern:/(\b(?:extends|implements|instanceof|new(?!\s+self\b|\s+static\b))\s+|\bcatch\s*\()(?:\\?\b[a-z_]\w*)+\b(?!\\)/i,alias:"class-name-fully-qualified",greedy:!0,lookbehind:!0,inside:{punctuation:/\\/}},{pattern:/\b[a-z_]\w*(?=\s*\$)/i,alias:"type-declaration",greedy:!0},{pattern:/(?:\\?\b[a-z_]\w*)+(?=\s*\$)/i,alias:["class-name-fully-qualified","type-declaration"],greedy:!0,inside:{punctuation:/\\/}},{pattern:/\b[a-z_]\w*(?=\s*::)/i,alias:"static-context",greedy:!0},{pattern:/(?:\\?\b[a-z_]\w*)+(?=\s*::)/i,alias:["class-name-fully-qualified","static-context"],greedy:!0,inside:{punctuation:/\\/}},{pattern:/([(,?]\s*)[a-z_]\w*(?=\s*\$)/i,alias:"type-hint",greedy:!0,lookbehind:!0},{pattern:/([(,?]\s*)(?:\\?\b[a-z_]\w*)+(?=\s*\$)/i,alias:["class-name-fully-qualified","type-hint"],greedy:!0,lookbehind:!0,inside:{punctuation:/\\/}},{pattern:/(\)\s*:\s*(?:\?\s*)?)\b[a-z_]\w*(?!\\)\b/i,alias:"return-type",greedy:!0,lookbehind:!0},{pattern:/(\)\s*:\s*(?:\?\s*)?)(?:\\?\b[a-z_]\w*)+\b(?!\\)/i,alias:["class-name-fully-qualified","return-type"],greedy:!0,lookbehind:!0,inside:{punctuation:/\\/}}],constant:n,function:{pattern:/(^|[^\\\w])\\?[a-z_](?:[\w\\]*\w)?(?=\s*\()/i,lookbehind:!0,inside:{punctuation:/\\/}},property:{pattern:/(->\s*)\w+/,lookbehind:!0},number:a,operator:r,punctuation:i};var s={pattern:/\{\$(?:\{(?:\{[^{}]+\}|[^{}]+)\}|[^{}])+\}|(^|[^\\{])\$+(?:\w+(?:\[[^\r\n\[\]]+\]|->\w+)?)/,lookbehind:!0,inside:e.languages.php},o=[{pattern:/<<<'([^']+)'[\r\n](?:.*[\r\n])*?\1;/,alias:"nowdoc-string",greedy:!0,inside:{delimiter:{pattern:/^<<<'[^']+'|[a-z_]\w*;$/i,alias:"symbol",inside:{punctuation:/^<<<'?|[';]$/}}}},{pattern:/<<<(?:"([^"]+)"[\r\n](?:.*[\r\n])*?\1;|([a-z_]\w*)[\r\n](?:.*[\r\n])*?\2;)/i,alias:"heredoc-string",greedy:!0,inside:{delimiter:{pattern:/^<<<(?:"[^"]+"|[a-z_]\w*)|[a-z_]\w*;$/i,alias:"symbol",inside:{punctuation:/^<<<"?|[";]$/}},interpolation:s}},{pattern:/`(?:\\[\s\S]|[^\\`])*`/,alias:"backtick-quoted-string",greedy:!0},{pattern:/'(?:\\[\s\S]|[^\\'])*'/,alias:"single-quoted-string",greedy:!0},{pattern:/"(?:\\[\s\S]|[^\\"])*"/,alias:"double-quoted-string",greedy:!0,inside:{interpolation:s}}];e.languages.insertBefore("php","variable",{string:o,attribute:{pattern:/#\[(?:[^"'\/#]|\/(?![*/])|\/\/.*$|#(?!\[).*$|\/\*(?:[^*]|\*(?!\/))*\*\/|"(?:\\[\s\S]|[^\\"])*"|'(?:\\[\s\S]|[^\\'])*')+\](?=\s*[a-z$#])/im,greedy:!0,inside:{"attribute-content":{pattern:/^(#\[)[\s\S]+(?=\]$)/,lookbehind:!0,inside:{comment:t,string:o,"attribute-class-name":[{pattern:/([^:]|^)\b[a-z_]\w*(?!\\)\b/i,alias:"class-name",greedy:!0,lookbehind:!0},{pattern:/([^:]|^)(?:\\?\b[a-z_]\w*)+/i,alias:["class-name","class-name-fully-qualified"],greedy:!0,lookbehind:!0,inside:{punctuation:/\\/}}],constant:n,number:a,operator:r,punctuation:i}},delimiter:{pattern:/^#\[|\]$/,alias:"punctuation"}}}}),e.hooks.add("before-tokenize",(function(t){if(/<\?/.test(t.code)){e.languages["markup-templating"].buildPlaceholders(t,"php",/<\?(?:[^"'/#]|\/(?![*/])|("|')(?:\\[\s\S]|(?!\1)[^\\])*\1|(?:\/\/|#(?!\[))(?:[^?\n\r]|\?(?!>))*(?=$|\?>|[\r\n])|#\[|\/\*(?:[^*]|\*(?!\/))*(?:\*\/|$))*?(?:\?>|$)/gi);}})),e.hooks.add("after-tokenize",(function(t){e.languages["markup-templating"].tokenizePlaceholders(t,"php");}));}(Prism),Prism.languages.c=Prism.languages.extend("clike",{comment:{pattern:/\/\/(?:[^\r\n\\]|\\(?:\r\n?|\n|(?![\r\n])))*|\/\*[\s\S]*?(?:\*\/|$)/,greedy:!0},"class-name":{pattern:/(\b(?:enum|struct)\s+(?:__attribute__\s*\(\([\s\S]*?\)\)\s*)?)\w+|\b[a-z]\w*_t\b/,lookbehind:!0},keyword:/\b(?:__attribute__|_Alignas|_Alignof|_Atomic|_Bool|_Complex|_Generic|_Imaginary|_Noreturn|_Static_assert|_Thread_local|asm|typeof|inline|auto|break|case|char|const|continue|default|do|double|else|enum|extern|float|for|goto|if|int|long|register|return|short|signed|sizeof|static|struct|switch|typedef|union|unsigned|void|volatile|while)\b/,function:/\b[a-z_]\w*(?=\s*\()/i,number:/(?:\b0x(?:[\da-f]+(?:\.[\da-f]*)?|\.[\da-f]+)(?:p[+-]?\d+)?|(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:e[+-]?\d+)?)[ful]{0,4}/i,operator:/>>=?|<<=?|->|([-+&|:])\1|[?:~]|[-+*/%&|^!=<>]=?/}),Prism.languages.insertBefore("c","string",{macro:{pattern:/(^[\t ]*)#\s*[a-z](?:[^\r\n\\/]|\/(?!\*)|\/\*(?:[^*]|\*(?!\/))*\*\/|\\(?:\r\n|[\s\S]))*/im,lookbehind:!0,greedy:!0,alias:"property",inside:{string:[{pattern:/^(#\s*include\s*)<[^>]+>/,lookbehind:!0},Prism.languages.c.string],comment:Prism.languages.c.comment,"macro-name":[{pattern:/(^#\s*define\s+)\w+\b(?!\()/i,lookbehind:!0},{pattern:/(^#\s*define\s+)\w+\b(?=\()/i,lookbehind:!0,alias:"function"}],directive:{pattern:/^(#\s*)[a-z]+/,lookbehind:!0,alias:"keyword"},"directive-hash":/^#/,punctuation:/##|\\(?=[\r\n])/,expression:{pattern:/\S[\s\S]*/,inside:Prism.languages.c}}},constant:/\b(?:__FILE__|__LINE__|__DATE__|__TIME__|__TIMESTAMP__|__func__|EOF|NULL|SEEK_CUR|SEEK_END|SEEK_SET|stdin|stdout|stderr)\b/}),delete Prism.languages.c.boolean,Prism.languages.python={comment:{pattern:/(^|[^\\])#.*/,lookbehind:!0},"string-interpolation":{pattern:/(?:f|rf|fr)(?:("""|''')[\s\S]*?\1|("|')(?:\\.|(?!\2)[^\\\r\n])*\2)/i,greedy:!0,inside:{interpolation:{pattern:/((?:^|[^{])(?:\{\{)*)\{(?!\{)(?:[^{}]|\{(?!\{)(?:[^{}]|\{(?!\{)(?:[^{}])+\})+\})+\}/,lookbehind:!0,inside:{"format-spec":{pattern:/(:)[^:(){}]+(?=\}$)/,lookbehind:!0},"conversion-option":{pattern:/![sra](?=[:}]$)/,alias:"punctuation"},rest:null}},string:/[\s\S]+/}},"triple-quoted-string":{pattern:/(?:[rub]|rb|br)?("""|''')[\s\S]*?\1/i,greedy:!0,alias:"string"},string:{pattern:/(?:[rub]|rb|br)?("|')(?:\\.|(?!\1)[^\\\r\n])*\1/i,greedy:!0},function:{pattern:/((?:^|\s)def[ \t]+)[a-zA-Z_]\w*(?=\s*\()/g,lookbehind:!0},"class-name":{pattern:/(\bclass\s+)\w+/i,lookbehind:!0},decorator:{pattern:/(^[\t ]*)@\w+(?:\.\w+)*/im,lookbehind:!0,alias:["annotation","punctuation"],inside:{punctuation:/\./}},keyword:/\b(?:and|as|assert|async|await|break|class|continue|def|del|elif|else|except|exec|finally|for|from|global|if|import|in|is|lambda|nonlocal|not|or|pass|print|raise|return|try|while|with|yield)\b/,builtin:/\b(?:__import__|abs|all|any|apply|ascii|basestring|bin|bool|buffer|bytearray|bytes|callable|chr|classmethod|cmp|coerce|compile|complex|delattr|dict|dir|divmod|enumerate|eval|execfile|file|filter|float|format|frozenset|getattr|globals|hasattr|hash|help|hex|id|input|int|intern|isinstance|issubclass|iter|len|list|locals|long|map|max|memoryview|min|next|object|oct|open|ord|pow|property|range|raw_input|reduce|reload|repr|reversed|round|set|setattr|slice|sorted|staticmethod|str|sum|super|tuple|type|unichr|unicode|vars|xrange|zip)\b/,boolean:/\b(?:True|False|None)\b/,number:/(?:\b(?=\d)|\B(?=\.))(?:0[bo])?(?:(?:\d|0x[\da-f])[\da-f]*(?:\.\d*)?|\.\d+)(?:e[+-]?\d+)?j?\b/i,operator:/[-+%=]=?|!=|\*\*?=?|\/\/?=?|<[<=>]?|>[=>]?|[&|^~]/,punctuation:/[{}[\];(),.:]/},Prism.languages.python["string-interpolation"].inside.interpolation.inside.rest=Prism.languages.python,Prism.languages.py=Prism.languages.python,function(e){var t=/\b(?:abstract|assert|boolean|break|byte|case|catch|char|class|const|continue|default|do|double|else|enum|exports|extends|final|finally|float|for|goto|if|implements|import|instanceof|int|interface|long|module|native|new|non-sealed|null|open|opens|package|permits|private|protected|provides|public|record|requires|return|sealed|short|static|strictfp|super|switch|synchronized|this|throw|throws|to|transient|transitive|try|uses|var|void|volatile|while|with|yield)\b/,n=/(^|[^\w.])(?:[a-z]\w*\s*\.\s*)*(?:[A-Z]\w*\s*\.\s*)*/.source,a={pattern:RegExp(n+/[A-Z](?:[\d_A-Z]*[a-z]\w*)?\b/.source),lookbehind:!0,inside:{namespace:{pattern:/^[a-z]\w*(?:\s*\.\s*[a-z]\w*)*(?:\s*\.)?/,inside:{punctuation:/\./}},punctuation:/\./}};e.languages.java=e.languages.extend("clike",{"class-name":[a,{pattern:RegExp(n+/[A-Z]\w*(?=\s+\w+\s*[;,=()])/.source),lookbehind:!0,inside:a.inside}],keyword:t,function:[e.languages.clike.function,{pattern:/(::\s*)[a-z_]\w*/,lookbehind:!0}],number:/\b0b[01][01_]*L?\b|\b0x(?:\.[\da-f_p+-]+|[\da-f_]+(?:\.[\da-f_p+-]+)?)\b|(?:\b\d[\d_]*(?:\.[\d_]*)?|\B\.\d[\d_]*)(?:e[+-]?\d[\d_]*)?[dfl]?/i,operator:{pattern:/(^|[^.])(?:<<=?|>>>?=?|->|--|\+\+|&&|\|\||::|[?:~]|[-+*/%&|^!=<>]=?)/m,lookbehind:!0}}),e.languages.insertBefore("java","string",{"triple-quoted-string":{pattern:/"""[ \t]*[\r\n](?:(?:"|"")?(?:\\.|[^"\\]))*"""/,greedy:!0,alias:"string"}}),e.languages.insertBefore("java","class-name",{annotation:{pattern:/(^|[^.])@\w+(?:\s*\.\s*\w+)*/,lookbehind:!0,alias:"punctuation"},generics:{pattern:/<(?:[\w\s,.?]|&(?!&)|<(?:[\w\s,.?]|&(?!&)|<(?:[\w\s,.?]|&(?!&)|<(?:[\w\s,.?]|&(?!&))*>)*>)*>)*>/,inside:{"class-name":a,keyword:t,punctuation:/[<>(),.:]/,operator:/[?&|]/}},namespace:{pattern:RegExp(/(\b(?:exports|import(?:\s+static)?|module|open|opens|package|provides|requires|to|transitive|uses|with)\s+)(?!<keyword>)[a-z]\w*(?:\.[a-z]\w*)*\.?/.source.replace(/<keyword>/g,(function(){return t.source}))),lookbehind:!0,inside:{punctuation:/\./}}});}(Prism),function(e){var t=/\b(?:alignas|alignof|asm|auto|bool|break|case|catch|char|char8_t|char16_t|char32_t|class|compl|concept|const|consteval|constexpr|constinit|const_cast|continue|co_await|co_return|co_yield|decltype|default|delete|do|double|dynamic_cast|else|enum|explicit|export|extern|final|float|for|friend|goto|if|import|inline|int|int8_t|int16_t|int32_t|int64_t|uint8_t|uint16_t|uint32_t|uint64_t|long|module|mutable|namespace|new|noexcept|nullptr|operator|override|private|protected|public|register|reinterpret_cast|requires|return|short|signed|sizeof|static|static_assert|static_cast|struct|switch|template|this|thread_local|throw|try|typedef|typeid|typename|union|unsigned|using|virtual|void|volatile|wchar_t|while)\b/,n=/\b(?!<keyword>)\w+(?:\s*\.\s*\w+)*\b/.source.replace(/<keyword>/g,(function(){return t.source}));e.languages.cpp=e.languages.extend("c",{"class-name":[{pattern:RegExp(/(\b(?:class|concept|enum|struct|typename)\s+)(?!<keyword>)\w+/.source.replace(/<keyword>/g,(function(){return t.source}))),lookbehind:!0},/\b[A-Z]\w*(?=\s*::\s*\w+\s*\()/,/\b[A-Z_]\w*(?=\s*::\s*~\w+\s*\()/i,/\b\w+(?=\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>\s*::\s*\w+\s*\()/],keyword:t,number:{pattern:/(?:\b0b[01']+|\b0x(?:[\da-f']+(?:\.[\da-f']*)?|\.[\da-f']+)(?:p[+-]?[\d']+)?|(?:\b[\d']+(?:\.[\d']*)?|\B\.[\d']+)(?:e[+-]?[\d']+)?)[ful]{0,4}/i,greedy:!0},operator:/>>=?|<<=?|->|--|\+\+|&&|\|\||[?:~]|<=>|[-+*/%&|^!=<>]=?|\b(?:and|and_eq|bitand|bitor|not|not_eq|or|or_eq|xor|xor_eq)\b/,boolean:/\b(?:true|false)\b/}),e.languages.insertBefore("cpp","string",{module:{pattern:RegExp(/(\b(?:module|import)\s+)/.source+"(?:"+/"(?:\\(?:\r\n|[\s\S])|[^"\\\r\n])*"|<[^<>\r\n]*>/.source+"|"+/<mod-name>(?:\s*:\s*<mod-name>)?|:\s*<mod-name>/.source.replace(/<mod-name>/g,(function(){return n}))+")"),lookbehind:!0,greedy:!0,inside:{string:/^[<"][\s\S]+/,operator:/:/,punctuation:/\./}},"raw-string":{pattern:/R"([^()\\ ]{0,16})\([\s\S]*?\)\1"/,alias:"string",greedy:!0}}),e.languages.insertBefore("cpp","keyword",{"generic-function":{pattern:/\b[a-z_]\w*\s*<(?:[^<>]|<(?:[^<>])*>)*>(?=\s*\()/i,inside:{function:/^\w+/,generic:{pattern:/<[\s\S]+/,alias:"class-name",inside:e.languages.cpp}}}}),e.languages.insertBefore("cpp","operator",{"double-colon":{pattern:/::/,alias:"punctuation"}}),e.languages.insertBefore("cpp","class-name",{"base-clause":{pattern:/(\b(?:class|struct)\s+\w+\s*:\s*)[^;{}"'\s]+(?:\s+[^;{}"'\s]+)*(?=\s*[;{])/,lookbehind:!0,greedy:!0,inside:e.languages.extend("cpp",{})}}),e.languages.insertBefore("inside","double-colon",{"class-name":/\b[a-z_]\w*\b(?!\s*::)/i},e.languages.cpp["base-clause"]);}(Prism),function(e){function t(e,t){return e.replace(/<<(\d+)>>/g,(function(e,n){return "(?:"+t[+n]+")"}))}function n(e,n,a){return RegExp(t(e,n),a||"")}function a(e,t){for(var n=0;n<t;n++)e=e.replace(/<<self>>/g,(function(){return "(?:"+e+")"}));return e.replace(/<<self>>/g,"[^\\s\\S]")}var r="bool byte char decimal double dynamic float int long object sbyte short string uint ulong ushort var void",i="class enum interface struct",s="add alias and ascending async await by descending from get global group into join let nameof not notnull on or orderby partial remove select set unmanaged value when where",o="abstract as base break case catch checked const continue default delegate do else event explicit extern finally fixed for foreach goto if implicit in internal is lock namespace new null operator out override params private protected public readonly ref return sealed sizeof stackalloc static switch this throw try typeof unchecked unsafe using virtual volatile while yield";function l(e){return "\\b(?:"+e.trim().replace(/ /g,"|")+")\\b"}var u=l(i),c=RegExp(l(r+" "+i+" "+s+" "+o)),d=l(i+" "+s+" "+o),p=l(r+" "+i+" "+o),g=a(/<(?:[^<>;=+\-*/%&|^]|<<self>>)*>/.source,2),f=a(/\((?:[^()]|<<self>>)*\)/.source,2),b=/@?\b[A-Za-z_]\w*\b/.source,m=t(/<<0>>(?:\s*<<1>>)?/.source,[b,g]),h=t(/(?!<<0>>)<<1>>(?:\s*\.\s*<<1>>)*/.source,[d,m]),y=/\[\s*(?:,\s*)*\]/.source,E=t(/<<0>>(?:\s*(?:\?\s*)?<<1>>)*(?:\s*\?)?/.source,[h,y]),S=t(/[^,()<>[\];=+\-*/%&|^]|<<0>>|<<1>>|<<2>>/.source,[g,f,y]),v=t(/\(<<0>>+(?:,<<0>>+)+\)/.source,[S]),k=t(/(?:<<0>>|<<1>>)(?:\s*(?:\?\s*)?<<2>>)*(?:\s*\?)?/.source,[v,h,y]),w={keyword:c,punctuation:/[<>()?,.:[\]]/},A=/'(?:[^\r\n'\\]|\\.|\\[Uux][\da-fA-F]{1,8})'/.source,T=/"(?:\\.|[^\\"\r\n])*"/.source,_=/@"(?:""|\\[\s\S]|[^\\"])*"(?!")/.source;e.languages.csharp=e.languages.extend("clike",{string:[{pattern:n(/(^|[^$\\])<<0>>/.source,[_]),lookbehind:!0,greedy:!0},{pattern:n(/(^|[^@$\\])<<0>>/.source,[T]),lookbehind:!0,greedy:!0},{pattern:RegExp(A),greedy:!0,alias:"character"}],"class-name":[{pattern:n(/(\busing\s+static\s+)<<0>>(?=\s*;)/.source,[h]),lookbehind:!0,inside:w},{pattern:n(/(\busing\s+<<0>>\s*=\s*)<<1>>(?=\s*;)/.source,[b,k]),lookbehind:!0,inside:w},{pattern:n(/(\busing\s+)<<0>>(?=\s*=)/.source,[b]),lookbehind:!0},{pattern:n(/(\b<<0>>\s+)<<1>>/.source,[u,m]),lookbehind:!0,inside:w},{pattern:n(/(\bcatch\s*\(\s*)<<0>>/.source,[h]),lookbehind:!0,inside:w},{pattern:n(/(\bwhere\s+)<<0>>/.source,[b]),lookbehind:!0},{pattern:n(/(\b(?:is(?:\s+not)?|as)\s+)<<0>>/.source,[E]),lookbehind:!0,inside:w},{pattern:n(/\b<<0>>(?=\s+(?!<<1>>)<<2>>(?:\s*[=,;:{)\]]|\s+(?:in|when)\b))/.source,[k,p,b]),inside:w}],keyword:c,number:/(?:\b0(?:x[\da-f_]*[\da-f]|b[01_]*[01])|(?:\B\.\d+(?:_+\d+)*|\b\d+(?:_+\d+)*(?:\.\d+(?:_+\d+)*)?)(?:e[-+]?\d+(?:_+\d+)*)?)(?:ul|lu|[dflmu])?\b/i,operator:/>>=?|<<=?|[-=]>|([-+&|])\1|~|\?\?=?|[-+*/%&|^!=<>]=?/,punctuation:/\?\.?|::|[{}[\];(),.:]/}),e.languages.insertBefore("csharp","number",{range:{pattern:/\.\./,alias:"operator"}}),e.languages.insertBefore("csharp","punctuation",{"named-parameter":{pattern:n(/([(,]\s*)<<0>>(?=\s*:)/.source,[b]),lookbehind:!0,alias:"punctuation"}}),e.languages.insertBefore("csharp","class-name",{namespace:{pattern:n(/(\b(?:namespace|using)\s+)<<0>>(?:\s*\.\s*<<0>>)*(?=\s*[;{])/.source,[b]),lookbehind:!0,inside:{punctuation:/\./}},"type-expression":{pattern:n(/(\b(?:default|typeof|sizeof)\s*\(\s*(?!\s))(?:[^()\s]|\s(?!\s)|<<0>>)*(?=\s*\))/.source,[f]),lookbehind:!0,alias:"class-name",inside:w},"return-type":{pattern:n(/<<0>>(?=\s+(?:<<1>>\s*(?:=>|[({]|\.\s*this\s*\[)|this\s*\[))/.source,[k,h]),inside:w,alias:"class-name"},"constructor-invocation":{pattern:n(/(\bnew\s+)<<0>>(?=\s*[[({])/.source,[k]),lookbehind:!0,inside:w,alias:"class-name"},"generic-method":{pattern:n(/<<0>>\s*<<1>>(?=\s*\()/.source,[b,g]),inside:{function:n(/^<<0>>/.source,[b]),generic:{pattern:RegExp(g),alias:"class-name",inside:w}}},"type-list":{pattern:n(/\b((?:<<0>>\s+<<1>>|where\s+<<2>>)\s*:\s*)(?:<<3>>|<<4>>)(?:\s*,\s*(?:<<3>>|<<4>>))*(?=\s*(?:where|[{;]|=>|$))/.source,[u,m,b,k,c.source]),lookbehind:!0,inside:{keyword:c,"class-name":{pattern:RegExp(k),greedy:!0,inside:w},punctuation:/,/}},preprocessor:{pattern:/(^[\t ]*)#.*/m,lookbehind:!0,alias:"property",inside:{directive:{pattern:/(#)\b(?:define|elif|else|endif|endregion|error|if|line|pragma|region|undef|warning)\b/,lookbehind:!0,alias:"keyword"}}}});var x=T+"|"+A,I=t(/\/(?![*/])|\/\/[^\r\n]*[\r\n]|\/\*(?:[^*]|\*(?!\/))*\*\/|<<0>>/.source,[x]),O=a(t(/[^"'/()]|<<0>>|\(<<self>>*\)/.source,[I]),2),R=/\b(?:assembly|event|field|method|module|param|property|return|type)\b/.source,N=t(/<<0>>(?:\s*\(<<1>>*\))?/.source,[h,O]);e.languages.insertBefore("csharp","class-name",{attribute:{pattern:n(/((?:^|[^\s\w>)?])\s*\[\s*)(?:<<0>>\s*:\s*)?<<1>>(?:\s*,\s*<<1>>)*(?=\s*\])/.source,[R,N]),lookbehind:!0,greedy:!0,inside:{target:{pattern:n(/^<<0>>(?=\s*:)/.source,[R]),alias:"keyword"},"attribute-arguments":{pattern:n(/\(<<0>>*\)/.source,[O]),inside:e.languages.csharp},"class-name":{pattern:RegExp(h),inside:{punctuation:/\./}},punctuation:/[:,]/}}});var L=/:[^}\r\n]+/.source,P=a(t(/[^"'/()]|<<0>>|\(<<self>>*\)/.source,[I]),2),C=t(/\{(?!\{)(?:(?![}:])<<0>>)*<<1>>?\}/.source,[P,L]),F=a(t(/[^"'/()]|\/(?!\*)|\/\*(?:[^*]|\*(?!\/))*\*\/|<<0>>|\(<<self>>*\)/.source,[x]),2),D=t(/\{(?!\{)(?:(?![}:])<<0>>)*<<1>>?\}/.source,[F,L]);function M(t,a){return {interpolation:{pattern:n(/((?:^|[^{])(?:\{\{)*)<<0>>/.source,[t]),lookbehind:!0,inside:{"format-string":{pattern:n(/(^\{(?:(?![}:])<<0>>)*)<<1>>(?=\}$)/.source,[a,L]),lookbehind:!0,inside:{punctuation:/^:/}},punctuation:/^\{|\}$/,expression:{pattern:/[\s\S]+/,alias:"language-csharp",inside:e.languages.csharp}}},string:/[\s\S]+/}}e.languages.insertBefore("csharp","string",{"interpolation-string":[{pattern:n(/(^|[^\\])(?:\$@|@\$)"(?:""|\\[\s\S]|\{\{|<<0>>|[^\\{"])*"/.source,[C]),lookbehind:!0,greedy:!0,inside:M(C,P)},{pattern:n(/(^|[^@\\])\$"(?:\\.|\{\{|<<0>>|[^\\"{])*"/.source,[D]),lookbehind:!0,greedy:!0,inside:M(D,F)}]});}(Prism),Prism.languages.dotnet=Prism.languages.cs=Prism.languages.csharp,Prism.languages["visual-basic"]={comment:{pattern:/(?:['‘’]|REM\b)(?:[^\r\n_]|_(?:\r\n?|\n)?)*/i,inside:{keyword:/^REM/i}},directive:{pattern:/#(?:Const|Else|ElseIf|End|ExternalChecksum|ExternalSource|If|Region)(?:[^\S\r\n]_[^\S\r\n]*(?:\r\n?|\n)|.)+/i,alias:"comment",greedy:!0},string:{pattern:/\$?["“”](?:["“”]{2}|[^"“”])*["“”]C?/i,greedy:!0},date:{pattern:/#[^\S\r\n]*(?:\d+([/-])\d+\1\d+(?:[^\S\r\n]+(?:\d+[^\S\r\n]*(?:AM|PM)|\d+:\d+(?::\d+)?(?:[^\S\r\n]*(?:AM|PM))?))?|\d+[^\S\r\n]*(?:AM|PM)|\d+:\d+(?::\d+)?(?:[^\S\r\n]*(?:AM|PM))?)[^\S\r\n]*#/i,alias:"builtin"},number:/(?:(?:\b\d+(?:\.\d+)?|\.\d+)(?:E[+-]?\d+)?|&[HO][\dA-F]+)(?:U?[ILS]|[FRD])?/i,boolean:/\b(?:True|False|Nothing)\b/i,keyword:/\b(?:AddHandler|AddressOf|Alias|And(?:Also)?|As|Boolean|ByRef|Byte|ByVal|Call|Case|Catch|C(?:Bool|Byte|Char|Date|Dbl|Dec|Int|Lng|Obj|SByte|Short|Sng|Str|Type|UInt|ULng|UShort)|Char|Class|Const|Continue|Currency|Date|Decimal|Declare|Default|Delegate|Dim|DirectCast|Do|Double|Each|Else(?:If)?|End(?:If)?|Enum|Erase|Error|Event|Exit|Finally|For|Friend|Function|Get(?:Type|XMLNamespace)?|Global|GoSub|GoTo|Handles|If|Implements|Imports|In|Inherits|Integer|Interface|Is|IsNot|Let|Lib|Like|Long|Loop|Me|Mod|Module|Must(?:Inherit|Override)|My(?:Base|Class)|Namespace|Narrowing|New|Next|Not(?:Inheritable|Overridable)?|Object|Of|On|Operator|Option(?:al)?|Or(?:Else)?|Out|Overloads|Overridable|Overrides|ParamArray|Partial|Private|Property|Protected|Public|RaiseEvent|ReadOnly|ReDim|RemoveHandler|Resume|Return|SByte|Select|Set|Shadows|Shared|short|Single|Static|Step|Stop|String|Structure|Sub|SyncLock|Then|Throw|To|Try|TryCast|Type|TypeOf|U(?:Integer|Long|Short)|Using|Variant|Wend|When|While|Widening|With(?:Events)?|WriteOnly|Until|Xor)\b/i,operator:[/[+\-*/\\^<=>&#@$%!]/,{pattern:/([^\S\r\n])_(?=[^\S\r\n]*[\r\n])/,lookbehind:!0}],punctuation:/[{}().,:?]/},Prism.languages.vb=Prism.languages["visual-basic"],Prism.languages.vba=Prism.languages["visual-basic"],Prism.languages.sql={comment:{pattern:/(^|[^\\])(?:\/\*[\s\S]*?\*\/|(?:--|\/\/|#).*)/,lookbehind:!0},variable:[{pattern:/@(["'`])(?:\\[\s\S]|(?!\1)[^\\])+\1/,greedy:!0},/@[\w.$]+/],string:{pattern:/(^|[^@\\])("|')(?:\\[\s\S]|(?!\2)[^\\]|\2\2)*\2/,greedy:!0,lookbehind:!0},function:/\b(?:AVG|COUNT|FIRST|FORMAT|LAST|LCASE|LEN|MAX|MID|MIN|MOD|NOW|ROUND|SUM|UCASE)(?=\s*\()/i,keyword:/\b(?:ACTION|ADD|AFTER|ALGORITHM|ALL|ALTER|ANALYZE|ANY|APPLY|AS|ASC|AUTHORIZATION|AUTO_INCREMENT|BACKUP|BDB|BEGIN|BERKELEYDB|BIGINT|BINARY|BIT|BLOB|BOOL|BOOLEAN|BREAK|BROWSE|BTREE|BULK|BY|CALL|CASCADED?|CASE|CHAIN|CHAR(?:ACTER|SET)?|CHECK(?:POINT)?|CLOSE|CLUSTERED|COALESCE|COLLATE|COLUMNS?|COMMENT|COMMIT(?:TED)?|COMPUTE|CONNECT|CONSISTENT|CONSTRAINT|CONTAINS(?:TABLE)?|CONTINUE|CONVERT|CREATE|CROSS|CURRENT(?:_DATE|_TIME|_TIMESTAMP|_USER)?|CURSOR|CYCLE|DATA(?:BASES?)?|DATE(?:TIME)?|DAY|DBCC|DEALLOCATE|DEC|DECIMAL|DECLARE|DEFAULT|DEFINER|DELAYED|DELETE|DELIMITERS?|DENY|DESC|DESCRIBE|DETERMINISTIC|DISABLE|DISCARD|DISK|DISTINCT|DISTINCTROW|DISTRIBUTED|DO|DOUBLE|DROP|DUMMY|DUMP(?:FILE)?|DUPLICATE|ELSE(?:IF)?|ENABLE|ENCLOSED|END|ENGINE|ENUM|ERRLVL|ERRORS|ESCAPED?|EXCEPT|EXEC(?:UTE)?|EXISTS|EXIT|EXPLAIN|EXTENDED|FETCH|FIELDS|FILE|FILLFACTOR|FIRST|FIXED|FLOAT|FOLLOWING|FOR(?: EACH ROW)?|FORCE|FOREIGN|FREETEXT(?:TABLE)?|FROM|FULL|FUNCTION|GEOMETRY(?:COLLECTION)?|GLOBAL|GOTO|GRANT|GROUP|HANDLER|HASH|HAVING|HOLDLOCK|HOUR|IDENTITY(?:_INSERT|COL)?|IF|IGNORE|IMPORT|INDEX|INFILE|INNER|INNODB|INOUT|INSERT|INT|INTEGER|INTERSECT|INTERVAL|INTO|INVOKER|ISOLATION|ITERATE|JOIN|KEYS?|KILL|LANGUAGE|LAST|LEAVE|LEFT|LEVEL|LIMIT|LINENO|LINES|LINESTRING|LOAD|LOCAL|LOCK|LONG(?:BLOB|TEXT)|LOOP|MATCH(?:ED)?|MEDIUM(?:BLOB|INT|TEXT)|MERGE|MIDDLEINT|MINUTE|MODE|MODIFIES|MODIFY|MONTH|MULTI(?:LINESTRING|POINT|POLYGON)|NATIONAL|NATURAL|NCHAR|NEXT|NO|NONCLUSTERED|NULLIF|NUMERIC|OFF?|OFFSETS?|ON|OPEN(?:DATASOURCE|QUERY|ROWSET)?|OPTIMIZE|OPTION(?:ALLY)?|ORDER|OUT(?:ER|FILE)?|OVER|PARTIAL|PARTITION|PERCENT|PIVOT|PLAN|POINT|POLYGON|PRECEDING|PRECISION|PREPARE|PREV|PRIMARY|PRINT|PRIVILEGES|PROC(?:EDURE)?|PUBLIC|PURGE|QUICK|RAISERROR|READS?|REAL|RECONFIGURE|REFERENCES|RELEASE|RENAME|REPEAT(?:ABLE)?|REPLACE|REPLICATION|REQUIRE|RESIGNAL|RESTORE|RESTRICT|RETURN(?:S|ING)?|REVOKE|RIGHT|ROLLBACK|ROUTINE|ROW(?:COUNT|GUIDCOL|S)?|RTREE|RULE|SAVE(?:POINT)?|SCHEMA|SECOND|SELECT|SERIAL(?:IZABLE)?|SESSION(?:_USER)?|SET(?:USER)?|SHARE|SHOW|SHUTDOWN|SIMPLE|SMALLINT|SNAPSHOT|SOME|SONAME|SQL|START(?:ING)?|STATISTICS|STATUS|STRIPED|SYSTEM_USER|TABLES?|TABLESPACE|TEMP(?:ORARY|TABLE)?|TERMINATED|TEXT(?:SIZE)?|THEN|TIME(?:STAMP)?|TINY(?:BLOB|INT|TEXT)|TOP?|TRAN(?:SACTIONS?)?|TRIGGER|TRUNCATE|TSEQUAL|TYPES?|UNBOUNDED|UNCOMMITTED|UNDEFINED|UNION|UNIQUE|UNLOCK|UNPIVOT|UNSIGNED|UPDATE(?:TEXT)?|USAGE|USE|USER|USING|VALUES?|VAR(?:BINARY|CHAR|CHARACTER|YING)|VIEW|WAITFOR|WARNINGS|WHEN|WHERE|WHILE|WITH(?: ROLLUP|IN)?|WORK|WRITE(?:TEXT)?|YEAR)\b/i,boolean:/\b(?:TRUE|FALSE|NULL)\b/i,number:/\b0x[\da-f]+\b|\b\d+(?:\.\d*)?|\B\.\d+\b/i,operator:/[-+*\/=%^~]|&&?|\|\|?|!=?|<(?:=>?|<|>)?|>[>=]?|\b(?:AND|BETWEEN|DIV|IN|ILIKE|IS|LIKE|NOT|OR|REGEXP|RLIKE|SOUNDS LIKE|XOR)\b/i,punctuation:/[;[\]()`,.]/},function(e){e.languages.ruby=e.languages.extend("clike",{comment:[/#.*/,{pattern:/^=begin\s[\s\S]*?^=end/m,greedy:!0}],"class-name":{pattern:/(\b(?:class)\s+|\bcatch\s+\()[\w.\\]+/i,lookbehind:!0,inside:{punctuation:/[.\\]/}},keyword:/\b(?:alias|and|BEGIN|begin|break|case|class|def|define_method|defined|do|each|else|elsif|END|end|ensure|extend|for|if|in|include|module|new|next|nil|not|or|prepend|protected|private|public|raise|redo|require|rescue|retry|return|self|super|then|throw|undef|unless|until|when|while|yield)\b/});var t={pattern:/#\{[^}]+\}/,inside:{delimiter:{pattern:/^#\{|\}$/,alias:"tag"},rest:e.languages.ruby}};delete e.languages.ruby.function,e.languages.insertBefore("ruby","keyword",{regex:[{pattern:RegExp(/%r/.source+"(?:"+[/([^a-zA-Z0-9\s{(\[<])(?:(?!\1)[^\\]|\\[\s\S])*\1/.source,/\((?:[^()\\]|\\[\s\S])*\)/.source,/\{(?:[^#{}\\]|#(?:\{[^}]+\})?|\\[\s\S])*\}/.source,/\[(?:[^\[\]\\]|\\[\s\S])*\]/.source,/<(?:[^<>\\]|\\[\s\S])*>/.source].join("|")+")"+/[egimnosux]{0,6}/.source),greedy:!0,inside:{interpolation:t}},{pattern:/(^|[^/])\/(?!\/)(?:\[[^\r\n\]]+\]|\\.|[^[/\\\r\n])+\/[egimnosux]{0,6}(?=\s*(?:$|[\r\n,.;})#]))/,lookbehind:!0,greedy:!0,inside:{interpolation:t}}],variable:/[@$]+[a-zA-Z_]\w*(?:[?!]|\b)/,symbol:{pattern:/(^|[^:]):[a-zA-Z_]\w*(?:[?!]|\b)/,lookbehind:!0},"method-definition":{pattern:/(\bdef\s+)[\w.]+/,lookbehind:!0,inside:{function:/\w+$/,rest:e.languages.ruby}}}),e.languages.insertBefore("ruby","number",{builtin:/\b(?:Array|Bignum|Binding|Class|Continuation|Dir|Exception|FalseClass|File|Stat|Fixnum|Float|Hash|Integer|IO|MatchData|Method|Module|NilClass|Numeric|Object|Proc|Range|Regexp|String|Struct|TMS|Symbol|ThreadGroup|Thread|Time|TrueClass)\b/,constant:/\b[A-Z]\w*(?:[?!]|\b)/}),e.languages.ruby.string=[{pattern:RegExp(/%[qQiIwWxs]?/.source+"(?:"+[/([^a-zA-Z0-9\s{(\[<])(?:(?!\1)[^\\]|\\[\s\S])*\1/.source,/\((?:[^()\\]|\\[\s\S])*\)/.source,/\{(?:[^#{}\\]|#(?:\{[^}]+\})?|\\[\s\S])*\}/.source,/\[(?:[^\[\]\\]|\\[\s\S])*\]/.source,/<(?:[^<>\\]|\\[\s\S])*>/.source].join("|")+")"),greedy:!0,inside:{interpolation:t}},{pattern:/("|')(?:#\{[^}]+\}|#(?!\{)|\\(?:\r\n|[\s\S])|(?!\1)[^\\#\r\n])*\1/,greedy:!0,inside:{interpolation:t}},{pattern:/<<[-~]?([a-z_]\w*)[\r\n](?:.*[\r\n])*?[\t ]*\1/i,alias:"heredoc-string",greedy:!0,inside:{delimiter:{pattern:/^<<[-~]?[a-z_]\w*|[a-z_]\w*$/i,alias:"symbol",inside:{punctuation:/^<<[-~]?/}},interpolation:t}},{pattern:/<<[-~]?'([a-z_]\w*)'[\r\n](?:.*[\r\n])*?[\t ]*\1/i,alias:"heredoc-string",greedy:!0,inside:{delimiter:{pattern:/^<<[-~]?'[a-z_]\w*'|[a-z_]\w*$/i,alias:"symbol",inside:{punctuation:/^<<[-~]?'|'$/}}}}],e.languages.rb=e.languages.ruby;}(Prism),Prism.languages.swift=Prism.languages.extend("clike",{string:{pattern:/("|')(?:\\(?:\((?:[^()]|\([^)]+\))+\)|\r\n|[^(])|(?!\1)[^\\\r\n])*\1/,greedy:!0,inside:{interpolation:{pattern:/\\\((?:[^()]|\([^)]+\))+\)/,inside:{delimiter:{pattern:/^\\\(|\)$/,alias:"variable"}}}}},keyword:/\b(?:as|associativity|break|case|catch|class|continue|convenience|default|defer|deinit|didSet|do|dynamic(?:Type)?|else|enum|extension|fallthrough|final|for|func|get|guard|if|import|in|infix|init|inout|internal|is|lazy|left|let|mutating|new|none|nonmutating|operator|optional|override|postfix|precedence|prefix|private|protocol|public|repeat|required|rethrows|return|right|safe|self|Self|set|some|static|struct|subscript|super|switch|throws?|try|Type|typealias|unowned|unsafe|var|weak|where|while|willSet|__(?:COLUMN__|FILE__|FUNCTION__|LINE__))\b/,number:/\b(?:[\d_]+(?:\.[\de_]+)?|0x[a-f0-9_]+(?:\.[a-f0-9p_]+)?|0b[01_]+|0o[0-7_]+)\b/i,constant:/\b(?:nil|[A-Z_]{2,}|k[A-Z][A-Za-z_]+)\b/,atrule:/@\b(?:IB(?:Outlet|Designable|Action|Inspectable)|class_protocol|exported|noreturn|NS(?:Copying|Managed)|objc|UIApplicationMain|auto_closure)\b/,builtin:/\b(?:[A-Z]\S+|abs|advance|alignof(?:Value)?|assert|contains|count(?:Elements)?|debugPrint(?:ln)?|distance|drop(?:First|Last)|dump|enumerate|equal|filter|find|first|getVaList|indices|isEmpty|join|last|lexicographicalCompare|map|max(?:Element)?|min(?:Element)?|numericCast|overlaps|partition|print(?:ln)?|reduce|reflect|reverse|sizeof(?:Value)?|sort(?:ed)?|split|startsWith|stride(?:of(?:Value)?)?|suffix|swap|toDebugString|toString|transcode|underestimateCount|unsafeBitCast|with(?:ExtendedLifetime|Unsafe(?:MutablePointers?|Pointers?)|VaList))\b/}),Prism.languages.swift.string.inside.interpolation.inside.rest=Prism.languages.swift,function(e){var t="\\b(?:BASH|BASHOPTS|BASH_ALIASES|BASH_ARGC|BASH_ARGV|BASH_CMDS|BASH_COMPLETION_COMPAT_DIR|BASH_LINENO|BASH_REMATCH|BASH_SOURCE|BASH_VERSINFO|BASH_VERSION|COLORTERM|COLUMNS|COMP_WORDBREAKS|DBUS_SESSION_BUS_ADDRESS|DEFAULTS_PATH|DESKTOP_SESSION|DIRSTACK|DISPLAY|EUID|GDMSESSION|GDM_LANG|GNOME_KEYRING_CONTROL|GNOME_KEYRING_PID|GPG_AGENT_INFO|GROUPS|HISTCONTROL|HISTFILE|HISTFILESIZE|HISTSIZE|HOME|HOSTNAME|HOSTTYPE|IFS|INSTANCE|JOB|LANG|LANGUAGE|LC_ADDRESS|LC_ALL|LC_IDENTIFICATION|LC_MEASUREMENT|LC_MONETARY|LC_NAME|LC_NUMERIC|LC_PAPER|LC_TELEPHONE|LC_TIME|LESSCLOSE|LESSOPEN|LINES|LOGNAME|LS_COLORS|MACHTYPE|MAILCHECK|MANDATORY_PATH|NO_AT_BRIDGE|OLDPWD|OPTERR|OPTIND|ORBIT_SOCKETDIR|OSTYPE|PAPERSIZE|PATH|PIPESTATUS|PPID|PS1|PS2|PS3|PS4|PWD|RANDOM|REPLY|SECONDS|SELINUX_INIT|SESSION|SESSIONTYPE|SESSION_MANAGER|SHELL|SHELLOPTS|SHLVL|SSH_AUTH_SOCK|TERM|UID|UPSTART_EVENTS|UPSTART_INSTANCE|UPSTART_JOB|UPSTART_SESSION|USER|WINDOWID|XAUTHORITY|XDG_CONFIG_DIRS|XDG_CURRENT_DESKTOP|XDG_DATA_DIRS|XDG_GREETER_DATA_DIR|XDG_MENU_PREFIX|XDG_RUNTIME_DIR|XDG_SEAT|XDG_SEAT_PATH|XDG_SESSION_DESKTOP|XDG_SESSION_ID|XDG_SESSION_PATH|XDG_SESSION_TYPE|XDG_VTNR|XMODIFIERS)\\b",n={pattern:/(^(["']?)\w+\2)[ \t]+\S.*/,lookbehind:!0,alias:"punctuation",inside:null},a={bash:n,environment:{pattern:RegExp("\\$"+t),alias:"constant"},variable:[{pattern:/\$?\(\([\s\S]+?\)\)/,greedy:!0,inside:{variable:[{pattern:/(^\$\(\([\s\S]+)\)\)/,lookbehind:!0},/^\$\(\(/],number:/\b0x[\dA-Fa-f]+\b|(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:[Ee]-?\d+)?/,operator:/--|\+\+|\*\*=?|<<=?|>>=?|&&|\|\||[=!+\-*/%<>^&|]=?|[?~:]/,punctuation:/\(\(?|\)\)?|,|;/}},{pattern:/\$\((?:\([^)]+\)|[^()])+\)|`[^`]+`/,greedy:!0,inside:{variable:/^\$\(|^`|\)$|`$/}},{pattern:/\$\{[^}]+\}/,greedy:!0,inside:{operator:/:[-=?+]?|[!\/]|##?|%%?|\^\^?|,,?/,punctuation:/[\[\]]/,environment:{pattern:RegExp("(\\{)"+t),lookbehind:!0,alias:"constant"}}},/\$(?:\w+|[#?*!@$])/],entity:/\\(?:[abceEfnrtv\\"]|O?[0-7]{1,3}|x[0-9a-fA-F]{1,2}|u[0-9a-fA-F]{4}|U[0-9a-fA-F]{8})/};e.languages.bash={shebang:{pattern:/^#!\s*\/.*/,alias:"important"},comment:{pattern:/(^|[^"{\\$])#.*/,lookbehind:!0},"function-name":[{pattern:/(\bfunction\s+)[\w-]+(?=(?:\s*\(?:\s*\))?\s*\{)/,lookbehind:!0,alias:"function"},{pattern:/\b[\w-]+(?=\s*\(\s*\)\s*\{)/,alias:"function"}],"for-or-select":{pattern:/(\b(?:for|select)\s+)\w+(?=\s+in\s)/,alias:"variable",lookbehind:!0},"assign-left":{pattern:/(^|[\s;|&]|[<>]\()\w+(?=\+?=)/,inside:{environment:{pattern:RegExp("(^|[\\s;|&]|[<>]\\()"+t),lookbehind:!0,alias:"constant"}},alias:"variable",lookbehind:!0},string:[{pattern:/((?:^|[^<])<<-?\s*)(\w+)\s[\s\S]*?(?:\r?\n|\r)\2/,lookbehind:!0,greedy:!0,inside:a},{pattern:/((?:^|[^<])<<-?\s*)(["'])(\w+)\2\s[\s\S]*?(?:\r?\n|\r)\3/,lookbehind:!0,greedy:!0,inside:{bash:n}},{pattern:/(^|[^\\](?:\\\\)*)"(?:\\[\s\S]|\$\([^)]+\)|\$(?!\()|`[^`]+`|[^"\\`$])*"/,lookbehind:!0,greedy:!0,inside:a},{pattern:/(^|[^$\\])'[^']*'/,lookbehind:!0,greedy:!0},{pattern:/\$'(?:[^'\\]|\\[\s\S])*'/,greedy:!0,inside:{entity:a.entity}}],environment:{pattern:RegExp("\\$?"+t),alias:"constant"},variable:a.variable,function:{pattern:/(^|[\s;|&]|[<>]\()(?:add|apropos|apt|aptitude|apt-cache|apt-get|aspell|automysqlbackup|awk|basename|bash|bc|bconsole|bg|bzip2|cal|cat|cfdisk|chgrp|chkconfig|chmod|chown|chroot|cksum|clear|cmp|column|comm|composer|cp|cron|crontab|csplit|curl|cut|date|dc|dd|ddrescue|debootstrap|df|diff|diff3|dig|dir|dircolors|dirname|dirs|dmesg|du|egrep|eject|env|ethtool|expand|expect|expr|fdformat|fdisk|fg|fgrep|file|find|fmt|fold|format|free|fsck|ftp|fuser|gawk|git|gparted|grep|groupadd|groupdel|groupmod|groups|grub-mkconfig|gzip|halt|head|hg|history|host|hostname|htop|iconv|id|ifconfig|ifdown|ifup|import|install|ip|jobs|join|kill|killall|less|link|ln|locate|logname|logrotate|look|lpc|lpr|lprint|lprintd|lprintq|lprm|ls|lsof|lynx|make|man|mc|mdadm|mkconfig|mkdir|mke2fs|mkfifo|mkfs|mkisofs|mknod|mkswap|mmv|more|most|mount|mtools|mtr|mutt|mv|nano|nc|netstat|nice|nl|nohup|notify-send|npm|nslookup|op|open|parted|passwd|paste|pathchk|ping|pkill|pnpm|popd|pr|printcap|printenv|ps|pushd|pv|quota|quotacheck|quotactl|ram|rar|rcp|reboot|remsync|rename|renice|rev|rm|rmdir|rpm|rsync|scp|screen|sdiff|sed|sendmail|seq|service|sftp|sh|shellcheck|shuf|shutdown|sleep|slocate|sort|split|ssh|stat|strace|su|sudo|sum|suspend|swapon|sync|tac|tail|tar|tee|time|timeout|top|touch|tr|traceroute|tsort|tty|umount|uname|unexpand|uniq|units|unrar|unshar|unzip|update-grub|uptime|useradd|userdel|usermod|users|uudecode|uuencode|v|vdir|vi|vim|virsh|vmstat|wait|watch|wc|wget|whereis|which|who|whoami|write|xargs|xdg-open|yarn|yes|zenity|zip|zsh|zypper)(?=$|[)\s;|&])/,lookbehind:!0},keyword:{pattern:/(^|[\s;|&]|[<>]\()(?:if|then|else|elif|fi|for|while|in|case|esac|function|select|do|done|until)(?=$|[)\s;|&])/,lookbehind:!0},builtin:{pattern:/(^|[\s;|&]|[<>]\()(?:\.|:|break|cd|continue|eval|exec|exit|export|getopts|hash|pwd|readonly|return|shift|test|times|trap|umask|unset|alias|bind|builtin|caller|command|declare|echo|enable|help|let|local|logout|mapfile|printf|read|readarray|source|type|typeset|ulimit|unalias|set|shopt)(?=$|[)\s;|&])/,lookbehind:!0,alias:"class-name"},boolean:{pattern:/(^|[\s;|&]|[<>]\()(?:true|false)(?=$|[)\s;|&])/,lookbehind:!0},"file-descriptor":{pattern:/\B&\d\b/,alias:"important"},operator:{pattern:/\d?<>|>\||\+=|=[=~]?|!=?|<<[<-]?|[&\d]?>>|\d[<>]&?|[<>][&=]?|&[>&]?|\|[&|]?/,inside:{"file-descriptor":{pattern:/^\d/,alias:"important"}}},punctuation:/\$?\(\(?|\)\)?|\.\.|[{}[\];\\]/,number:{pattern:/(^|\s)(?:[1-9]\d*|0)(?:[.,]\d+)?\b/,lookbehind:!0}},n.inside=e.languages.bash;for(var r=["comment","function-name","for-or-select","assign-left","string","environment","function","keyword","builtin","boolean","file-descriptor","operator","punctuation","number"],i=a.variable[1].inside,s=0;s<r.length;s++)i[r[s]]=e.languages.bash[r[s]];e.languages.shell=e.languages.bash;}(Prism),function(e){var t=/(?:\\.|[^\\\n\r]|(?:\n|\r\n?)(?![\r\n]))/.source;function n(e){return e=e.replace(/<inner>/g,(function(){return t})),RegExp(/((?:^|[^\\])(?:\\{2})*)/.source+"(?:"+e+")")}var a=/(?:\\.|``(?:[^`\r\n]|`(?!`))+``|`[^`\r\n]+`|[^\\|\r\n`])+/.source,r=/\|?__(?:\|__)+\|?(?:(?:\n|\r\n?)|(?![\s\S]))/.source.replace(/__/g,(function(){return a})),i=/\|?[ \t]*:?-{3,}:?[ \t]*(?:\|[ \t]*:?-{3,}:?[ \t]*)+\|?(?:\n|\r\n?)/.source;e.languages.markdown=e.languages.extend("markup",{}),e.languages.insertBefore("markdown","prolog",{"front-matter-block":{pattern:/(^(?:\s*[\r\n])?)---(?!.)[\s\S]*?[\r\n]---(?!.)/,lookbehind:!0,greedy:!0,inside:{punctuation:/^---|---$/,"font-matter":{pattern:/\S+(?:\s+\S+)*/,alias:["yaml","language-yaml"],inside:e.languages.yaml}}},blockquote:{pattern:/^>(?:[\t ]*>)*/m,alias:"punctuation"},table:{pattern:RegExp("^"+r+i+"(?:"+r+")*","m"),inside:{"table-data-rows":{pattern:RegExp("^("+r+i+")(?:"+r+")*$"),lookbehind:!0,inside:{"table-data":{pattern:RegExp(a),inside:e.languages.markdown},punctuation:/\|/}},"table-line":{pattern:RegExp("^("+r+")"+i+"$"),lookbehind:!0,inside:{punctuation:/\||:?-{3,}:?/}},"table-header-row":{pattern:RegExp("^"+r+"$"),inside:{"table-header":{pattern:RegExp(a),alias:"important",inside:e.languages.markdown},punctuation:/\|/}}}},code:[{pattern:/((?:^|\n)[ \t]*\n|(?:^|\r\n?)[ \t]*\r\n?)(?: {4}|\t).+(?:(?:\n|\r\n?)(?: {4}|\t).+)*/,lookbehind:!0,alias:"keyword"},{pattern:/^```[\s\S]*?^```$/m,greedy:!0,inside:{"code-block":{pattern:/^(```.*(?:\n|\r\n?))[\s\S]+?(?=(?:\n|\r\n?)^```$)/m,lookbehind:!0},"code-language":{pattern:/^(```).+/,lookbehind:!0},punctuation:/```/}}],title:[{pattern:/\S.*(?:\n|\r\n?)(?:==+|--+)(?=[ \t]*$)/m,alias:"important",inside:{punctuation:/==+$|--+$/}},{pattern:/(^\s*)#.+/m,lookbehind:!0,alias:"important",inside:{punctuation:/^#+|#+$/}}],hr:{pattern:/(^\s*)([*-])(?:[\t ]*\2){2,}(?=\s*$)/m,lookbehind:!0,alias:"punctuation"},list:{pattern:/(^\s*)(?:[*+-]|\d+\.)(?=[\t ].)/m,lookbehind:!0,alias:"punctuation"},"url-reference":{pattern:/!?\[[^\]]+\]:[\t ]+(?:\S+|<(?:\\.|[^>\\])+>)(?:[\t ]+(?:"(?:\\.|[^"\\])*"|'(?:\\.|[^'\\])*'|\((?:\\.|[^)\\])*\)))?/,inside:{variable:{pattern:/^(!?\[)[^\]]+/,lookbehind:!0},string:/(?:"(?:\\.|[^"\\])*"|'(?:\\.|[^'\\])*'|\((?:\\.|[^)\\])*\))$/,punctuation:/^[\[\]!:]|[<>]/},alias:"url"},bold:{pattern:n(/\b__(?:(?!_)<inner>|_(?:(?!_)<inner>)+_)+__\b|\*\*(?:(?!\*)<inner>|\*(?:(?!\*)<inner>)+\*)+\*\*/.source),lookbehind:!0,greedy:!0,inside:{content:{pattern:/(^..)[\s\S]+(?=..$)/,lookbehind:!0,inside:{}},punctuation:/\*\*|__/}},italic:{pattern:n(/\b_(?:(?!_)<inner>|__(?:(?!_)<inner>)+__)+_\b|\*(?:(?!\*)<inner>|\*\*(?:(?!\*)<inner>)+\*\*)+\*/.source),lookbehind:!0,greedy:!0,inside:{content:{pattern:/(^.)[\s\S]+(?=.$)/,lookbehind:!0,inside:{}},punctuation:/[*_]/}},strike:{pattern:n(/(~~?)(?:(?!~)<inner>)+\2/.source),lookbehind:!0,greedy:!0,inside:{content:{pattern:/(^~~?)[\s\S]+(?=\1$)/,lookbehind:!0,inside:{}},punctuation:/~~?/}},"code-snippet":{pattern:/(^|[^\\`])(?:``[^`\r\n]+(?:`[^`\r\n]+)*``(?!`)|`[^`\r\n]+`(?!`))/,lookbehind:!0,greedy:!0,alias:["code","keyword"]},url:{pattern:n(/!?\[(?:(?!\])<inner>)+\](?:\([^\s)]+(?:[\t ]+"(?:\\.|[^"\\])*")?\)|[ \t]?\[(?:(?!\])<inner>)+\])/.source),lookbehind:!0,greedy:!0,inside:{operator:/^!/,content:{pattern:/(^\[)[^\]]+(?=\])/,lookbehind:!0,inside:{}},variable:{pattern:/(^\][ \t]?\[)[^\]]+(?=\]$)/,lookbehind:!0},url:{pattern:/(^\]\()[^\s)]+/,lookbehind:!0},string:{pattern:/(^[ \t]+)"(?:\\.|[^"\\])*"(?=\)$)/,lookbehind:!0}}}}),["url","bold","italic","strike"].forEach((function(t){["url","bold","italic","strike","code-snippet"].forEach((function(n){t!==n&&(e.languages.markdown[t].inside.content.inside[n]=e.languages.markdown[n]);}));})),e.hooks.add("after-tokenize",(function(e){"markdown"!==e.language&&"md"!==e.language||function e(t){if(t&&"string"!=typeof t)for(var n=0,a=t.length;n<a;n++){var r=t[n];if("code"===r.type){var i=r.content[1],s=r.content[3];if(i&&s&&"code-language"===i.type&&"code-block"===s.type&&"string"==typeof i.content){var o=i.content.replace(/\b#/g,"sharp").replace(/\b\+\+/g,"pp"),l="language-"+(o=(/[a-z][\w-]*/i.exec(o)||[""])[0].toLowerCase());s.alias?"string"==typeof s.alias?s.alias=[s.alias,l]:s.alias.push(l):s.alias=[l];}}else e(r.content);}}(e.tokens);})),e.hooks.add("wrap",(function(t){if("code-block"===t.type){for(var n="",a=0,r=t.classes.length;a<r;a++){var i=t.classes[a],u=/language-(.+)/.exec(i);if(u){n=u[1];break}}var c,d=e.languages[n];if(d)t.content=e.highlight((c=t.content,c.replace(s,"").replace(/&(\w{1,8}|#x?[\da-f]{1,8});/gi,(function(e,t){var n;if("#"===(t=t.toLowerCase())[0])return n="x"===t[1]?parseInt(t.slice(2),16):Number(t.slice(1)),l(n);var a=o[t];return a||e}))),d,n);else if(n&&"none"!==n&&e.plugins.autoloader){var p="md-"+(new Date).valueOf()+"-"+Math.floor(1e16*Math.random());t.attributes.id=p,e.plugins.autoloader.loadLanguages(n,(function(){var t=document.getElementById(p);t&&(t.innerHTML=e.highlight(t.textContent,e.languages[n],n));}));}}}));var s=RegExp(e.languages.markup.tag.pattern.source,"gi"),o={amp:"&",lt:"<",gt:">",quot:'"'},l=String.fromCodePoint||String.fromCharCode;e.languages.md=e.languages.markdown;}(Prism);var dt=["comment","prolog","doctype","cdata","punctuation","namespace","property","tag","boolean","number","constant","symbol","deleted","selector","attr-name","string","builtin","inserted","operator","entity","url","string","atrule","attr-value","keyword","function","class-name","regex","important","variable","bold","italic","entity","char"];function pt(e){return "string"==typeof e?e.length:"string"==typeof e.content?e.content.length:e.content.reduce((function(e,t){return e+pt(t)}),0)}var gt=function(){var e=N(this),t="";return e.global&&(t+="g"),e.ignoreCase&&(t+="i"),e.multiline&&(t+="m"),e.dotAll&&(t+="s"),e.unicode&&(t+="u"),e.sticky&&(t+="y"),t};function ft(e,t){return RegExp(e,t)}var bt,mt,ht={UNSUPPORTED_Y:g((function(){var e=ft("a","y");return e.lastIndex=2,null!=e.exec("abcd")})),BROKEN_CARET:g((function(){var e=ft("^r","gy");return e.lastIndex=2,null!=e.exec("str")}))},yt=RegExp.prototype.exec,Et=B("native-string-replace",String.prototype.replace),St=yt,vt=(bt=/a/,mt=/b*/g,yt.call(bt,"a"),yt.call(mt,"a"),0!==bt.lastIndex||0!==mt.lastIndex),kt=ht.UNSUPPORTED_Y||ht.BROKEN_CARET,wt=void 0!==/()??/.exec("")[1];(vt||wt||kt)&&(St=function(e){var t,n,a,r,i=this,s=kt&&i.sticky,o=gt.call(i),l=i.source,u=0,c=e;return s&&(-1===(o=o.replace("y","")).indexOf("g")&&(o+="g"),c=String(e).slice(i.lastIndex),i.lastIndex>0&&(!i.multiline||i.multiline&&"\n"!==e[i.lastIndex-1])&&(l="(?: "+l+")",c=" "+c,u++),n=new RegExp("^(?:"+l+")",o)),wt&&(n=new RegExp("^"+l+"$(?!\\s)",o)),vt&&(t=i.lastIndex),a=yt.call(s?n:i,c),s?a?(a.input=a.input.slice(u),a[0]=a[0].slice(u),a.index=i.lastIndex,i.lastIndex+=a[0].length):i.lastIndex=0:vt&&a&&(i.lastIndex=i.global?a.index+a[0].length:t),wt&&a&&a.length>1&&Et.call(a[0],n,(function(){for(r=1;r<arguments.length-2;r++)void 0===arguments[r]&&(a[r]=void 0);})),a});it({target:"RegExp",proto:!0,forced:/./.exec!==St},{exec:St});var At={};At[se("toStringTag")]="z";var Tt="[object z]"===String(At),_t=se("toStringTag"),xt="Arguments"==b(function(){return arguments}()),It=Tt?b:function(e){var t,n,a;return void 0===e?"Undefined":null===e?"Null":"string"==typeof(n=function(e,t){try{return e[t]}catch(e){}}(t=Object(e),_t))?n:xt?b(t):"Object"==(a=b(t))&&"function"==typeof t.callee?"Arguments":a},Ot=Tt?{}.toString:function(){return "[object "+It(this)+"]"};Tt||Be(Object.prototype,"toString",Ot,{unsafe:!0});var Rt=RegExp.prototype,Nt=Rt.toString,Lt=g((function(){return "/a/b"!=Nt.call({source:"a",flags:"b"})})),Pt="toString"!=Nt.name;(Lt||Pt)&&Be(RegExp.prototype,"toString",(function(){var e=N(this),t=String(e.source),n=e.flags;return "/"+t+"/"+String(void 0===n&&e instanceof RegExp&&!("flags"in Rt)?gt.call(e):n)}),{unsafe:!0});var Ct=function(){function e(){this.title=qc$1("highLightModule.selectLang"),this.iconSvg='<svg viewBox="0 0 1024 1024"><path d="M64 64v896h896V64H64z m487.6 698.8c0 87.2-51.2 127-125.8 127-67.4 0-106.4-34.8-126.4-77l68.6-41.4c13.2 23.4 25.2 43.2 54.2 43.2 27.6 0 45.2-10.8 45.2-53V475.4h84.2v287.4z m199.2 127c-78.2 0-128.8-37.2-153.4-86l68.6-39.6c18 29.4 41.6 51.2 83 51.2 34.8 0 57.2-17.4 57.2-41.6 0-28.8-22.8-39-61.4-56l-21-9c-60.8-25.8-101-58.4-101-127 0-63.2 48.2-111.2 123.2-111.2 53.6 0 92 18.6 119.6 67.4L800 580c-14.4-25.8-30-36-54.2-36-24.6 0-40.2 15.6-40.2 36 0 25.2 15.6 35.4 51.8 51.2l21 9c71.6 30.6 111.8 62 111.8 132.4 0 75.6-59.6 117.2-139.4 117.2z"></path></svg>',this.tag="select",this.width=95,this.selectPanelWidth=115;}return e.prototype.getOptions=function(e){var t=[],n=e.getMenuConfig("codeSelectLang").codeLangs,a=void 0===n?[]:n;t.push({text:"plain text",value:""}),a.forEach((function(e){var n=e.text,a=e.value;t.push({text:n,value:a});}));var r=this.getValue(e);return t.forEach((function(e){e.value===r?e.selected=!0:delete e.selected;})),t},e.prototype.isActive=function(e){return !1},e.prototype.getValue=function(e){var t=this.getSelectCodeElem(e);return null==t?"":Element$1.isElement(t)&&t.language||""},e.prototype.isDisabled=function(e){return null==e.selection||!this.getSelectCodeElem(e)},e.prototype.exec=function(e,t){if(null!=this.getSelectCodeElem(e)){var a={language:t.toString()};Transforms.setNodes(e,a,{match:function(e){return fi$1.checkNodeType(e,"code")}});}},e.prototype.getSelectCodeElem=function(e){var t=fi$1.getSelectedNodeByType(e,"code");if(null==t)return null;var r=fi$1.getParentNode(e,t);return Element$1.isElement(r)?"pre"!==r.type?null:t:null},e}();var Ft={renderTextStyle:function(e,t){var n=e,a=t,r="";return dt.forEach((function(e){n[e]&&(r=e);})),r&&function(e,t){null==e.data&&(e.data={});var n=e.data;null==n.props&&(n.props={}),Object.assign(n.props,{className:t});}(a,r="token "+r),a},menus:[{key:"codeSelectLang",factory:function(){return new Ct},config:{codeLangs:[{text:"CSS",value:"css"},{text:"HTML",value:"html"},{text:"XML",value:"xml"},{text:"Javascript",value:"javascript"},{text:"Typescript",value:"typescript"},{text:"JSX",value:"jsx"},{text:"Go",value:"go"},{text:"PHP",value:"php"},{text:"C",value:"c"},{text:"Python",value:"python"},{text:"Java",value:"java"},{text:"C++",value:"cpp"},{text:"C#",value:"csharp"},{text:"Visual Basic",value:"visual-basic"},{text:"SQL",value:"sql"},{text:"Ruby",value:"ruby"},{text:"Swift",value:"swift"},{text:"Bash",value:"bash"},{text:"Markdown",value:"markdown"}]}}],elemsToHtml:[{type:"code",elemToHtml:function(e,t,n){var a=e.language,r=void 0===a?"":a;return "<code "+(r?'class="language-'+r+'"':"")+">"+t+"</code>"}}]},Dt=/"/g;it({target:"String",proto:!0,forced:function(e){return g((function(){var t=""[e]('"');return t!==t.toLowerCase()||t.split('"').length>3}))}("anchor")},{anchor:function(e){return t="a",n="name",a=e,r=String(y(this)),i="<"+t,""!==n&&(i+=" "+n+'="'+String(a).replace(Dt,"&quot;")+'"'),i+">"+r+"</"+t+">";var t,n,a,r,i;}});var Mt=function(e){var t,a,r,s=function(e,t){var n="function"==typeof Symbol&&e[Symbol.iterator];if(!n)return e;var a,r,i=n.call(e),s=[];try{for(;(void 0===t||t-- >0)&&!(a=i.next()).done;)s.push(a.value);}catch(e){r={error:e};}finally{try{a&&!a.done&&(n=i.return)&&n.call(i);}finally{if(r)throw r.error}}return s}(e,2),o=s[0],l=s[1],u=[],c=function(e){if(!Text.isText(e))return null;var t=fi$1.getParentNode(null,e);if(t&&"code"===fi$1.getNodeType(t)){var a=fi$1.getParentNode(null,t);if(a&&"pre"===fi$1.getNodeType(a))return t}return null}(o);if(null==c)return u;var d=c.language,p=void 0===d?"":d;if(!p)return u;var g=function(e,t){return t?ct.tokenize(e.text,ct.languages[t]):[]}(o,p),f=0;try{for(var b=
  /*! *****************************************************************************
  Copyright (c) Microsoft Corporation.

  Permission to use, copy, modify, and/or distribute this software for any
  purpose with or without fee is hereby granted.

  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
  PERFORMANCE OF THIS SOFTWARE.
  ***************************************************************************** */
  function(e){var t="function"==typeof Symbol&&Symbol.iterator,n=t&&e[t],a=0;if(n)return n.call(e);if(e&&"number"==typeof e.length)return {next:function(){return e&&a>=e.length&&(e=void 0),{value:e&&e[a++],done:!e}}};throw new TypeError(t?"Object is not iterable.":"Symbol.iterator is not defined.")}(g),m=b.next();!m.done;m=b.next()){var h=m.value,y=f+pt(h);"string"!=typeof h&&u.push(((r={})[h.type]=!0,r.anchor={path:l,offset:f},r.focus={path:l,offset:y},r)),f=y;}}catch(e){t={error:e};}finally{try{m&&!m.done&&(a=b.return)&&a.call(b);}finally{if(t)throw t.error}}return u};

  /*! *****************************************************************************
  Copyright (c) Microsoft Corporation.

  Permission to use, copy, modify, and/or distribute this software for any
  purpose with or without fee is hereby granted.

  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
  PERFORMANCE OF THIS SOFTWARE.
  ***************************************************************************** */

  var __assign = function() {
      __assign = Object.assign || function __assign(t) {
          for (var s, i = 1, n = arguments.length; i < n; i++) {
              s = arguments[i];
              for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
          }
          return t;
      };
      return __assign.apply(this, arguments);
  };

  function __read(o, n) {
      var m = typeof Symbol === "function" && o[Symbol.iterator];
      if (!m) return o;
      var i = m.call(o), r, ar = [], e;
      try {
          while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
      }
      catch (error) { e = { error: error }; }
      finally {
          try {
              if (r && !r.done && (m = i["return"])) m.call(i);
          }
          finally { if (e) throw e.error; }
      }
      return ar;
  }

  function __spreadArray(to, from) {
      for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)
          to[j] = from[i];
      return to;
  }

  /**
   * @description Editor View class
   * @author wangfupeng
   */
  var Boot = /** @class */ (function () {
      function Boot() {
          throw new Error('不能实例化\nCan not construct a instance');
      }
      Boot.setEditorConfig = function (newConfig) {
          if (newConfig === void 0) { newConfig = {}; }
          this.editorConfig = __assign(__assign({}, this.editorConfig), newConfig);
      };
      Boot.setSimpleEditorConfig = function (newConfig) {
          if (newConfig === void 0) { newConfig = {}; }
          this.simpleEditorConfig = __assign(__assign({}, this.simpleEditorConfig), newConfig);
      };
      Boot.setToolbarConfig = function (newConfig) {
          if (newConfig === void 0) { newConfig = {}; }
          this.toolbarConfig = __assign(__assign({}, this.toolbarConfig), newConfig);
      };
      Boot.setSimpleToolbarConfig = function (newConfig) {
          if (newConfig === void 0) { newConfig = {}; }
          this.simpleToolbarConfig = __assign(__assign({}, this.simpleToolbarConfig), newConfig);
      };
      Boot.registerPlugin = function (plugin) {
          this.plugins.push(plugin);
      };
      // 注册 menu
      // TODO 可在注册时传入配置，在开发文档中说明
      Boot.registerMenu = function (menuConf, customConfig) {
          gi$1(menuConf, customConfig);
      };
      // 注册 renderElem
      Boot.registerRenderElem = function (renderElemConf) {
          Kl$1(renderElemConf);
      };
      // 注册 renderTextStyle
      Boot.registerRenderTextStyle = function (fn) {
          Vl$1(fn);
      };
      // 注册 elemToHtml
      Boot.registerElemToHtml = function (elemToHtmlConf) {
          Mi$1(elemToHtmlConf);
      };
      // 注册 textToHtml
      Boot.registerTextToHtml = function (fn) {
          Ci$1(fn);
      };
      // 注册 textStyleToHtml
      Boot.registerTextStyleToHtml = function (fn) {
          Ei$1(fn);
      };
      // editor 配置
      Boot.editorConfig = {};
      Boot.simpleEditorConfig = {};
      //toolbar 配置
      Boot.toolbarConfig = {};
      Boot.simpleToolbarConfig = {};
      // 注册插件
      Boot.plugins = [];
      return Boot;
  }());

  /**
   * @description 注册 module
   * @author wangfupeng
   */
  function registerModule(module) {
      var menus = module.menus, renderElems = module.renderElems, renderTextStyle = module.renderTextStyle, elemsToHtml = module.elemsToHtml, textToHtml = module.textToHtml, textStyleToHtml = module.textStyleToHtml, editorPlugin = module.editorPlugin;
      if (menus) {
          menus.forEach(function (menu) { return Boot.registerMenu(menu); });
      }
      if (renderElems) {
          renderElems.forEach(function (renderElemConf) { return Boot.registerRenderElem(renderElemConf); });
      }
      if (renderTextStyle) {
          Boot.registerRenderTextStyle(renderTextStyle);
      }
      if (elemsToHtml) {
          elemsToHtml.forEach(function (elemToHtmlConf) { return Boot.registerElemToHtml(elemToHtmlConf); });
      }
      if (textToHtml) {
          Boot.registerTextToHtml(textToHtml);
      }
      if (textStyleToHtml) {
          Boot.registerTextStyleToHtml(textStyleToHtml);
      }
      if (editorPlugin) {
          Boot.registerPlugin(editorPlugin);
      }
  }

  /**
   * @description register builtin modules
   * @author wangfupeng
   */
  Yl.forEach(function (module) { return registerModule(module); });
  registerModule(Re$4);
  registerModule(Kn$1);
  registerModule(mr$1);
  registerModule(Xr);
  registerModule(Ft);

  /**
   * @description svg tag
   * @author wangfupeng
   */
  /**
   * 【注意】svg 字符串的长度 ，否则会导致代码体积过大
   * 尽量选择 https://www.iconfont.cn/collections/detail?spm=a313x.7781069.0.da5a778a4&cid=20293
   * 找不到再从 iconfont.com 搜索
   */
  // 缩进 right
  var INDENT_RIGHT_SVG = '<svg viewBox="0 0 1024 1024"><path d="M0 64h1024v128H0z m384 192h640v128H384z m0 192h640v128H384z m0 192h640v128H384zM0 832h1024v128H0z m0-128V320l256 192z"></path></svg>';
  // 左对齐
  var JUSTIFY_LEFT_SVG = '<svg viewBox="0 0 1024 1024"><path d="M768 793.6v102.4H51.2v-102.4h716.8z m204.8-230.4v102.4H51.2v-102.4h921.6z m-204.8-230.4v102.4H51.2v-102.4h716.8zM972.8 102.4v102.4H51.2V102.4h921.6z"></path></svg>';
  // 图片
  var IMAGE_SVG = '<svg viewBox="0 0 1024 1024"><path d="M959.877 128l0.123 0.123v767.775l-0.123 0.122H64.102l-0.122-0.122V128.123l0.122-0.123h895.775zM960 64H64C28.795 64 0 92.795 0 128v768c0 35.205 28.795 64 64 64h896c35.205 0 64-28.795 64-64V128c0-35.205-28.795-64-64-64zM832 288.01c0 53.023-42.988 96.01-96.01 96.01s-96.01-42.987-96.01-96.01S682.967 192 735.99 192 832 234.988 832 288.01zM896 832H128V704l224.01-384 256 320h64l224.01-192z"></path></svg>';
  // plus
  var MORE_SVG = '<svg viewBox="0 0 1024 1024"><path d="M204.8 505.6m-76.8 0a76.8 76.8 0 1 0 153.6 0 76.8 76.8 0 1 0-153.6 0Z"></path><path d="M505.6 505.6m-76.8 0a76.8 76.8 0 1 0 153.6 0 76.8 76.8 0 1 0-153.6 0Z"></path><path d="M806.4 505.6m-76.8 0a76.8 76.8 0 1 0 153.6 0 76.8 76.8 0 1 0-153.6 0Z"></path></svg>';

  /**
   * @description toolbar 配置
   * @author wangfupeng
   */
  function genDefaultToolbarKeys() {
      return [
          'headerSelect',
          // 'header1',
          // 'header2',
          // 'header3',
          'blockquote',
          '|',
          'bold',
          'underline',
          'italic',
          {
              key: 'group-more-style',
              title: qc$1('editor.more'),
              iconSvg: MORE_SVG,
              menuKeys: ['through', 'code', 'sup', 'sub', 'clearStyle'],
          },
          'color',
          'bgColor',
          '|',
          'fontSize',
          'fontFamily',
          'lineHeight',
          '|',
          'bulletedList',
          'numberedList',
          {
              key: 'group-justify',
              title: qc$1('editor.justify'),
              iconSvg: JUSTIFY_LEFT_SVG,
              menuKeys: ['justifyLeft', 'justifyRight', 'justifyCenter', 'justifyJustify'],
          },
          {
              key: 'group-indent',
              title: qc$1('editor.indent'),
              iconSvg: INDENT_RIGHT_SVG,
              menuKeys: ['indent', 'delIndent'],
          },
          '|',
          'emotion',
          'insertLink',
          // 'editLink',
          // 'unLink',
          // 'viewLink',
          {
              key: 'group-image',
              title: qc$1('editor.image'),
              iconSvg: IMAGE_SVG,
              menuKeys: ['insertImage', 'uploadImage'],
          },
          // 'deleteImage',
          // 'editImage',
          // 'viewImageLink',
          'insertVideo',
          // 'deleteVideo',
          'insertTable',
          'codeBlock',
          // 'codeSelectLang',
          'divider',
          // 'deleteTable',
          '|',
          'undo',
          'redo',
          '|',
          'fullScreen',
      ];
  }
  function genSimpleToolbarKeys() {
      return [
          'blockquote',
          'header1',
          'header2',
          'header3',
          '|',
          'bold',
          'underline',
          'italic',
          'through',
          'color',
          'bgColor',
          'clearStyle',
          '|',
          'bulletedList',
          'numberedList',
          'justifyLeft',
          'justifyRight',
          'justifyCenter',
          '|',
          'insertLink',
          {
              key: 'group-image',
              title: qc$1('editor.image'),
              iconSvg: IMAGE_SVG,
              menuKeys: ['insertImage', 'uploadImage'],
          },
          'insertTable',
          'codeBlock',
          '|',
          'undo',
          'redo',
          '|',
          'fullScreen',
      ];
  }

  /**
   * @description hoverbar 配置
   * @author wangfupeng
   */
  var COMMON_HOVERBAR_KEYS = [
      {
          desc: '选中链接 selected link',
          match: function (editor, n) { return fi$1.checkNodeType(n, 'link'); },
          menuKeys: ['editLink', 'unLink', 'viewLink'],
      },
      {
          desc: '选中图片 selected image',
          match: function (editor, n) { return fi$1.checkNodeType(n, 'image'); },
          menuKeys: [
              'imageWidth30',
              'imageWidth50',
              'imageWidth100',
              'editImage',
              'viewImageLink',
              'deleteImage',
          ],
      },
      {
          desc: '选中视频 selected video',
          match: function (editor, n) { return fi$1.checkNodeType(n, 'video'); },
          menuKeys: ['deleteVideo'],
      },
      {
          desc: '选中代码块 selected code block',
          match: function (editor, n) { return fi$1.checkNodeType(n, 'pre'); },
          menuKeys: ['codeBlock', 'codeSelectLang'],
      },
      {
          desc: '选中表格 selected table',
          match: function (editor, n) { return fi$1.checkNodeType(n, 'table'); },
          menuKeys: [
              'tableHeader',
              'tableFullWidth',
              'insertTableRow',
              'deleteTableRow',
              'insertTableCol',
              'deleteTableCol',
              'deleteTable',
          ],
      },
  ];
  function genDefaultHoverbarKeys() {
      return __spreadArray(__spreadArray([], __read(COMMON_HOVERBAR_KEYS)), [
          {
              desc: '选中文本 selected text',
              match: function (editor, n) {
                  var selection = editor.selection;
                  if (selection == null)
                      return false; // 无选区
                  if (Range.isCollapsed(selection))
                      return false; // 未选中文字，选区的是折叠的
                  var selectedElems = fi$1.getSelectedElems(editor);
                  var notMatch = selectedElems.some(function (elem) {
                      if (editor.isVoid(elem))
                          return true;
                      var type = elem.type;
                      if (['pre', 'code'].includes(type))
                          return true;
                  });
                  if (notMatch)
                      return false;
                  if (Text.isText(n))
                      return true; // 匹配 text node
                  return false;
              },
              menuKeys: [
                  'headerSelect',
                  'insertLink',
                  'bulletedList',
                  '|',
                  'bold',
                  'through',
                  'color',
                  'bgColor',
                  'clearStyle',
              ],
          },
      ]);
  }
  function genSimpleHoverbarKeys() {
      return COMMON_HOVERBAR_KEYS;
  }

  /**
   * @description 获取编辑器默认配置
   * @author wangfupeng
   */
  function getDefaultEditorConfig() {
      return {
          hoverbarKeys: genDefaultHoverbarKeys(),
      };
  }
  function getSimpleEditorConfig() {
      return {
          hoverbarKeys: genSimpleHoverbarKeys(),
      };
  }
  function getDefaultToolbarConfig() {
      return {
          toolbarKeys: genDefaultToolbarKeys(),
      };
  }
  function getSimpleToolbarConfig() {
      return {
          toolbarKeys: genSimpleToolbarKeys(),
      };
  }

  /**
   * @description set default config
   * @author wangfupeng
   */
  var defaultEditorConfig = getDefaultEditorConfig();
  Boot.setEditorConfig(__assign(__assign({}, defaultEditorConfig), { decorate: Mt }));
  var simpleEditorConfig = getSimpleEditorConfig();
  Boot.setSimpleEditorConfig(__assign(__assign({}, simpleEditorConfig), { decorate: Mt }));
  var defaultToolbarConfig = getDefaultToolbarConfig();
  Boot.setToolbarConfig(defaultToolbarConfig);
  var simpleToolbarConfig = getSimpleToolbarConfig();
  Boot.setSimpleToolbarConfig(simpleToolbarConfig);

  /**
   * @description create
   * @author wangfupeng
   */
  /**
   * 创建 editor 实例
   */
  function createEditor(option) {
      if (option === void 0) { option = {}; }
      var _a = option.textareaSelector, textareaSelector = _a === void 0 ? '' : _a, _b = option.content, content = _b === void 0 ? [] : _b, _c = option.config, config = _c === void 0 ? {} : _c, _d = option.mode, mode = _d === void 0 ? 'default' : _d;
      var globalConfig = mode === 'simple' ? Boot.simpleEditorConfig : Boot.editorConfig;
      var editor = Hu$1({
          textareaSelector: textareaSelector,
          config: __assign(__assign({}, globalConfig), config),
          content: content,
          plugins: Boot.plugins,
      });
      return editor;
  }
  /**
   * 创建 toolbar 实例
   */
  function createToolbar(option) {
      var toolbarSelector = option.toolbarSelector, editor = option.editor, _a = option.config, config = _a === void 0 ? {} : _a, _b = option.mode, mode = _b === void 0 ? 'default' : _b;
      if (!toolbarSelector) {
          throw new Error("Cannot find 'toolbarSelector' when create toolbar");
      }
      var globalConfig = mode === 'simple' ? Boot.simpleToolbarConfig : Boot.toolbarConfig;
      var toolbar = Yu$1(editor, {
          toolbarSelector: toolbarSelector,
          config: __assign(__assign({}, globalConfig), config),
      });
      return toolbar;
  }

  /**
   * @description editor entry
   * @author wangfupeng
   */
  var index = {};

  exports.Boot = Boot;
  exports.DomEditor = fi$1;
  exports.SlateEditor = Editor;
  exports.SlateElement = Element$1;
  exports.SlateLocation = Location;
  exports.SlateNode = Node$1;
  exports.SlatePath = Path;
  exports.SlatePoint = Point;
  exports.SlateRange = Range;
  exports.SlateText = Text;
  exports.SlateTransforms = Transforms;
  exports.Toolbar = Gu$1;
  exports.createEditor = createEditor;
  exports.createToolbar = createToolbar;
  exports.default = index;
  exports.i18nAddResources = Kc$1;
  exports.i18nChangeLanguage = Hc$1;

  Object.defineProperty(exports, '__esModule', { value: true });

})));
